{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[3],{m0r1:function(t,e,i){\"use strict\";i.d(e,\"a\",(function(){return Qt})),i.d(e,\"c\",(function(){return Ri}));var n=i(\"3T2N\");i.d(e,\"b\",(function(){return n.vb}));var o=new class{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(t,e,i,n){const o=e.listeners[n],s=e.duration;o.forEach((n=>n({chart:t,numSteps:s,currentStep:Math.min(i-e.start,s)})))}_refresh(){const t=this;t._request||(t._running=!0,t._request=n.Jb.call(window,(()=>{t._update(),t._request=null,t._running&&t._refresh()})))}_update(t=Date.now()){const e=this;let i=0;e._charts.forEach(((n,o)=>{if(!n.running||!n.items.length)return;const s=n.items;let a,r=s.length-1,l=!1;for(;r>=0;--r)a=s[r],a._active?(a._total>n.duration&&(n.duration=a._total),a.tick(t),l=!0):(s[r]=s[s.length-1],s.pop());l&&(o.draw(),e._notify(o,n,t,\"progress\")),s.length||(n.running=!1,e._notify(o,n,t,\"complete\")),i+=s.length})),e._lastDate=t,0===i&&(e._running=!1)}_getAnims(t){const e=this._charts;let i=e.get(t);return i||(i={running:!1,items:[],listeners:{complete:[],progress:[]}},e.set(t,i)),i}listen(t,e,i){this._getAnims(t).listeners[e].push(i)}add(t,e){e&&e.length&&this._getAnims(t).items.push(...e)}has(t){return this._getAnims(t).items.length>0}start(t){const e=this._charts.get(t);e&&(e.running=!0,e.start=Date.now(),e.duration=e.items.reduce(((t,e)=>Math.max(t,e._duration)),0),this._refresh())}running(t){if(!this._running)return!1;const e=this._charts.get(t);return!!(e&&e.running&&e.items.length)}stop(t){const e=this._charts.get(t);if(!e||!e.items.length)return;const i=e.items;let n=i.length-1;for(;n>=0;--n)i[n].cancel();e.items=[],this._notify(t,e,Date.now(),\"complete\")}remove(t){return this._charts.delete(t)}};const s=\"transparent\",a={boolean:(t,e,i)=>i>.5?e:t,color(t,e,i){const o=Object(n.ub)(t||s),a=o.valid&&Object(n.ub)(e||s);return a&&a.valid?a.mix(o,i).hexString():e},number:(t,e,i)=>t+(e-t)*i};class r{constructor(t,e,i,o){const s=e[i];o=Object(n.C)([t.to,o,s,t.from]);const r=Object(n.C)([t.from,s,o]);this._active=!0,this._fn=t.fn||a[t.type||typeof r],this._easing=n.wb[t.easing]||n.wb.linear,this._start=Math.floor(Date.now()+(t.delay||0)),this._duration=this._total=Math.floor(t.duration),this._loop=!!t.loop,this._target=e,this._prop=i,this._from=r,this._to=o,this._promises=void 0}active(){return this._active}update(t,e,i){const o=this;if(o._active){o._notify(!1);const s=o._target[o._prop],a=i-o._start,r=o._duration-a;o._start=i,o._duration=Math.floor(Math.max(r,t.duration)),o._total+=a,o._loop=!!t.loop,o._to=Object(n.C)([t.to,e,s,t.from]),o._from=Object(n.C)([t.from,s,e])}}cancel(){const t=this;t._active&&(t.tick(Date.now()),t._active=!1,t._notify(!1))}tick(t){const e=this,i=t-e._start,n=e._duration,o=e._prop,s=e._from,a=e._loop,r=e._to;let l;if(e._active=s!==r&&(a||i<n),!e._active)return e._target[o]=r,void e._notify(!0);i<0?e._target[o]=s:(l=i/n%2,l=a&&l>1?2-l:l,l=e._easing(Math.min(1,Math.max(0,l))),e._target[o]=e._fn(s,r,l))}wait(){const t=this._promises||(this._promises=[]);return new Promise(((e,i)=>{t.push({res:e,rej:i})}))}_notify(t){const e=t?\"res\":\"rej\",i=this._promises||[];for(let n=0;n<i.length;n++)i[n][e]()}}n.vb.set(\"animation\",{delay:void 0,duration:1e3,easing:\"easeOutQuart\",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0});const l=Object.keys(n.vb.animation);n.vb.describe(\"animation\",{_fallback:!1,_indexable:!1,_scriptable:t=>\"onProgress\"!==t&&\"onComplete\"!==t&&\"fn\"!==t}),n.vb.set(\"animations\",{colors:{type:\"color\",properties:[\"color\",\"borderColor\",\"backgroundColor\"]},numbers:{type:\"number\",properties:[\"x\",\"y\",\"borderWidth\",\"radius\",\"tension\"]}}),n.vb.describe(\"animations\",{_fallback:\"animation\"}),n.vb.set(\"transitions\",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:\"transparent\"},visible:{type:\"boolean\",duration:0}}},hide:{animations:{colors:{to:\"transparent\"},visible:{type:\"boolean\",easing:\"linear\",fn:t=>0|t}}}});class c{constructor(t,e){this._chart=t,this._properties=new Map,this.configure(e)}configure(t){if(!Object(n.Ab)(t))return;const e=this._properties;Object.getOwnPropertyNames(t).forEach((i=>{const o=t[i];if(!Object(n.Ab)(o))return;const s={};for(const t of l)s[t]=o[t];(Object(n.tb)(o.properties)&&o.properties||[i]).forEach((t=>{t!==i&&e.has(t)||e.set(t,s)}))}))}_animateOptions(t,e){const i=e.options,n=function(t,e){if(!e)return;let i=t.options;if(!i)return void(t.options=e);i.$shared&&(t.options=i=Object.assign({},i,{$shared:!1,$animations:{}}));return i}(t,i);if(!n)return[];const o=this._createAnimations(n,i);return i.$shared&&function(t,e){const i=[],n=Object.keys(e);for(let o=0;o<n.length;o++){const e=t[n[o]];e&&e.active()&&i.push(e.wait())}return Promise.all(i)}(t.options.$animations,i).then((()=>{t.options=i}),(()=>{})),o}_createAnimations(t,e){const i=this._properties,n=[],o=t.$animations||(t.$animations={}),s=Object.keys(e),a=Date.now();let l;for(l=s.length-1;l>=0;--l){const c=s[l];if(\"$\"===c.charAt(0))continue;if(\"options\"===c){n.push(...this._animateOptions(t,e));continue}const h=e[c];let d=o[c];const u=i.get(c);if(d){if(u&&d.active()){d.update(u,h,a);continue}d.cancel()}u&&u.duration?(o[c]=d=new r(u,t,c,h),n.push(d)):t[c]=h}return n}update(t,e){if(0===this._properties.size)return void Object.assign(t,e);const i=this._createAnimations(t,e);return i.length?(o.add(this._chart,i),!0):void 0}}function h(t,e){const i=t&&t.options||{},n=i.reverse,o=void 0===i.min?e:0,s=void 0===i.max?e:0;return{start:n?s:o,end:n?o:s}}function d(t,e){const i=[],n=t._getSortedDatasetMetas(e);let o,s;for(o=0,s=n.length;o<s;++o)i.push(n[o].index);return i}function u(t,e,i,o){const s=t.keys,a=\"single\"===o.mode;let r,l,c,h;if(null!==e){for(r=0,l=s.length;r<l;++r){if(c=+s[r],c===i){if(o.all)continue;break}h=t.values[c],Object(n.yb)(h)&&(a||0===e||Object(n.Kb)(e)===Object(n.Kb)(h))&&(e+=h)}return e}}function g(t,e){const i=t&&t.options.stacked;return i||void 0===i&&void 0!==e.stack}function b(t,e,i){const n=t[e]||(t[e]={});return n[i]||(n[i]={})}function p(t,e){const{chart:i,_cachedMeta:n}=t,o=i._stacks||(i._stacks={}),{iScale:s,vScale:a,index:r}=n,l=s.axis,c=a.axis,h=function(t,e,i){return`${t.id}.${e.id}.${i.stack||i.type}`}(s,a,n),d=e.length;let u;for(let g=0;g<d;++g){const t=e[g],{[l]:i,[c]:n}=t;u=(t._stacks||(t._stacks={}))[c]=b(o,h,i),u[r]=n}}function f(t,e){const i=t.scales;return Object.keys(i).filter((t=>i[t].axis===e)).shift()}function m(t,e){e=e||t._parsed;for(const i of e){const e=i._stacks;if(!e||void 0===e[t.vScale.id]||void 0===e[t.vScale.id][t.index])return;delete e[t.vScale.id][t.index]}}const x=t=>\"reset\"===t||\"none\"===t,_=(t,e)=>e?t:Object.assign({},t);class y{constructor(t,e){this.chart=t,this._ctx=t.ctx,this.index=e,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.$context=void 0,this.initialize()}initialize(){const t=this,e=t._cachedMeta;t.configure(),t.linkScales(),e._stacked=g(e.vScale,e),t.addElements()}updateIndex(t){this.index=t}linkScales(){const t=this,e=t.chart,i=t._cachedMeta,o=t.getDataset(),s=(t,e,i,n)=>\"x\"===t?e:\"r\"===t?n:i,a=i.xAxisID=Object(n.Nb)(o.xAxisID,f(e,\"x\")),r=i.yAxisID=Object(n.Nb)(o.yAxisID,f(e,\"y\")),l=i.rAxisID=Object(n.Nb)(o.rAxisID,f(e,\"r\")),c=i.indexAxis,h=i.iAxisID=s(c,a,r,l),d=i.vAxisID=s(c,r,a,l);i.xScale=t.getScaleForId(a),i.yScale=t.getScaleForId(r),i.rScale=t.getScaleForId(l),i.iScale=t.getScaleForId(h),i.vScale=t.getScaleForId(d)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(t){return this.chart.scales[t]}_getOtherScale(t){const e=this._cachedMeta;return t===e.iScale?e.vScale:e.iScale}reset(){this._update(\"reset\")}_destroy(){const t=this._cachedMeta;this._data&&Object(n.Mb)(this._data,this),t._stacked&&m(t)}_dataCheck(){const t=this,e=t.getDataset(),i=e.data||(e.data=[]);Object(n.Ab)(i)?t._data=function(t){const e=Object.keys(t),i=new Array(e.length);let n,o,s;for(n=0,o=e.length;n<o;++n)s=e[n],i[n]={x:s,y:t[s]};return i}(i):t._data!==i&&(t._data&&(Object(n.Mb)(t._data,t),m(t._cachedMeta)),i&&Object.isExtensible(i)&&Object(n.Db)(i,t),t._data=i)}addElements(){const t=this,e=t._cachedMeta;t._dataCheck(),t.datasetElementType&&(e.dataset=new t.datasetElementType)}buildOrUpdateElements(t){const e=this,i=e._cachedMeta,n=e.getDataset();let o=!1;e._dataCheck(),i._stacked=g(i.vScale,i),i.stack!==n.stack&&(o=!0,m(i),i.stack=n.stack),e._resyncElements(t),o&&p(e,i._parsed)}configure(){const t=this,e=t.chart.config,i=e.datasetScopeKeys(t._type),n=e.getOptionScopes(t.getDataset(),i,!0);t.options=e.createResolver(n,t.getContext()),t._parsing=t.options.parsing}parse(t,e){const i=this,{_cachedMeta:o,_data:s}=i,{iScale:a,_stacked:r}=o,l=a.axis;let c,h,d,u=0===t&&e===s.length||o._sorted,g=t>0&&o._parsed[t-1];if(!1===i._parsing)o._parsed=s,o._sorted=!0;else{d=Object(n.tb)(s[t])?i.parseArrayData(o,s,t,e):Object(n.Ab)(s[t])?i.parseObjectData(o,s,t,e):i.parsePrimitiveData(o,s,t,e);const a=()=>null===h[l]||g&&h[l]<g[l];for(c=0;c<e;++c)o._parsed[c+t]=h=d[c],u&&(a()&&(u=!1),g=h);o._sorted=u}r&&p(i,d)}parsePrimitiveData(t,e,i,n){const{iScale:o,vScale:s}=t,a=o.axis,r=s.axis,l=o.getLabels(),c=o===s,h=new Array(n);let d,u,g;for(d=0,u=n;d<u;++d)g=d+i,h[d]={[a]:c||o.parse(l[g],g),[r]:s.parse(e[g],g)};return h}parseArrayData(t,e,i,n){const{xScale:o,yScale:s}=t,a=new Array(n);let r,l,c,h;for(r=0,l=n;r<l;++r)c=r+i,h=e[c],a[r]={x:o.parse(h[0],c),y:s.parse(h[1],c)};return a}parseObjectData(t,e,i,o){const{xScale:s,yScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=new Array(o);let h,d,u,g;for(h=0,d=o;h<d;++h)u=h+i,g=e[u],c[h]={x:s.parse(Object(n.xb)(g,r),u),y:a.parse(Object(n.xb)(g,l),u)};return c}getParsed(t){return this._cachedMeta._parsed[t]}getDataElement(t){return this._cachedMeta.data[t]}applyStack(t,e,i){const n=this.chart,o=this._cachedMeta,s=e[t.axis];return u({keys:d(n,!0),values:e._stacks[t.axis]},s,o.index,{mode:i})}updateRangeFromParsed(t,e,i,n){const o=i[e.axis];let s=null===o?NaN:o;const a=n&&i._stacks[e.axis];n&&a&&(n.values=a,t.min=Math.min(t.min,s),t.max=Math.max(t.max,s),s=u(n,o,this._cachedMeta.index,{all:!0})),t.min=Math.min(t.min,s),t.max=Math.max(t.max,s)}getMinMax(t,e){const i=this,o=i._cachedMeta,s=o._parsed,a=o._sorted&&t===o.iScale,r=s.length,l=i._getOtherScale(t),c=e&&o._stacked&&{keys:d(i.chart,!0),values:null},h={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:u,max:g}=function(t){const{min:e,max:i,minDefined:n,maxDefined:o}=t.getUserBounds();return{min:n?e:Number.NEGATIVE_INFINITY,max:o?i:Number.POSITIVE_INFINITY}}(l);let b,p,f,m;function x(){return f=s[b],p=f[t.axis],m=f[l.axis],!Object(n.yb)(p)||u>m||g<m}for(b=0;b<r&&(x()||(i.updateRangeFromParsed(h,t,f,c),!a));++b);if(a)for(b=r-1;b>=0;--b)if(!x()){i.updateRangeFromParsed(h,t,f,c);break}return h}getAllParsedValues(t){const e=this._cachedMeta._parsed,i=[];let o,s,a;for(o=0,s=e.length;o<s;++o)a=e[o][t.axis],Object(n.yb)(a)&&i.push(a);return i}getMaxOverflow(){return!1}getLabelAndValue(t){const e=this._cachedMeta,i=e.iScale,n=e.vScale,o=this.getParsed(t);return{label:i?\"\"+i.getLabelForValue(o[i.axis]):\"\",value:n?\"\"+n.getLabelForValue(o[n.axis]):\"\"}}_update(t){const e=this,i=e._cachedMeta;e.configure(),e._cachedDataOpts={},e.update(t||\"default\"),i._clip=function(t){let e,i,o,s;return Object(n.Ab)(t)?(e=t.top,i=t.right,o=t.bottom,s=t.left):e=i=o=s=t,{top:e,right:i,bottom:o,left:s}}(Object(n.Nb)(e.options.clip,function(t,e,i){if(!1===i)return!1;const n=h(t,i),o=h(e,i);return{top:o.end,right:n.end,bottom:o.start,left:n.start}}(i.xScale,i.yScale,e.getMaxOverflow())))}update(t){}draw(){const t=this,e=t._ctx,i=t.chart,n=t._cachedMeta,o=n.data||[],s=i.chartArea,a=[],r=t._drawStart||0,l=t._drawCount||o.length-r;let c;for(n.dataset&&n.dataset.draw(e,s,r,l),c=r;c<r+l;++c){const t=o[c];t.active?a.push(t):t.draw(e,s)}for(c=0;c<a.length;++c)a[c].draw(e,s)}getStyle(t,e){const i=e?\"active\":\"default\";return void 0===t&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(i):this.resolveDataElementOptions(t||0,i)}getContext(t,e,i){const n=this,o=n.getDataset();let s;if(t>=0&&t<n._cachedMeta.data.length){const e=n._cachedMeta.data[t];s=e.$context||(e.$context=function(t,e,i){return Object.assign(Object.create(t),{active:!1,dataIndex:e,parsed:void 0,raw:void 0,element:i,index:e,mode:\"default\",type:\"data\"})}(n.getContext(),t,e)),s.parsed=n.getParsed(t),s.raw=o.data[t]}else s=n.$context||(n.$context=function(t,e){return Object.assign(Object.create(t),{active:!1,dataset:void 0,datasetIndex:e,index:e,mode:\"default\",type:\"dataset\"})}(n.chart.getContext(),n.index)),s.dataset=o;return s.active=!!e,s.mode=i,s}resolveDatasetElementOptions(t){return this._resolveElementOptions(this.datasetElementType.id,t)}resolveDataElementOptions(t,e){return this._resolveElementOptions(this.dataElementType.id,e,t)}_resolveElementOptions(t,e=\"default\",i){const o=this,s=\"active\"===e,a=o._cachedDataOpts,r=t+\"-\"+e,l=a[r],c=o.enableOptionSharing&&Object(n.zb)(i);if(l)return _(l,c);const h=o.chart.config,d=h.datasetElementScopeKeys(o._type,t),u=s?[`${t}Hover`,\"hover\",t,\"\"]:[t,\"\"],g=h.getOptionScopes(o.getDataset(),d),b=Object.keys(n.vb.elements[t]),p=h.resolveNamedOptions(g,b,(()=>o.getContext(i,s)),u);return p.$shared&&(p.$shared=c,a[r]=Object.freeze(_(p,c))),p}_resolveAnimations(t,e,i){const n=this,o=n.chart,s=n._cachedDataOpts,a=`animation-${e}`,r=s[a];if(r)return r;let l;if(!1!==o.options.animation){const o=n.chart.config,s=o.datasetAnimationScopeKeys(n._type,e),a=o.getOptionScopes(n.getDataset(),s);l=o.createResolver(a,n.getContext(t,i,e))}const h=new c(o,l&&l.animations);return l&&l._cacheable&&(s[a]=Object.freeze(h)),h}getSharedOptions(t){if(t.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},t))}includeOptions(t,e){return!e||x(t)||this.chart._animationsDisabled}updateElement(t,e,i,n){x(n)?Object.assign(t,i):this._resolveAnimations(e,n).update(t,i)}updateSharedOptions(t,e,i){t&&!x(e)&&this._resolveAnimations(void 0,e).update(t,i)}_setStyle(t,e,i,n){t.active=n;const o=this.getStyle(e,n);this._resolveAnimations(e,i,n).update(t,{options:!n&&this.getSharedOptions(o)||o})}removeHoverStyle(t,e,i){this._setStyle(t,i,\"active\",!1)}setHoverStyle(t,e,i){this._setStyle(t,i,\"active\",!0)}_removeDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,\"active\",!1)}_setDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,\"active\",!0)}_resyncElements(t){const e=this,i=e._cachedMeta.data.length,n=e._data.length;n>i?e._insertElements(i,n-i,t):n<i&&e._removeElements(n,i-n);const o=Math.min(n,i);o&&e.parse(0,o)}_insertElements(t,e,i=!0){const n=this,o=n._cachedMeta,s=o.data,a=t+e;let r;const l=t=>{for(t.length+=e,r=t.length-1;r>=a;r--)t[r]=t[r-e]};for(l(s),r=t;r<a;++r)s[r]=new n.dataElementType;n._parsing&&l(o._parsed),n.parse(t,e),i&&n.updateElements(s,t,e,\"reset\")}updateElements(t,e,i,n){}_removeElements(t,e){const i=this._cachedMeta;if(this._parsing){const n=i._parsed.splice(t,e);i._stacked&&m(i,n)}i.data.splice(t,e)}_onDataPush(){const t=arguments.length;this._insertElements(this.getDataset().data.length-t,t)}_onDataPop(){this._removeElements(this._cachedMeta.data.length-1,1)}_onDataShift(){this._removeElements(0,1)}_onDataSplice(t,e){this._removeElements(t,e),this._insertElements(t,arguments.length-2)}_onDataUnshift(){this._insertElements(0,arguments.length)}}function v(t){const e=function(t){if(!t._cache.$bar){const e=t.getMatchingVisibleMetas(\"bar\");let i=[];for(let n=0,o=e.length;n<o;n++)i=i.concat(e[n].controller.getAllParsedValues(t));t._cache.$bar=Object(n.B)(i.sort(((t,e)=>t-e)))}return t._cache.$bar}(t);let i,o,s,a,r=t._length;const l=()=>{r=Math.min(r,i&&Math.abs(s-a)||r),a=s};for(i=0,o=e.length;i<o;++i)s=t.getPixelForValue(e[i]),l();for(i=0,o=t.ticks.length;i<o;++i)s=t.getPixelForTick(i),l();return r}function O(t,e,i,o){return Object(n.tb)(t)?function(t,e,i,n){const o=i.parse(t[0],n),s=i.parse(t[1],n),a=Math.min(o,s),r=Math.max(o,s);let l=a,c=r;Math.abs(a)>Math.abs(r)&&(l=r,c=a),e[i.axis]=c,e._custom={barStart:l,barEnd:c,start:o,end:s,min:a,max:r}}(t,e,i,o):e[i.axis]=i.parse(t,o),e}function j(t,e,i,n){const o=t.iScale,s=t.vScale,a=o.getLabels(),r=o===s,l=[];let c,h,d,u;for(c=i,h=i+n;c<h;++c)u=e[c],d={},d[o.axis]=r||o.parse(a[c],c),l.push(O(u,d,s,c));return l}function M(t){return t&&void 0!==t.barStart&&void 0!==t.barEnd}y.defaults={},y.prototype.datasetElementType=null,y.prototype.dataElementType=null;class w extends y{parsePrimitiveData(t,e,i,n){return j(t,e,i,n)}parseArrayData(t,e,i,n){return j(t,e,i,n)}parseObjectData(t,e,i,o){const{iScale:s,vScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=\"x\"===s.axis?r:l,h=\"x\"===a.axis?r:l,d=[];let u,g,b,p;for(u=i,g=i+o;u<g;++u)p=e[u],b={},b[s.axis]=s.parse(Object(n.xb)(p,c),u),d.push(O(Object(n.xb)(p,h),b,a,u));return d}updateRangeFromParsed(t,e,i,n){super.updateRangeFromParsed(t,e,i,n);const o=i._custom;o&&e===this._cachedMeta.vScale&&(t.min=Math.min(t.min,o.min),t.max=Math.max(t.max,o.max))}getLabelAndValue(t){const e=this._cachedMeta,{iScale:i,vScale:n}=e,o=this.getParsed(t),s=o._custom,a=M(s)?\"[\"+s.start+\", \"+s.end+\"]\":\"\"+n.getLabelForValue(o[n.axis]);return{label:\"\"+i.getLabelForValue(o[i.axis]),value:a}}initialize(){const t=this;t.enableOptionSharing=!0,super.initialize();t._cachedMeta.stack=t.getDataset().stack}update(t){const e=this._cachedMeta;this.updateElements(e.data,0,e.data.length,t)}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,r=s._cachedMeta.vScale,l=r.getBasePixel(),c=r.isHorizontal(),h=s._getRuler(),d=s.resolveDataElementOptions(e,o),u=s.getSharedOptions(d),g=s.includeOptions(o,u);s.updateSharedOptions(u,o,d);for(let b=e;b<e+i;b++){const e=s.getParsed(b),i=a||Object(n.Bb)(e[r.axis])?{base:l,head:l}:s._calculateBarValuePixels(b),d=s._calculateBarIndexPixels(b,h),p={horizontal:c,base:i.base,x:c?i.head:d.center,y:c?d.center:i.head,height:c?d.size:void 0,width:c?void 0:d.size};g&&(p.options=u||s.resolveDataElementOptions(b,o)),s.updateElement(t[b],b,p,o)}}_getStacks(t,e){const i=this._cachedMeta.iScale,o=i.getMatchingVisibleMetas(this._type),s=i.options.stacked,a=o.length,r=[];let l,c;for(l=0;l<a;++l){if(c=o[l],\"undefined\"!==typeof e){const t=c.controller.getParsed(e)[c.controller._cachedMeta.vScale.axis];if(Object(n.Bb)(t)||isNaN(t))continue}if((!1===s||-1===r.indexOf(c.stack)||void 0===s&&void 0===c.stack)&&r.push(c.stack),c.index===t)break}return r.length||r.push(void 0),r}_getStackCount(t){return this._getStacks(void 0,t).length}_getStackIndex(t,e){const i=this._getStacks(t),n=void 0!==e?i.indexOf(e):-1;return-1===n?i.length-1:n}_getRuler(){const t=this,e=t.options,i=t._cachedMeta,n=i.iScale,o=[];let s,a;for(s=0,a=i.data.length;s<a;++s)o.push(n.getPixelForValue(t.getParsed(s)[n.axis],s));const r=e.barThickness;return{min:r||v(n),pixels:o,start:n._startPixel,end:n._endPixel,stackCount:t._getStackCount(),scale:n,grouped:e.grouped,ratio:r?1:e.categoryPercentage*e.barPercentage}}_calculateBarValuePixels(t){const e=this,{vScale:i,_stacked:o}=e._cachedMeta,{base:s,minBarLength:a}=e.options,r=e.getParsed(t),l=r._custom,c=M(l);let h,d,u=r[i.axis],g=0,b=o?e.applyStack(i,r,o):u;b!==u&&(g=b-u,b=u),c&&(u=l.barStart,b=l.barEnd-l.barStart,0!==u&&Object(n.Kb)(u)!==Object(n.Kb)(l.barEnd)&&(g=0),g+=u);const p=Object(n.Bb)(s)||c?g:s;let f=i.getPixelForValue(p);h=this.chart.getDataVisibility(t)?i.getPixelForValue(g+b):f,d=h-f,void 0!==a&&Math.abs(d)<a&&(d=d<0?-a:a,0===u&&(f-=d/2),h=f+d);const m=s||0;if(f===i.getPixelForValue(m)){const t=i.getLineWidthForValue(m)/2;d>0?(f+=t,d-=t):d<0&&(f-=t,d+=t)}return{size:d,base:f,head:h,center:h+d/2}}_calculateBarIndexPixels(t,e){const i=this,o=e.scale,s=i.options,a=Object(n.Nb)(s.maxBarThickness,1/0);let r,l;if(e.grouped){const o=s.skipNull?i._getStackCount(t):e.stackCount,c=\"flex\"===s.barThickness?function(t,e,i,n){const o=e.pixels,s=o[t];let a=t>0?o[t-1]:null,r=t<o.length-1?o[t+1]:null;const l=i.categoryPercentage;null===a&&(a=s-(null===r?e.end-e.start:r-s)),null===r&&(r=s+s-a);const c=s-(s-Math.min(a,r))/2*l;return{chunk:Math.abs(r-a)/2*l/n,ratio:i.barPercentage,start:c}}(t,e,s,o):function(t,e,i,o){const s=i.barThickness;let a,r;return Object(n.Bb)(s)?(a=e.min*i.categoryPercentage,r=i.barPercentage):(a=s*o,r=1),{chunk:a/o,ratio:r,start:e.pixels[t]-a/2}}(t,e,s,o),h=i._getStackIndex(i.index,i._cachedMeta.stack);r=c.start+c.chunk*h+c.chunk/2,l=Math.min(a,c.chunk*c.ratio)}else r=o.getPixelForValue(i.getParsed(t)[o.axis],t),l=Math.min(a,e.min*e.ratio);return{base:r-l/2,head:r+l/2,center:r,size:l}}draw(){const t=this,e=t.chart,i=t._cachedMeta,o=i.vScale,s=i.data,a=s.length;let r=0;for(Object(n.Cb)(e.ctx,e.chartArea);r<a;++r)null!==t.getParsed(r)[o.axis]&&s[r].draw(t._ctx);Object(n.Eb)(e.ctx)}}w.id=\"bar\",w.defaults={datasetElementType:!1,dataElementType:\"bar\",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"base\",\"width\",\"height\"]}}},w.overrides={interaction:{mode:\"index\"},scales:{_index_:{type:\"category\",offset:!0,grid:{offset:!0}},_value_:{type:\"linear\",beginAtZero:!0}}};class k extends y{initialize(){this.enableOptionSharing=!0,super.initialize()}parseObjectData(t,e,i,o){const{xScale:s,yScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=[];let h,d,u;for(h=i,d=i+o;h<d;++h)u=e[h],c.push({x:s.parse(Object(n.xb)(u,r),h),y:a.parse(Object(n.xb)(u,l),h),_custom:u&&u.r&&+u.r});return c}getMaxOverflow(){const{data:t,_parsed:e}=this._cachedMeta;let i=0;for(let n=t.length-1;n>=0;--n)i=Math.max(i,t[n].size()/2,e[n]._custom);return i>0&&i}getLabelAndValue(t){const e=this._cachedMeta,{xScale:i,yScale:n}=e,o=this.getParsed(t),s=i.getLabelForValue(o.x),a=n.getLabelForValue(o.y),r=o._custom;return{label:e.label,value:\"(\"+s+\", \"+a+(r?\", \"+r:\"\")+\")\"}}update(t){const e=this._cachedMeta.data;this.updateElements(e,0,e.length,t)}updateElements(t,e,i,n){const o=this,s=\"reset\"===n,{xScale:a,yScale:r}=o._cachedMeta,l=o.resolveDataElementOptions(e,n),c=o.getSharedOptions(l),h=o.includeOptions(n,c);for(let d=e;d<e+i;d++){const e=t[d],i=!s&&o.getParsed(d),l=s?a.getPixelForDecimal(.5):a.getPixelForValue(i.x),c=s?r.getBasePixel():r.getPixelForValue(i.y),u={x:l,y:c,skip:isNaN(l)||isNaN(c)};h&&(u.options=o.resolveDataElementOptions(d,n),s&&(u.options.radius=0)),o.updateElement(e,d,u,n)}o.updateSharedOptions(c,n,l)}resolveDataElementOptions(t,e){const i=this.getParsed(t);let o=super.resolveDataElementOptions(t,e);o.$shared&&(o=Object.assign({},o,{$shared:!1}));const s=o.radius;return\"active\"!==e&&(o.radius=0),o.radius+=Object(n.Nb)(i&&i._custom,s),o}}k.id=\"bubble\",k.defaults={datasetElementType:!1,dataElementType:\"point\",animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"borderWidth\",\"radius\"]}}},k.overrides={scales:{x:{type:\"linear\"},y:{type:\"linear\"}},plugins:{tooltip:{callbacks:{title:()=>\"\"}}}};class S extends y{constructor(t,e){super(t,e),this.enableOptionSharing=!0,this.innerRadius=void 0,this.outerRadius=void 0,this.offsetX=void 0,this.offsetY=void 0}linkScales(){}parse(t,e){const i=this.getDataset().data,n=this._cachedMeta;let o,s;for(o=t,s=t+e;o<s;++o)n._parsed[o]=+i[o]}_getRotation(){return Object(n.Lb)(this.options.rotation-90)}_getCircumference(){return Object(n.Lb)(this.options.circumference)}_getRotationExtents(){let t=n.u,e=-n.u;const i=this;for(let n=0;n<i.chart.data.datasets.length;++n)if(i.chart.isDatasetVisible(n)){const o=i.chart.getDatasetMeta(n).controller,s=o._getRotation(),a=o._getCircumference();t=Math.min(t,s),e=Math.max(e,s+a)}return{rotation:t,circumference:e-t}}update(t){const e=this,i=e.chart,{chartArea:o}=i,s=e._cachedMeta,a=s.data,r=e.getMaxBorderWidth()+e.getMaxOffset(a),l=Math.max((Math.min(o.width,o.height)-r)/2,0),c=Math.min(Object(n.Fb)(e.options.cutout,l),1),h=e._getRingWeight(e.index),{circumference:d,rotation:u}=e._getRotationExtents(),{ratioX:g,ratioY:b,offsetX:p,offsetY:f}=function(t,e,i){let o=1,s=1,a=0,r=0;if(e<n.u){const l=t,c=l+e,h=Math.cos(l),d=Math.sin(l),u=Math.cos(c),g=Math.sin(c),b=(t,e,o)=>Object(n.Ib)(t,l,c)?1:Math.max(e,e*i,o,o*i),p=(t,e,o)=>Object(n.Ib)(t,l,c)?-1:Math.min(e,e*i,o,o*i),f=b(0,h,u),m=b(n.i,d,g),x=p(n.q,h,u),_=p(n.q+n.i,d,g);o=(f-x)/2,s=(m-_)/2,a=-(f+x)/2,r=-(m+_)/2}return{ratioX:o,ratioY:s,offsetX:a,offsetY:r}}(u,d,c),m=(o.width-r)/g,x=(o.height-r)/b,_=Math.max(Math.min(m,x)/2,0),y=Object(n.Gb)(e.options.radius,_),v=(y-Math.max(y*c,0))/e._getVisibleDatasetWeightTotal();e.offsetX=p*y,e.offsetY=f*y,s.total=e.calculateTotal(),e.outerRadius=y-v*e._getRingWeightOffset(e.index),e.innerRadius=Math.max(e.outerRadius-v*h,0),e.updateElements(a,0,a.length,t)}_circumference(t,e){const i=this,o=i.options,s=i._cachedMeta,a=i._getCircumference();return e&&o.animation.animateRotate||!this.chart.getDataVisibility(t)||null===s._parsed[t]?0:i.calculateCircumference(s._parsed[t]*a/n.u)}updateElements(t,e,i,n){const o=this,s=\"reset\"===n,a=o.chart,r=a.chartArea,l=a.options.animation,c=(r.left+r.right)/2,h=(r.top+r.bottom)/2,d=s&&l.animateScale,u=d?0:o.innerRadius,g=d?0:o.outerRadius,b=o.resolveDataElementOptions(e,n),p=o.getSharedOptions(b),f=o.includeOptions(n,p);let m,x=o._getRotation();for(m=0;m<e;++m)x+=o._circumference(m,s);for(m=e;m<e+i;++m){const e=o._circumference(m,s),i=t[m],a={x:c+o.offsetX,y:h+o.offsetY,startAngle:x,endAngle:x+e,circumference:e,outerRadius:g,innerRadius:u};f&&(a.options=p||o.resolveDataElementOptions(m,n)),x+=e,o.updateElement(i,m,a,n)}o.updateSharedOptions(p,n,b)}calculateTotal(){const t=this._cachedMeta,e=t.data;let i,n=0;for(i=0;i<e.length;i++){const e=t._parsed[i];null!==e&&!isNaN(e)&&this.chart.getDataVisibility(i)&&(n+=Math.abs(e))}return n}calculateCircumference(t){const e=this._cachedMeta.total;return e>0&&!isNaN(t)?n.u*(Math.abs(t)/e):0}getLabelAndValue(t){const e=this._cachedMeta,i=this.chart,o=i.data.labels||[],s=Object(n.Hb)(e._parsed[t],i.options.locale);return{label:o[t]||\"\",value:s}}getMaxBorderWidth(t){const e=this;let i=0;const n=e.chart;let o,s,a,r,l;if(!t)for(o=0,s=n.data.datasets.length;o<s;++o)if(n.isDatasetVisible(o)){a=n.getDatasetMeta(o),t=a.data,r=a.controller,r!==e&&r.configure();break}if(!t)return 0;for(o=0,s=t.length;o<s;++o)l=r.resolveDataElementOptions(o),\"inner\"!==l.borderAlign&&(i=Math.max(i,l.borderWidth||0,l.hoverBorderWidth||0));return i}getMaxOffset(t){let e=0;for(let i=0,n=t.length;i<n;++i){const t=this.resolveDataElementOptions(i);e=Math.max(e,t.offset||0,t.hoverOffset||0)}return e}_getRingWeightOffset(t){let e=0;for(let i=0;i<t;++i)this.chart.isDatasetVisible(i)&&(e+=this._getRingWeight(i));return e}_getRingWeight(t){return Math.max(Object(n.Nb)(this.chart.data.datasets[t].weight,1),0)}_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1}}S.id=\"doughnut\",S.defaults={datasetElementType:!1,dataElementType:\"arc\",animation:{animateRotate:!0,animateScale:!1},animations:{numbers:{type:\"number\",properties:[\"circumference\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"startAngle\",\"x\",\"y\",\"offset\",\"borderWidth\"]}},cutout:\"50%\",rotation:0,circumference:360,radius:\"100%\",indexAxis:\"r\"},S.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(((e,i)=>{const n=t.getDatasetMeta(0).controller.getStyle(i);return{text:e,fillStyle:n.backgroundColor,strokeStyle:n.borderColor,lineWidth:n.borderWidth,hidden:!t.getDataVisibility(i),index:i}})):[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>\"\",label(t){let e=t.label;const i=\": \"+t.formattedValue;return Object(n.tb)(e)?(e=e.slice(),e[0]+=i):e+=i,e}}}}};class D extends y{initialize(){this.enableOptionSharing=!0,super.initialize()}update(t){const e=this,i=e._cachedMeta,{dataset:o,data:s=[],_dataset:a}=i,r=e.chart._animationsDisabled;let{start:l,count:c}=function(t,e,i){const o=e.length;let s=0,a=o;if(t._sorted){const{iScale:r,_parsed:l}=t,c=r.axis,{min:h,max:d,minDefined:u,maxDefined:g}=r.getUserBounds();u&&(s=Object(n.Pb)(Math.min(Object(n.Qb)(l,r.axis,h).lo,i?o:Object(n.Qb)(e,c,r.getPixelForValue(h)).lo),0,o-1)),a=g?Object(n.Pb)(Math.max(Object(n.Qb)(l,r.axis,d).hi+1,i?0:Object(n.Qb)(e,c,r.getPixelForValue(d)).hi+1),s,o)-s:o-s}return{start:s,count:a}}(i,s,r);e._drawStart=l,e._drawCount=c,function(t){const{xScale:e,yScale:i,_scaleRanges:n}=t,o={xmin:e.min,xmax:e.max,ymin:i.min,ymax:i.max};if(!n)return t._scaleRanges=o,!0;const s=n.xmin!==e.min||n.xmax!==e.max||n.ymin!==i.min||n.ymax!==i.max;return Object.assign(n,o),s}(i)&&(l=0,c=s.length),o._decimated=!!a._decimated,o.points=s;const h=e.resolveDatasetElementOptions(t);e.options.showLine||(h.borderWidth=0),h.segment=e.options.segment,e.updateElement(o,void 0,{animated:!r,options:h},t),e.updateElements(s,l,c,t)}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,{xScale:r,yScale:l,_stacked:c}=s._cachedMeta,h=s.resolveDataElementOptions(e,o),d=s.getSharedOptions(h),u=s.includeOptions(o,d),g=s.options.spanGaps,b=Object(n.Ob)(g)?g:Number.POSITIVE_INFINITY,p=s.chart._animationsDisabled||a||\"none\"===o;let f=e>0&&s.getParsed(e-1);for(let m=e;m<e+i;++m){const e=t[m],i=s.getParsed(m),h=p?e:{},g=Object(n.Bb)(i.y),x=h.x=r.getPixelForValue(i.x,m),_=h.y=a||g?l.getBasePixel():l.getPixelForValue(c?s.applyStack(l,i,c):i.y,m);h.skip=isNaN(x)||isNaN(_)||g,h.stop=m>0&&i.x-f.x>b,h.parsed=i,u&&(h.options=d||s.resolveDataElementOptions(m,o)),p||s.updateElement(e,m,h,o),f=i}s.updateSharedOptions(d,o,h)}getMaxOverflow(){const t=this,e=t._cachedMeta,i=e.dataset,n=i.options&&i.options.borderWidth||0,o=e.data||[];if(!o.length)return n;const s=o[0].size(t.resolveDataElementOptions(0)),a=o[o.length-1].size(t.resolveDataElementOptions(o.length-1));return Math.max(n,s,a)/2}draw(){this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea),super.draw()}}D.id=\"line\",D.defaults={datasetElementType:\"line\",dataElementType:\"point\",showLine:!0,spanGaps:!1},D.overrides={scales:{_index_:{type:\"category\"},_value_:{type:\"linear\"}}};class P extends y{constructor(t,e){super(t,e),this.innerRadius=void 0,this.outerRadius=void 0}update(t){const e=this._cachedMeta.data;this._updateRadius(),this.updateElements(e,0,e.length,t)}_updateRadius(){const t=this,e=t.chart,i=e.chartArea,n=e.options,o=Math.min(i.right-i.left,i.bottom-i.top),s=Math.max(o/2,0),a=(s-Math.max(n.cutoutPercentage?s/100*n.cutoutPercentage:1,0))/e.getVisibleDatasetCount();t.outerRadius=s-a*t.index,t.innerRadius=t.outerRadius-a}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,r=s.chart,l=s.getDataset(),c=r.options.animation,h=s._cachedMeta.rScale,d=h.xCenter,u=h.yCenter,g=h.getIndexAngle(0)-.5*n.q;let b,p=g;const f=360/s.countVisibleElements();for(b=0;b<e;++b)p+=s._computeAngle(b,o,f);for(b=e;b<e+i;b++){const e=t[b];let i=p,n=p+s._computeAngle(b,o,f),m=r.getDataVisibility(b)?h.getDistanceFromCenterForValue(l.data[b]):0;p=n,a&&(c.animateScale&&(m=0),c.animateRotate&&(i=n=g));const x={x:d,y:u,innerRadius:0,outerRadius:m,startAngle:i,endAngle:n,options:s.resolveDataElementOptions(b,o)};s.updateElement(e,b,x,o)}}countVisibleElements(){const t=this.getDataset(),e=this._cachedMeta;let i=0;return e.data.forEach(((e,n)=>{!isNaN(t.data[n])&&this.chart.getDataVisibility(n)&&i++})),i}_computeAngle(t,e,i){return this.chart.getDataVisibility(t)?Object(n.Lb)(this.resolveDataElementOptions(t,e).angle||i):0}}P.id=\"polarArea\",P.defaults={dataElementType:\"arc\",animation:{animateRotate:!0,animateScale:!0},animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\"]}},indexAxis:\"r\",startAngle:0},P.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(((e,i)=>{const n=t.getDatasetMeta(0).controller.getStyle(i);return{text:e,fillStyle:n.backgroundColor,strokeStyle:n.borderColor,lineWidth:n.borderWidth,hidden:!t.getDataVisibility(i),index:i}})):[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>\"\",label:t=>t.chart.data.labels[t.dataIndex]+\": \"+t.formattedValue}}},scales:{r:{type:\"radialLinear\",angleLines:{display:!1},beginAtZero:!0,grid:{circular:!0},pointLabels:{display:!1},startAngle:0}}};class C extends S{}C.id=\"pie\",C.defaults={cutout:0,rotation:0,circumference:360,radius:\"100%\"};class A extends y{getLabelAndValue(t){const e=this._cachedMeta.vScale,i=this.getParsed(t);return{label:e.getLabels()[t],value:\"\"+e.getLabelForValue(i[e.axis])}}update(t){const e=this,i=e._cachedMeta,n=i.dataset,o=i.data||[],s=i.iScale.getLabels();if(n.points=o,\"resize\"!==t){const i=e.resolveDatasetElementOptions(t);e.options.showLine||(i.borderWidth=0);const a={_loop:!0,_fullLoop:s.length===o.length,options:i};e.updateElement(n,void 0,a,t)}e.updateElements(o,0,o.length,t)}updateElements(t,e,i,n){const o=this,s=o.getDataset(),a=o._cachedMeta.rScale,r=\"reset\"===n;for(let l=e;l<e+i;l++){const e=t[l],i=o.resolveDataElementOptions(l,n),c=a.getPointPositionForValue(l,s.data[l]),h=r?a.xCenter:c.x,d=r?a.yCenter:c.y,u={x:h,y:d,angle:c.angle,skip:isNaN(h)||isNaN(d),options:i};o.updateElement(e,l,u,n)}}}A.id=\"radar\",A.defaults={datasetElementType:\"line\",dataElementType:\"point\",indexAxis:\"r\",showLine:!0,elements:{line:{fill:\"start\"}}},A.overrides={aspectRatio:1,scales:{r:{type:\"radialLinear\"}}};class L extends D{}L.id=\"scatter\",L.defaults={showLine:!1,fill:!1},L.overrides={interaction:{mode:\"point\"},plugins:{tooltip:{callbacks:{title:()=>\"\",label:t=>\"(\"+t.label+\", \"+t.formattedValue+\")\"}}},scales:{x:{type:\"linear\"},y:{type:\"linear\"}}};var T=Object.freeze({__proto__:null,BarController:w,BubbleController:k,DoughnutController:S,LineController:D,PolarAreaController:P,PieController:C,RadarController:A,ScatterController:L});function E(){throw new Error(\"This method is not implemented: either no adapter can be found or an incomplete integration was provided.\")}class z{constructor(t){this.options=t||{}}formats(){return E()}parse(t,e){return E()}format(t,e){return E()}add(t,e,i){return E()}diff(t,e,i){return E()}startOf(t,e,i){return E()}endOf(t,e){return E()}}z.override=function(t){Object.assign(z.prototype,t)};var R={_date:z};function F(t,e){return\"native\"in t?{x:t.x,y:t.y}:Object(n.Rb)(t,e)}function I(t,e,i,o){const{controller:s,data:a,_sorted:r}=t,l=s._cachedMeta.iScale;if(l&&e===l.axis&&r&&a.length){const t=l._reversePixels?n.c:n.Qb;if(!o)return t(a,e,i);if(s._sharedOptions){const n=a[0],o=\"function\"===typeof n.getRange&&n.getRange(e);if(o){const n=t(a,e,i-o),s=t(a,e,i+o);return{lo:n.lo,hi:s.hi}}}}return{lo:0,hi:a.length-1}}function V(t,e,i,n,o){const s=t.getSortedVisibleDatasetMetas(),a=i[e];for(let r=0,l=s.length;r<l;++r){const{index:t,data:i}=s[r],{lo:l,hi:c}=I(s[r],e,a,o);for(let e=l;e<=c;++e){const o=i[e];o.skip||n(o,t,e)}}}function B(t,e,i,o){const s=[];if(!Object(n.b)(e,t.chartArea,t._minPadding))return s;return V(t,i,e,(function(t,i,n){t.inRange(e.x,e.y,o)&&s.push({element:t,datasetIndex:i,index:n})}),!0),s}function N(t,e,i,o,s){const a=function(t){const e=-1!==t.indexOf(\"x\"),i=-1!==t.indexOf(\"y\");return function(t,n){const o=e?Math.abs(t.x-n.x):0,s=i?Math.abs(t.y-n.y):0;return Math.sqrt(Math.pow(o,2)+Math.pow(s,2))}}(i);let r=Number.POSITIVE_INFINITY,l=[];if(!Object(n.b)(e,t.chartArea,t._minPadding))return l;return V(t,i,e,(function(t,i,n){if(o&&!t.inRange(e.x,e.y,s))return;const c=t.getCenterPoint(s),h=a(e,c);h<r?(l=[{element:t,datasetIndex:i,index:n}],r=h):h===r&&l.push({element:t,datasetIndex:i,index:n})})),l}function W(t,e,i,n){const o=F(e,t),s=[],a=i.axis,r=\"x\"===a?\"inXRange\":\"inYRange\";let l=!1;return function(t,e){const i=t.getSortedVisibleDatasetMetas();let n,o,s;for(let a=0,r=i.length;a<r;++a){({index:n,data:o}=i[a]);for(let t=0,i=o.length;t<i;++t)s=o[t],s.skip||e(s,n,t)}}(t,((t,e,i)=>{t[r](o[a],n)&&s.push({element:t,datasetIndex:e,index:i}),t.inRange(o.x,o.y,n)&&(l=!0)})),i.intersect&&!l?[]:s}var H={modes:{index(t,e,i,n){const o=F(e,t),s=i.axis||\"x\",a=i.intersect?B(t,o,s,n):N(t,o,s,!1,n),r=[];return a.length?(t.getSortedVisibleDatasetMetas().forEach((t=>{const e=a[0].index,i=t.data[e];i&&!i.skip&&r.push({element:i,datasetIndex:t.index,index:e})})),r):[]},dataset(t,e,i,n){const o=F(e,t),s=i.axis||\"xy\";let a=i.intersect?B(t,o,s,n):N(t,o,s,!1,n);if(a.length>0){const e=a[0].datasetIndex,i=t.getDatasetMeta(e).data;a=[];for(let t=0;t<i.length;++t)a.push({element:i[t],datasetIndex:e,index:t})}return a},point:(t,e,i,n)=>B(t,F(e,t),i.axis||\"xy\",n),nearest:(t,e,i,n)=>N(t,F(e,t),i.axis||\"xy\",i.intersect,n),x:(t,e,i,n)=>(i.axis=\"x\",W(t,e,i,n)),y:(t,e,i,n)=>(i.axis=\"y\",W(t,e,i,n))}};const $=[\"left\",\"top\",\"right\",\"bottom\"];function U(t,e){return t.filter((t=>t.pos===e))}function Y(t,e){return t.filter((t=>-1===$.indexOf(t.pos)&&t.box.axis===e))}function X(t,e){return t.sort(((t,i)=>{const n=e?i:t,o=e?t:i;return n.weight===o.weight?n.index-o.index:n.weight-o.weight}))}function K(t,e,i,n){return Math.max(t[i],e[i])+Math.max(t[n],e[n])}function q(t,e){t.top=Math.max(t.top,e.top),t.left=Math.max(t.left,e.left),t.bottom=Math.max(t.bottom,e.bottom),t.right=Math.max(t.right,e.right)}function G(t,e,i){const o=i.box,s=t.maxPadding;Object(n.Ab)(i.pos)||(i.size&&(t[i.pos]-=i.size),i.size=i.horizontal?o.height:o.width,t[i.pos]+=i.size),o.getPadding&&q(s,o.getPadding());const a=Math.max(0,e.outerWidth-K(s,t,\"left\",\"right\")),r=Math.max(0,e.outerHeight-K(s,t,\"top\",\"bottom\")),l=a!==t.w,c=r!==t.h;return t.w=a,t.h=r,i.horizontal?{same:l,other:c}:{same:c,other:l}}function J(t,e){const i=e.maxPadding;function n(t){const n={left:0,top:0,right:0,bottom:0};return t.forEach((t=>{n[t]=Math.max(e[t],i[t])})),n}return n(t?[\"left\",\"right\"]:[\"top\",\"bottom\"])}function Q(t,e,i){const n=[];let o,s,a,r,l,c;for(o=0,s=t.length,l=0;o<s;++o){a=t[o],r=a.box,r.update(a.width||e.w,a.height||e.h,J(a.horizontal,e));const{same:s,other:h}=G(e,i,a);l|=s&&n.length,c=c||h,r.fullSize||n.push(a)}return l&&Q(n,e,i)||c}function Z(t,e,i){const n=i.padding;let o,s,a,r,l=e.x,c=e.y;for(o=0,s=t.length;o<s;++o)a=t[o],r=a.box,a.horizontal?(r.left=r.fullSize?n.left:e.left,r.right=r.fullSize?i.outerWidth-n.right:e.left+e.w,r.top=c,r.bottom=c+r.height,r.width=r.right-r.left,c=r.bottom):(r.left=l,r.right=l+r.width,r.top=r.fullSize?n.top:e.top,r.bottom=r.fullSize?i.outerHeight-n.right:e.top+e.h,r.height=r.bottom-r.top,l=r.right);e.x=l,e.y=c}n.vb.set(\"layout\",{padding:{top:0,right:0,bottom:0,left:0}});var tt={addBox(t,e){t.boxes||(t.boxes=[]),e.fullSize=e.fullSize||!1,e.position=e.position||\"top\",e.weight=e.weight||0,e._layers=e._layers||function(){return[{z:0,draw(t){e.draw(t)}}]},t.boxes.push(e)},removeBox(t,e){const i=t.boxes?t.boxes.indexOf(e):-1;-1!==i&&t.boxes.splice(i,1)},configure(t,e,i){e.fullSize=i.fullSize,e.position=i.position,e.weight=i.weight},update(t,e,i,o){if(!t)return;const s=Object(n.d)(t.options.layout.padding),a=e-s.width,r=i-s.height,l=function(t){const e=function(t){const e=[];let i,n,o;for(i=0,n=(t||[]).length;i<n;++i)o=t[i],e.push({index:i,box:o,pos:o.position,horizontal:o.isHorizontal(),weight:o.weight});return e}(t),i=X(e.filter((t=>t.box.fullSize)),!0),n=X(U(e,\"left\"),!0),o=X(U(e,\"right\")),s=X(U(e,\"top\"),!0),a=X(U(e,\"bottom\")),r=Y(e,\"x\"),l=Y(e,\"y\");return{fullSize:i,leftAndTop:n.concat(s),rightAndBottom:o.concat(l).concat(a).concat(r),chartArea:U(e,\"chartArea\"),vertical:n.concat(o).concat(l),horizontal:s.concat(a).concat(r)}}(t.boxes),c=l.vertical,h=l.horizontal;Object(n.e)(t.boxes,(t=>{\"function\"===typeof t.beforeLayout&&t.beforeLayout()}));const d=c.reduce(((t,e)=>e.box.options&&!1===e.box.options.display?t:t+1),0)||1,u=Object.freeze({outerWidth:e,outerHeight:i,padding:s,availableWidth:a,availableHeight:r,vBoxMaxWidth:a/2/d,hBoxMaxHeight:r/2}),g=Object.assign({},s);q(g,Object(n.d)(o));const b=Object.assign({maxPadding:g,w:a,h:r,x:s.left,y:s.top},s);!function(t,e){let i,n,o;for(i=0,n=t.length;i<n;++i)o=t[i],o.horizontal?(o.width=o.box.fullSize&&e.availableWidth,o.height=e.hBoxMaxHeight):(o.width=e.vBoxMaxWidth,o.height=o.box.fullSize&&e.availableHeight)}(c.concat(h),u),Q(l.fullSize,b,u),Q(c,b,u),Q(h,b,u)&&Q(c,b,u),function(t){const e=t.maxPadding;function i(i){const n=Math.max(e[i]-t[i],0);return t[i]+=n,n}t.y+=i(\"top\"),t.x+=i(\"left\"),i(\"right\"),i(\"bottom\")}(b),Z(l.leftAndTop,b,u),b.x+=b.w,b.y+=b.h,Z(l.rightAndBottom,b,u),t.chartArea={left:b.left,top:b.top,right:b.left+b.w,bottom:b.top+b.h,height:b.h,width:b.w},Object(n.e)(l.chartArea,(e=>{const i=e.box;Object.assign(i,t.chartArea),i.update(b.w,b.h)}))}};class et{acquireContext(t,e){}releaseContext(t){return!1}addEventListener(t,e,i){}removeEventListener(t,e,i){}getDevicePixelRatio(){return 1}getMaximumSize(t,e,i,n){return e=Math.max(0,e||t.width),i=i||t.height,{width:e,height:Math.max(0,n?Math.floor(e/n):i)}}isAttached(t){return!0}}class it extends et{acquireContext(t){return t&&t.getContext&&t.getContext(\"2d\")||null}}const nt={touchstart:\"mousedown\",touchmove:\"mousemove\",touchend:\"mouseup\",pointerenter:\"mouseenter\",pointerdown:\"mousedown\",pointermove:\"mousemove\",pointerup:\"mouseup\",pointerleave:\"mouseout\",pointerout:\"mouseout\"},ot=t=>null===t||\"\"===t;const st=!!n.k&&{passive:!0};function at(t,e,i){t.canvas.removeEventListener(e,i,st)}function rt(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o)||o,a=new MutationObserver((t=>{const e=Object(n.g)(s);t.forEach((t=>{for(let n=0;n<t.addedNodes.length;n++){const o=t.addedNodes[n];o!==s&&o!==e||i(t.target)}}))}));return a.observe(document,{childList:!0,subtree:!0}),a}function lt(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o);if(!s)return;const a=new MutationObserver((t=>{t.forEach((t=>{for(let e=0;e<t.removedNodes.length;e++)if(t.removedNodes[e]===o){i();break}}))}));return a.observe(s,{childList:!0}),a}const ct=new Map;let ht=0;function dt(){const t=window.devicePixelRatio;t!==ht&&(ht=t,ct.forEach(((e,i)=>{i.currentDevicePixelRatio!==t&&e()})))}function ut(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o);if(!s)return;const a=Object(n.j)(((t,e)=>{const n=s.clientWidth;i(t,e),n<s.clientWidth&&i()}),window),r=new ResizeObserver((t=>{const e=t[0],i=e.contentRect.width,n=e.contentRect.height;0===i&&0===n||a(i,n)}));return r.observe(s),function(t,e){ct.size||window.addEventListener(\"resize\",dt),ct.set(t,e)}(t,a),r}function gt(t,e,i){i&&i.disconnect(),\"resize\"===e&&function(t){ct.delete(t),ct.size||window.removeEventListener(\"resize\",dt)}(t)}function bt(t,e,i){const o=t.canvas,s=Object(n.j)((e=>{null!==t.ctx&&i(function(t,e){const i=nt[t.type]||t.type,{x:o,y:s}=Object(n.Rb)(t,e);return{type:i,chart:e,native:t,x:void 0!==o?o:null,y:void 0!==s?s:null}}(e,t))}),t,(t=>{const e=t[0];return[e,e.offsetX,e.offsetY]}));return function(t,e,i){t.addEventListener(e,i,st)}(o,e,s),s}class pt extends et{acquireContext(t,e){const i=t&&t.getContext&&t.getContext(\"2d\");return i&&i.canvas===t?(function(t,e){const i=t.style,o=t.getAttribute(\"height\"),s=t.getAttribute(\"width\");if(t.$chartjs={initial:{height:o,width:s,style:{display:i.display,height:i.height,width:i.width}}},i.display=i.display||\"block\",i.boxSizing=i.boxSizing||\"border-box\",ot(s)){const e=Object(n.h)(t,\"width\");void 0!==e&&(t.width=e)}if(ot(o))if(\"\"===t.style.height)t.height=t.width/(e||2);else{const e=Object(n.h)(t,\"height\");void 0!==e&&(t.height=e)}}(t,e),i):null}releaseContext(t){const e=t.canvas;if(!e.$chartjs)return!1;const i=e.$chartjs.initial;[\"height\",\"width\"].forEach((t=>{const o=i[t];Object(n.Bb)(o)?e.removeAttribute(t):e.setAttribute(t,o)}));const o=i.style||{};return Object.keys(o).forEach((t=>{e.style[t]=o[t]})),e.width=e.width,delete e.$chartjs,!0}addEventListener(t,e,i){this.removeEventListener(t,e);const n=t.$proxies||(t.$proxies={}),o={attach:rt,detach:lt,resize:ut}[e]||bt;n[e]=o(t,e,i)}removeEventListener(t,e){const i=t.$proxies||(t.$proxies={}),n=i[e];if(!n)return;({attach:gt,detach:gt,resize:gt}[e]||at)(t,e,n),i[e]=void 0}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(t,e,i,o){return Object(n.f)(t,e,i,o)}isAttached(t){const e=Object(n.g)(t);return!(!e||!Object(n.g)(e))}}class ft{constructor(){this.x=void 0,this.y=void 0,this.active=!1,this.options=void 0,this.$animations=void 0}tooltipPosition(t){const{x:e,y:i}=this.getProps([\"x\",\"y\"],t);return{x:e,y:i}}hasValue(){return Object(n.Ob)(this.x)&&Object(n.Ob)(this.y)}getProps(t,e){const i=this,n=this.$animations;if(!e||!n)return i;const o={};return t.forEach((t=>{o[t]=n[t]&&n[t].active()?n[t]._to:i[t]})),o}}ft.defaults={},ft.defaultRoutes=void 0;const mt={values:t=>Object(n.tb)(t)?t:\"\"+t,numeric(t,e,i){if(0===t)return\"0\";const o=this.chart.options.locale;let s,a=t;if(i.length>1){const e=Math.max(Math.abs(i[0].value),Math.abs(i[i.length-1].value));(e<1e-4||e>1e15)&&(s=\"scientific\"),a=function(t,e){let i=e.length>3?e[2].value-e[1].value:e[1].value-e[0].value;Math.abs(i)>1&&t!==Math.floor(t)&&(i=t-Math.floor(t));return i}(t,i)}const r=Object(n.l)(Math.abs(a)),l=Math.max(Math.min(-1*Math.floor(r),20),0),c={notation:s,minimumFractionDigits:l,maximumFractionDigits:l};return Object.assign(c,this.options.ticks.format),Object(n.Hb)(t,o,c)},logarithmic(t,e,i){if(0===t)return\"0\";const o=t/Math.pow(10,Math.floor(Object(n.l)(t)));return 1===o||2===o||5===o?mt.numeric.call(this,t,e,i):\"\"}};var xt={formatters:mt};function _t(t,e){const i=t.options.ticks,o=i.maxTicksLimit||function(t){const e=t.options.offset,i=t._tickSize(),n=t._length/i+(e?0:1),o=t._maxLength/i;return Math.floor(Math.min(n,o))}(t),s=i.major.enabled?function(t){const e=[];let i,n;for(i=0,n=t.length;i<n;i++)t[i].major&&e.push(i);return e}(e):[],a=s.length,r=s[0],l=s[a-1],c=[];if(a>o)return function(t,e,i,n){let o,s=0,a=i[0];for(n=Math.ceil(n),o=0;o<t.length;o++)o===a&&(e.push(t[o]),s++,a=i[s*n])}(e,c,s,a/o),c;const h=function(t,e,i){const o=function(t){const e=t.length;let i,n;if(e<2)return!1;for(n=t[0],i=1;i<e;++i)if(t[i]-t[i-1]!==n)return!1;return n}(t),s=e.length/i;if(!o)return Math.max(s,1);const a=Object(n.m)(o);for(let n=0,r=a.length-1;n<r;n++){const t=a[n];if(t>s)return t}return Math.max(s,1)}(s,e,o);if(a>0){let t,i;const o=a>1?Math.round((l-r)/(a-1)):null;for(yt(e,c,h,Object(n.Bb)(o)?0:r-o,r),t=0,i=a-1;t<i;t++)yt(e,c,h,s[t],s[t+1]);return yt(e,c,h,l,Object(n.Bb)(o)?e.length:l+o),c}return yt(e,c,h),c}function yt(t,e,i,o,s){const a=Object(n.Nb)(o,0),r=Math.min(Object(n.Nb)(s,t.length),t.length);let l,c,h,d=0;for(i=Math.ceil(i),s&&(l=s-o,i=l/Math.floor(l/i)),h=a;h<0;)d++,h=Math.round(a+d*i);for(c=Math.max(a,0);c<r;c++)c===h&&(e.push(t[c]),d++,h=Math.round(a+d*i))}n.vb.set(\"scale\",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:\"ticks\",grace:0,grid:{display:!0,lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(t,e)=>e.lineWidth,tickColor:(t,e)=>e.color,offset:!1,borderDash:[],borderDashOffset:0,borderWidth:1},title:{display:!1,text:\"\",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:\"\",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:xt.formatters.values,minor:{},major:{},align:\"center\",crossAlign:\"near\"}}),n.vb.route(\"scale.ticks\",\"color\",\"\",\"color\"),n.vb.route(\"scale.grid\",\"color\",\"\",\"borderColor\"),n.vb.route(\"scale.grid\",\"borderColor\",\"\",\"borderColor\"),n.vb.route(\"scale.title\",\"color\",\"\",\"color\"),n.vb.describe(\"scale\",{_fallback:!1,_scriptable:t=>!t.startsWith(\"before\")&&!t.startsWith(\"after\")&&\"callback\"!==t&&\"parser\"!==t,_indexable:t=>\"borderDash\"!==t&&\"tickBorderDash\"!==t}),n.vb.describe(\"scales\",{_fallback:\"scale\"});const vt=(t,e,i)=>\"top\"===e||\"left\"===e?t[e]+i:t[e]-i;function Ot(t,e){const i=[],n=t.length/e,o=t.length;let s=0;for(;s<o;s+=n)i.push(t[Math.floor(s)]);return i}function jt(t,e,i){const n=t.ticks.length,o=Math.min(e,n-1),s=t._startPixel,a=t._endPixel,r=1e-6;let l,c=t.getPixelForTick(o);if(!(i&&(l=1===n?Math.max(c-s,a-c):0===e?(t.getPixelForTick(1)-c)/2:(c-t.getPixelForTick(o-1))/2,c+=o<e?l:-l,c<s-r||c>a+r)))return c}function Mt(t){return t.drawTicks?t.tickLength:0}function wt(t,e){if(!t.display)return 0;const i=Object(n.x)(t.font,e),o=Object(n.d)(t.padding);return(Object(n.tb)(t.text)?t.text.length:1)*i.lineHeight+o.height}function kt(t,e,i){let o=Object(n.y)(t);return(i&&\"right\"!==e||!i&&\"right\"===e)&&(o=(t=>\"left\"===t?\"right\":\"right\"===t?\"left\":t)(o)),o}class St extends ft{constructor(t){super(),this.id=t.id,this.type=t.type,this.options=void 0,this.ctx=t.ctx,this.chart=t.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(t){const e=this;e.options=t.setContext(e.getContext()),e.axis=t.axis,e._userMin=e.parse(t.min),e._userMax=e.parse(t.max),e._suggestedMin=e.parse(t.suggestedMin),e._suggestedMax=e.parse(t.suggestedMax)}parse(t,e){return t}getUserBounds(){let{_userMin:t,_userMax:e,_suggestedMin:i,_suggestedMax:o}=this;return t=Object(n.n)(t,Number.POSITIVE_INFINITY),e=Object(n.n)(e,Number.NEGATIVE_INFINITY),i=Object(n.n)(i,Number.POSITIVE_INFINITY),o=Object(n.n)(o,Number.NEGATIVE_INFINITY),{min:Object(n.n)(t,i),max:Object(n.n)(e,o),minDefined:Object(n.yb)(t),maxDefined:Object(n.yb)(e)}}getMinMax(t){const e=this;let i,{min:o,max:s,minDefined:a,maxDefined:r}=e.getUserBounds();if(a&&r)return{min:o,max:s};const l=e.getMatchingVisibleMetas();for(let n=0,c=l.length;n<c;++n)i=l[n].controller.getMinMax(e,t),a||(o=Math.min(o,i.min)),r||(s=Math.max(s,i.max));return{min:Object(n.n)(o,Object(n.n)(s,o)),max:Object(n.n)(s,Object(n.n)(o,s))}}getPadding(){const t=this;return{left:t.paddingLeft||0,top:t.paddingTop||0,right:t.paddingRight||0,bottom:t.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels||[]}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){Object(n.o)(this.options.beforeUpdate,[this])}update(t,e,i){const o=this,s=o.options.ticks,a=s.sampleSize;o.beforeUpdate(),o.maxWidth=t,o.maxHeight=e,o._margins=i=Object.assign({left:0,right:0,top:0,bottom:0},i),o.ticks=null,o._labelSizes=null,o._gridLineItems=null,o._labelItems=null,o.beforeSetDimensions(),o.setDimensions(),o.afterSetDimensions(),o._maxLength=o.isHorizontal()?o.width+i.left+i.right:o.height+i.top+i.bottom,o._dataLimitsCached||(o.beforeDataLimits(),o.determineDataLimits(),o.afterDataLimits(),o._range=Object(n.p)(o,o.options.grace),o._dataLimitsCached=!0),o.beforeBuildTicks(),o.ticks=o.buildTicks()||[],o.afterBuildTicks();const r=a<o.ticks.length;o._convertTicksToLabels(r?Ot(o.ticks,a):o.ticks),o.configure(),o.beforeCalculateLabelRotation(),o.calculateLabelRotation(),o.afterCalculateLabelRotation(),s.display&&(s.autoSkip||\"auto\"===s.source)&&(o.ticks=_t(o,o.ticks),o._labelSizes=null),r&&o._convertTicksToLabels(o.ticks),o.beforeFit(),o.fit(),o.afterFit(),o.afterUpdate()}configure(){const t=this;let e,i,n=t.options.reverse;t.isHorizontal()?(e=t.left,i=t.right):(e=t.top,i=t.bottom,n=!n),t._startPixel=e,t._endPixel=i,t._reversePixels=n,t._length=i-e,t._alignToPixels=t.options.alignToPixels}afterUpdate(){Object(n.o)(this.options.afterUpdate,[this])}beforeSetDimensions(){Object(n.o)(this.options.beforeSetDimensions,[this])}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0}afterSetDimensions(){Object(n.o)(this.options.afterSetDimensions,[this])}_callHooks(t){const e=this;e.chart.notifyPlugins(t,e.getContext()),Object(n.o)(e.options[t],[e])}beforeDataLimits(){this._callHooks(\"beforeDataLimits\")}determineDataLimits(){}afterDataLimits(){this._callHooks(\"afterDataLimits\")}beforeBuildTicks(){this._callHooks(\"beforeBuildTicks\")}buildTicks(){return[]}afterBuildTicks(){this._callHooks(\"afterBuildTicks\")}beforeTickToLabelConversion(){Object(n.o)(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(t){const e=this,i=e.options.ticks;let o,s,a;for(o=0,s=t.length;o<s;o++)a=t[o],a.label=Object(n.o)(i.callback,[a.value,o,t],e);for(o=0;o<s;o++)Object(n.Bb)(t[o].label)&&(t.splice(o,1),s--,o--)}afterTickToLabelConversion(){Object(n.o)(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){Object(n.o)(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const t=this,e=t.options,i=e.ticks,o=t.ticks.length,s=i.minRotation||0,a=i.maxRotation;let r,l,c,h=s;if(!t._isVisible()||!i.display||s>=a||o<=1||!t.isHorizontal())return void(t.labelRotation=s);const d=t._getLabelSizes(),u=d.widest.width,g=d.highest.height,b=Object(n.Pb)(t.chart.width-u,0,t.maxWidth);r=e.offset?t.maxWidth/o:b/(o-1),u+6>r&&(r=b/(o-(e.offset?.5:1)),l=t.maxHeight-Mt(e.grid)-i.padding-wt(e.title,t.chart.options.font),c=Math.sqrt(u*u+g*g),h=Object(n.r)(Math.min(Math.asin(Math.min((d.highest.height+6)/r,1)),Math.asin(Math.min(l/c,1))-Math.asin(g/c))),h=Math.max(s,Math.min(a,h))),t.labelRotation=h}afterCalculateLabelRotation(){Object(n.o)(this.options.afterCalculateLabelRotation,[this])}beforeFit(){Object(n.o)(this.options.beforeFit,[this])}fit(){const t=this,e={width:0,height:0},{chart:i,options:{ticks:o,title:s,grid:a}}=t,r=t._isVisible(),l=t.isHorizontal();if(r){const r=wt(s,i.options.font);if(l?(e.width=t.maxWidth,e.height=Mt(a)+r):(e.height=t.maxHeight,e.width=Mt(a)+r),o.display&&t.ticks.length){const{first:i,last:s,widest:a,highest:r}=t._getLabelSizes(),c=2*o.padding,h=Object(n.Lb)(t.labelRotation),d=Math.cos(h),u=Math.sin(h);if(l){const i=o.mirror?0:u*a.width+d*r.height;e.height=Math.min(t.maxHeight,e.height+i+c)}else{const i=o.mirror?0:d*a.width+u*r.height;e.width=Math.min(t.maxWidth,e.width+i+c)}t._calculatePadding(i,s,u,d)}}t._handleMargins(),l?(t.width=t._length=i.width-t._margins.left-t._margins.right,t.height=e.height):(t.width=e.width,t.height=t._length=i.height-t._margins.top-t._margins.bottom)}_calculatePadding(t,e,i,n){const o=this,{ticks:{align:s,padding:a},position:r}=o.options,l=0!==o.labelRotation,c=\"top\"!==r&&\"x\"===o.axis;if(o.isHorizontal()){const r=o.getPixelForTick(0)-o.left,h=o.right-o.getPixelForTick(o.ticks.length-1);let d=0,u=0;l?c?(d=n*t.width,u=i*e.height):(d=i*t.height,u=n*e.width):\"start\"===s?u=e.width:\"end\"===s?d=t.width:(d=t.width/2,u=e.width/2),o.paddingLeft=Math.max((d-r+a)*o.width/(o.width-r),0),o.paddingRight=Math.max((u-h+a)*o.width/(o.width-h),0)}else{let i=e.height/2,n=t.height/2;\"start\"===s?(i=0,n=t.height):\"end\"===s&&(i=e.height,n=0),o.paddingTop=i+a,o.paddingBottom=n+a}}_handleMargins(){const t=this;t._margins&&(t._margins.left=Math.max(t.paddingLeft,t._margins.left),t._margins.top=Math.max(t.paddingTop,t._margins.top),t._margins.right=Math.max(t.paddingRight,t._margins.right),t._margins.bottom=Math.max(t.paddingBottom,t._margins.bottom))}afterFit(){Object(n.o)(this.options.afterFit,[this])}isHorizontal(){const{axis:t,position:e}=this.options;return\"top\"===e||\"bottom\"===e||\"x\"===t}isFullSize(){return this.options.fullSize}_convertTicksToLabels(t){const e=this;e.beforeTickToLabelConversion(),e.generateTickLabels(t),e.afterTickToLabelConversion()}_getLabelSizes(){const t=this;let e=t._labelSizes;if(!e){const i=t.options.ticks.sampleSize;let n=t.ticks;i<n.length&&(n=Ot(n,i)),t._labelSizes=e=t._computeLabelSizes(n,n.length)}return e}_computeLabelSizes(t,e){const{ctx:i,_longestTextCache:o}=this,s=[],a=[];let r,l,c,h,d,u,g,b,p,f,m,x=0,_=0;for(r=0;r<e;++r){if(h=t[r].label,d=this._resolveTickFontOptions(r),i.font=u=d.string,g=o[u]=o[u]||{data:{},gc:[]},b=d.lineHeight,p=f=0,Object(n.Bb)(h)||Object(n.tb)(h)){if(Object(n.tb)(h))for(l=0,c=h.length;l<c;++l)m=h[l],Object(n.Bb)(m)||Object(n.tb)(m)||(p=Object(n.s)(i,g.data,g.gc,p,m),f+=b)}else p=Object(n.s)(i,g.data,g.gc,p,h),f=b;s.push(p),a.push(f),x=Math.max(p,x),_=Math.max(f,_)}!function(t,e){Object(n.e)(t,(t=>{const i=t.gc,n=i.length/2;let o;if(n>e){for(o=0;o<n;++o)delete t.data[i[o]];i.splice(0,n)}}))}(o,e);const y=s.indexOf(x),v=a.indexOf(_),O=t=>({width:s[t]||0,height:a[t]||0});return{first:O(0),last:O(e-1),widest:O(y),highest:O(v)}}getLabelForValue(t){return t}getPixelForValue(t,e){return NaN}getValueForPixel(t){}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getPixelForDecimal(t){const e=this;e._reversePixels&&(t=1-t);const i=e._startPixel+t*e._length;return Object(n.t)(e._alignToPixels?Object(n.v)(e.chart,i,0):i)}getDecimalForPixel(t){const e=(t-this._startPixel)/this._length;return this._reversePixels?1-e:e}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:t,max:e}=this;return t<0&&e<0?e:t>0&&e>0?t:0}getContext(t){const e=this,i=e.ticks||[];if(t>=0&&t<i.length){const n=i[t];return n.$context||(n.$context=function(t,e,i){return Object.assign(Object.create(t),{tick:i,index:e,type:\"tick\"})}(e.getContext(),t,n))}return e.$context||(e.$context=(n=e.chart.getContext(),o=e,Object.assign(Object.create(n),{scale:o,type:\"scale\"})));var n,o}_tickSize(){const t=this,e=t.options.ticks,i=Object(n.Lb)(t.labelRotation),o=Math.abs(Math.cos(i)),s=Math.abs(Math.sin(i)),a=t._getLabelSizes(),r=e.autoSkipPadding||0,l=a?a.widest.width+r:0,c=a?a.highest.height+r:0;return t.isHorizontal()?c*o>l*s?l/o:c/s:c*s<l*o?c/o:l/s}_isVisible(){const t=this.options.display;return\"auto\"!==t?!!t:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(t){const e=this,i=e.axis,o=e.chart,s=e.options,{grid:a,position:r}=s,l=a.offset,c=e.isHorizontal(),h=e.ticks.length+(l?1:0),d=Mt(a),u=[],g=a.setContext(e.getContext(0)),b=g.drawBorder?g.borderWidth:0,p=b/2,f=function(t){return Object(n.v)(o,t,b)};let m,x,_,y,v,O,j,M,w,k,S,D;if(\"top\"===r)m=f(e.bottom),O=e.bottom-d,M=m-p,k=f(t.top)+p,D=t.bottom;else if(\"bottom\"===r)m=f(e.top),k=t.top,D=f(t.bottom)-p,O=m+p,M=e.top+d;else if(\"left\"===r)m=f(e.right),v=e.right-d,j=m-p,w=f(t.left)+p,S=t.right;else if(\"right\"===r)m=f(e.left),w=t.left,S=f(t.right)-p,v=m+p,j=e.left+d;else if(\"x\"===i){if(\"center\"===r)m=f((t.top+t.bottom)/2+.5);else if(Object(n.Ab)(r)){const t=Object.keys(r)[0],i=r[t];m=f(e.chart.scales[t].getPixelForValue(i))}k=t.top,D=t.bottom,O=m+p,M=O+d}else if(\"y\"===i){if(\"center\"===r)m=f((t.left+t.right)/2);else if(Object(n.Ab)(r)){const t=Object.keys(r)[0],i=r[t];m=f(e.chart.scales[t].getPixelForValue(i))}v=m-p,j=v-d,w=t.left,S=t.right}for(x=0;x<h;++x){const t=a.setContext(e.getContext(x)),i=t.lineWidth,s=t.color,r=a.borderDash||[],h=t.borderDashOffset,d=t.tickWidth,g=t.tickColor,b=t.tickBorderDash||[],p=t.tickBorderDashOffset;_=jt(e,x,l),void 0!==_&&(y=Object(n.v)(o,_,i),c?v=j=w=S=y:O=M=k=D=y,u.push({tx1:v,ty1:O,tx2:j,ty2:M,x1:w,y1:k,x2:S,y2:D,width:i,color:s,borderDash:r,borderDashOffset:h,tickWidth:d,tickColor:g,tickBorderDash:b,tickBorderDashOffset:p}))}return e._ticksLength=h,e._borderValue=m,u}_computeLabelItems(t){const e=this,i=e.axis,o=e.options,{position:s,ticks:a}=o,r=e.isHorizontal(),l=e.ticks,{align:c,crossAlign:h,padding:d,mirror:u}=a,g=Mt(o.grid),b=g+d,p=u?-d:b,f=-Object(n.Lb)(e.labelRotation),m=[];let x,_,y,v,O,j,M,w,k,S,D,P,C=\"middle\";if(\"top\"===s)j=e.bottom-p,M=e._getXAxisLabelAlignment();else if(\"bottom\"===s)j=e.top+p,M=e._getXAxisLabelAlignment();else if(\"left\"===s){const t=e._getYAxisLabelAlignment(g);M=t.textAlign,O=t.x}else if(\"right\"===s){const t=e._getYAxisLabelAlignment(g);M=t.textAlign,O=t.x}else if(\"x\"===i){if(\"center\"===s)j=(t.top+t.bottom)/2+b;else if(Object(n.Ab)(s)){const t=Object.keys(s)[0],i=s[t];j=e.chart.scales[t].getPixelForValue(i)+b}M=e._getXAxisLabelAlignment()}else if(\"y\"===i){if(\"center\"===s)O=(t.left+t.right)/2-b;else if(Object(n.Ab)(s)){const t=Object.keys(s)[0],i=s[t];O=e.chart.scales[t].getPixelForValue(i)}M=e._getYAxisLabelAlignment(g).textAlign}\"y\"===i&&(\"start\"===c?C=\"top\":\"end\"===c&&(C=\"bottom\"));const A=e._getLabelSizes();for(x=0,_=l.length;x<_;++x){y=l[x],v=y.label;const t=a.setContext(e.getContext(x));w=e.getPixelForTick(x)+a.labelOffset,k=e._resolveTickFontOptions(x),S=k.lineHeight,D=Object(n.tb)(v)?v.length:1;const i=D/2,o=t.color,c=t.textStrokeColor,d=t.textStrokeWidth;r?(O=w,P=\"top\"===s?\"near\"===h||0!==f?-D*S+S/2:\"center\"===h?-A.highest.height/2-i*S+S:-A.highest.height+S/2:\"near\"===h||0!==f?S/2:\"center\"===h?A.highest.height/2-i*S:A.highest.height-D*S,u&&(P*=-1)):(j=w,P=(1-D)*S/2),m.push({rotation:f,label:v,font:k,color:o,strokeColor:c,strokeWidth:d,textOffset:P,textAlign:M,textBaseline:C,translation:[O,j]})}return m}_getXAxisLabelAlignment(){const{position:t,ticks:e}=this.options;if(-Object(n.Lb)(this.labelRotation))return\"top\"===t?\"left\":\"right\";let i=\"center\";return\"start\"===e.align?i=\"left\":\"end\"===e.align&&(i=\"right\"),i}_getYAxisLabelAlignment(t){const e=this,{position:i,ticks:{crossAlign:n,mirror:o,padding:s}}=e.options,a=t+s,r=e._getLabelSizes().widest.width;let l,c;return\"left\"===i?o?(l=\"left\",c=e.right+s):(c=e.right-a,\"near\"===n?l=\"right\":\"center\"===n?(l=\"center\",c-=r/2):(l=\"left\",c=e.left)):\"right\"===i?o?(l=\"right\",c=e.left+s):(c=e.left+a,\"near\"===n?l=\"left\":\"center\"===n?(l=\"center\",c+=r/2):(l=\"right\",c=e.right)):l=\"right\",{textAlign:l,x:c}}_computeLabelArea(){const t=this;if(t.options.ticks.mirror)return;const e=t.chart,i=t.options.position;return\"left\"===i||\"right\"===i?{top:0,left:t.left,bottom:e.height,right:t.right}:\"top\"===i||\"bottom\"===i?{top:t.top,left:0,bottom:t.bottom,right:e.width}:void 0}drawBackground(){const{ctx:t,options:{backgroundColor:e},left:i,top:n,width:o,height:s}=this;e&&(t.save(),t.fillStyle=e,t.fillRect(i,n,o,s),t.restore())}getLineWidthForValue(t){const e=this,i=e.options.grid;if(!e._isVisible()||!i.display)return 0;const n=e.ticks.findIndex((e=>e.value===t));if(n>=0){return i.setContext(e.getContext(n)).lineWidth}return 0}drawGrid(t){const e=this,i=e.options.grid,o=e.ctx,s=e.chart,a=i.setContext(e.getContext()),r=i.drawBorder?a.borderWidth:0,l=e._gridLineItems||(e._gridLineItems=e._computeGridLineItems(t));let c,h;const d=(t,e,i)=>{i.width&&i.color&&(o.save(),o.lineWidth=i.width,o.strokeStyle=i.color,o.setLineDash(i.borderDash||[]),o.lineDashOffset=i.borderDashOffset,o.beginPath(),o.moveTo(t.x,t.y),o.lineTo(e.x,e.y),o.stroke(),o.restore())};if(i.display)for(c=0,h=l.length;c<h;++c){const t=l[c];i.drawOnChartArea&&d({x:t.x1,y:t.y1},{x:t.x2,y:t.y2},t),i.drawTicks&&d({x:t.tx1,y:t.ty1},{x:t.tx2,y:t.ty2},{color:t.tickColor,width:t.tickWidth,borderDash:t.tickBorderDash,borderDashOffset:t.tickBorderDashOffset})}if(r){const t=a.lineWidth,i=e._borderValue;let o,l,c,h;e.isHorizontal()?(o=Object(n.v)(s,e.left,r)-r/2,l=Object(n.v)(s,e.right,t)+t/2,c=h=i):(c=Object(n.v)(s,e.top,r)-r/2,h=Object(n.v)(s,e.bottom,t)+t/2,o=l=i),d({x:o,y:c},{x:l,y:h},{width:r,color:a.borderColor})}}drawLabels(t){const e=this;if(!e.options.ticks.display)return;const i=e.ctx,o=e._computeLabelArea();o&&Object(n.Cb)(i,o);const s=e._labelItems||(e._labelItems=e._computeLabelItems(t));let a,r;for(a=0,r=s.length;a<r;++a){const t=s[a],e=t.font,o=t.label;let r=t.textOffset;Object(n.w)(i,o,0,r,e,t)}o&&Object(n.Eb)(i)}drawTitle(){const{ctx:t,options:{position:e,title:i,reverse:o}}=this;if(!i.display)return;const s=Object(n.x)(i.font),a=Object(n.d)(i.padding),r=i.align;let l=s.lineHeight/2;\"bottom\"===e?(l+=a.bottom,Object(n.tb)(i.text)&&(l+=s.lineHeight*(i.text.length-1))):l+=a.top;const{titleX:c,titleY:h,maxWidth:d,rotation:u}=function(t,e,i,o){const{top:s,left:a,bottom:r,right:l}=t;let c,h,d,u=0;return t.isHorizontal()?(h=Object(n.z)(o,a,l),d=vt(t,i,e),c=l-a):(h=vt(t,i,e),d=Object(n.z)(o,r,s),u=\"left\"===i?-n.i:n.i),{titleX:h,titleY:d,maxWidth:c,rotation:u}}(this,l,e,r);Object(n.w)(t,i.text,0,0,s,{color:i.color,maxWidth:d,rotation:u,textAlign:kt(r,e,o),textBaseline:\"middle\",translation:[c,h]})}draw(t){const e=this;e._isVisible()&&(e.drawBackground(),e.drawGrid(t),e.drawTitle(),e.drawLabels(t))}_layers(){const t=this,e=t.options,i=e.ticks&&e.ticks.z||0,n=e.grid&&e.grid.z||0;return t._isVisible()&&i!==n&&t.draw===St.prototype.draw?[{z:n,draw(e){t.drawBackground(),t.drawGrid(e),t.drawTitle()}},{z:i,draw(e){t.drawLabels(e)}}]:[{z:i,draw(e){t.draw(e)}}]}getMatchingVisibleMetas(t){const e=this,i=e.chart.getSortedVisibleDatasetMetas(),n=e.axis+\"AxisID\",o=[];let s,a;for(s=0,a=i.length;s<a;++s){const a=i[s];a[n]!==e.id||t&&a.type!==t||o.push(a)}return o}_resolveTickFontOptions(t){const e=this.options.ticks.setContext(this.getContext(t));return Object(n.x)(e.font)}}class Dt{constructor(t,e,i){this.type=t,this.scope=e,this.override=i,this.items=Object.create(null)}isForType(t){return Object.prototype.isPrototypeOf.call(this.type.prototype,t.prototype)}register(t){const e=this,i=Object.getPrototypeOf(t);let o;(function(t){return\"id\"in t&&\"defaults\"in t})(i)&&(o=e.register(i));const s=e.items,a=t.id,r=e.scope+\".\"+a;if(!a)throw new Error(\"class does not have id: \"+t);return a in s||(s[a]=t,function(t,e,i){const o=Object(n.a)(Object.create(null),[i?n.vb.get(i):{},n.vb.get(e),t.defaults]);n.vb.set(e,o),t.defaultRoutes&&function(t,e){Object.keys(e).forEach((i=>{const o=i.split(\".\"),s=o.pop(),a=[t].concat(o).join(\".\"),r=e[i].split(\".\"),l=r.pop(),c=r.join(\".\");n.vb.route(a,s,c,l)}))}(e,t.defaultRoutes);t.descriptors&&n.vb.describe(e,t.descriptors)}(t,r,o),e.override&&n.vb.override(t.id,t.overrides)),r}get(t){return this.items[t]}unregister(t){const e=this.items,i=t.id,o=this.scope;i in e&&delete e[i],o&&i in n.vb[o]&&(delete n.vb[o][i],this.override&&delete n.A[i])}}var Pt=new class{constructor(){this.controllers=new Dt(y,\"datasets\",!0),this.elements=new Dt(ft,\"elements\"),this.plugins=new Dt(Object,\"plugins\"),this.scales=new Dt(St,\"scales\"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...t){this._each(\"register\",t)}remove(...t){this._each(\"unregister\",t)}addControllers(...t){this._each(\"register\",t,this.controllers)}addElements(...t){this._each(\"register\",t,this.elements)}addPlugins(...t){this._each(\"register\",t,this.plugins)}addScales(...t){this._each(\"register\",t,this.scales)}getController(t){return this._get(t,this.controllers,\"controller\")}getElement(t){return this._get(t,this.elements,\"element\")}getPlugin(t){return this._get(t,this.plugins,\"plugin\")}getScale(t){return this._get(t,this.scales,\"scale\")}removeControllers(...t){this._each(\"unregister\",t,this.controllers)}removeElements(...t){this._each(\"unregister\",t,this.elements)}removePlugins(...t){this._each(\"unregister\",t,this.plugins)}removeScales(...t){this._each(\"unregister\",t,this.scales)}_each(t,e,i){const o=this;[...e].forEach((e=>{const s=i||o._getRegistryForType(e);i||s.isForType(e)||s===o.plugins&&e.id?o._exec(t,s,e):Object(n.e)(e,(e=>{const n=i||o._getRegistryForType(e);o._exec(t,n,e)}))}))}_exec(t,e,i){const o=Object(n.D)(t);Object(n.o)(i[\"before\"+o],[],i),e[t](i),Object(n.o)(i[\"after\"+o],[],i)}_getRegistryForType(t){for(let e=0;e<this._typedRegistries.length;e++){const i=this._typedRegistries[e];if(i.isForType(t))return i}return this.plugins}_get(t,e,i){const n=e.get(t);if(void 0===n)throw new Error('\"'+t+'\" is not a registered '+i+\".\");return n}};class Ct{constructor(){this._init=[]}notify(t,e,i,n){const o=this;\"beforeInit\"===e&&(o._init=o._createDescriptors(t,!0),o._notify(o._init,t,\"install\"));const s=n?o._descriptors(t).filter(n):o._descriptors(t),a=o._notify(s,t,e,i);return\"destroy\"===e&&(o._notify(s,t,\"stop\"),o._notify(o._init,t,\"uninstall\")),a}_notify(t,e,i,o){o=o||{};for(const s of t){const t=s.plugin,a=t[i],r=[e,o,s.options];if(!1===Object(n.o)(a,r,t)&&o.cancelable)return!1}return!0}invalidate(){Object(n.Bb)(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(t){if(this._cache)return this._cache;const e=this._cache=this._createDescriptors(t);return this._notifyStateChanges(t),e}_createDescriptors(t,e){const i=t&&t.config,o=Object(n.Nb)(i.options&&i.options.plugins,{}),s=function(t){const e=[],i=Object.keys(Pt.plugins.items);for(let o=0;o<i.length;o++)e.push(Pt.getPlugin(i[o]));const n=t.plugins||[];for(let o=0;o<n.length;o++){const t=n[o];-1===e.indexOf(t)&&e.push(t)}return e}(i);return!1!==o||e?function(t,e,i,n){const o=[],s=t.getContext();for(let a=0;a<e.length;a++){const r=e[a],l=At(i[r.id],n);null!==l&&o.push({plugin:r,options:Lt(t.config,r,l,s)})}return o}(t,s,o,e):[]}_notifyStateChanges(t){const e=this._oldCache||[],i=this._cache,n=(t,e)=>t.filter((t=>!e.some((e=>t.plugin.id===e.plugin.id))));this._notify(n(e,i),t,\"stop\"),this._notify(n(i,e),t,\"start\")}}function At(t,e){return e||!1!==t?!0===t?{}:t:null}function Lt(t,e,i,n){const o=t.pluginScopeKeys(e),s=t.getOptionScopes(i,o);return t.createResolver(s,n,[\"\"],{scriptable:!1,indexable:!1,allKeys:!0})}function Tt(t,e){const i=n.vb.datasets[t]||{};return((e.datasets||{})[t]||{}).indexAxis||e.indexAxis||i.indexAxis||\"x\"}function Et(t,e){return\"x\"===t||\"y\"===t?t:e.axis||(\"top\"===(i=e.position)||\"bottom\"===i?\"x\":\"left\"===i||\"right\"===i?\"y\":void 0)||t.charAt(0).toLowerCase();var i}function zt(t){const e=t.options||(t.options={});e.plugins=Object(n.Nb)(e.plugins,{}),e.scales=function(t,e){const i=n.A[t.type]||{scales:{}},o=e.scales||{},s=Tt(t.type,e),a=Object.create(null),r=Object.create(null);return Object.keys(o).forEach((t=>{const e=o[t],l=Et(t,e),c=function(t,e){return t===e?\"_index_\":\"_value_\"}(l,s),h=i.scales||{};a[l]=a[l]||t,r[t]=Object(n.J)(Object.create(null),[{axis:l},e,h[l],h[c]])})),t.data.datasets.forEach((i=>{const s=i.type||t.type,l=i.indexAxis||Tt(s,e),c=(n.A[s]||{}).scales||{};Object.keys(c).forEach((t=>{const e=function(t,e){let i=t;return\"_index_\"===t?i=e:\"_value_\"===t&&(i=\"x\"===e?\"y\":\"x\"),i}(t,l),s=i[e+\"AxisID\"]||a[e]||e;r[s]=r[s]||Object.create(null),Object(n.J)(r[s],[{axis:e},o[s],c[t]])}))})),Object.keys(r).forEach((t=>{const e=r[t];Object(n.J)(e,[n.vb.scales[e.type],n.vb.scale])})),r}(t,e)}function Rt(t){return(t=t||{}).datasets=t.datasets||[],t.labels=t.labels||[],t}const Ft=new Map,It=new Set;function Vt(t,e){let i=Ft.get(t);return i||(i=e(),Ft.set(t,i),It.add(i)),i}const Bt=(t,e,i)=>{const o=Object(n.xb)(e,i);void 0!==o&&t.add(o)};class Nt{constructor(t){this._config=function(t){return(t=t||{}).data=Rt(t.data),zt(t),t}(t),this._scopeCache=new Map,this._resolverCache=new Map}get type(){return this._config.type}set type(t){this._config.type=t}get data(){return this._config.data}set data(t){this._config.data=Rt(t)}get options(){return this._config.options}set options(t){this._config.options=t}get plugins(){return this._config.plugins}update(){const t=this._config;this.clearCache(),zt(t)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(t){return Vt(t,(()=>[[`datasets.${t}`,\"\"]]))}datasetAnimationScopeKeys(t,e){return Vt(`${t}.transition.${e}`,(()=>[[`datasets.${t}.transitions.${e}`,`transitions.${e}`],[`datasets.${t}`,\"\"]]))}datasetElementScopeKeys(t,e){return Vt(`${t}-${e}`,(()=>[[`datasets.${t}.elements.${e}`,`datasets.${t}`,`elements.${e}`,\"\"]]))}pluginScopeKeys(t){const e=t.id;return Vt(`${this.type}-plugin-${e}`,(()=>[[`plugins.${e}`,...t.additionalOptionScopes||[]]]))}_cachedScopes(t,e){const i=this._scopeCache;let n=i.get(t);return n&&!e||(n=new Map,i.set(t,n)),n}getOptionScopes(t,e,i){const{options:o,type:s}=this,a=this._cachedScopes(t,i),r=a.get(e);if(r)return r;const l=new Set;e.forEach((e=>{t&&(l.add(t),e.forEach((e=>Bt(l,t,e)))),e.forEach((t=>Bt(l,o,t))),e.forEach((t=>Bt(l,n.A[s]||{},t))),e.forEach((t=>Bt(l,n.vb,t))),e.forEach((t=>Bt(l,n.E,t)))}));const c=[...l];return It.has(e)&&a.set(e,c),c}chartOptionScopes(){const{options:t,type:e}=this;return[t,n.A[e]||{},n.vb.datasets[e]||{},{type:e},n.vb,n.E]}resolveNamedOptions(t,e,i,o=[\"\"]){const s={$shared:!0},{resolver:a,subPrefixes:r}=Wt(this._resolverCache,t,o);let l=a;if(function(t,e){const{isScriptable:i,isIndexable:o}=Object(n.I)(t);for(const s of e)if(i(s)&&Object(n.F)(t[s])||o(s)&&Object(n.tb)(t[s]))return!0;return!1}(a,e)){s.$shared=!1,i=Object(n.F)(i)?i():i;const e=this.createResolver(t,i,r);l=Object(n.G)(a,i,e)}for(const n of e)s[n]=l[n];return s}createResolver(t,e,i=[\"\"],o){const{resolver:s}=Wt(this._resolverCache,t,i);return Object(n.Ab)(e)?Object(n.G)(s,e,void 0,o):s}}function Wt(t,e,i){let o=t.get(e);o||(o=new Map,t.set(e,o));const s=i.join();let a=o.get(s);if(!a){a={resolver:Object(n.H)(e,i),subPrefixes:i.filter((t=>!t.toLowerCase().includes(\"hover\")))},o.set(s,a)}return a}const Ht=[\"top\",\"bottom\",\"left\",\"right\",\"chartArea\"];function $t(t,e){return\"top\"===t||\"bottom\"===t||-1===Ht.indexOf(t)&&\"x\"===e}function Ut(t,e){return function(i,n){return i[t]===n[t]?i[e]-n[e]:i[t]-n[t]}}function Yt(t){const e=t.chart,i=e.options.animation;e.notifyPlugins(\"afterRender\"),Object(n.o)(i&&i.onComplete,[t],e)}function Xt(t){const e=t.chart,i=e.options.animation;Object(n.o)(i&&i.onProgress,[t],e)}function Kt(){return\"undefined\"!==typeof window&&\"undefined\"!==typeof document}function qt(t){return Kt()&&\"string\"===typeof t?t=document.getElementById(t):t&&t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas),t}const Gt={},Jt=t=>{const e=qt(t);return Object.values(Gt).filter((t=>t.canvas===e)).pop()};class Qt{constructor(t,e){const i=this;this.config=e=new Nt(e);const s=qt(t),a=Jt(s);if(a)throw new Error(\"Canvas is already in use. Chart with ID '\"+a.id+\"' must be destroyed before the canvas can be reused.\");const r=e.createResolver(e.chartOptionScopes(),i.getContext());this.platform=i._initializePlatform(s,e);const l=i.platform.acquireContext(s,r.aspectRatio),c=l&&l.canvas,h=c&&c.height,d=c&&c.width;this.id=Object(n.K)(),this.ctx=l,this.canvas=c,this.width=d,this.height=h,this._options=r,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._sortedMetasets=[],this.scales={},this.scale=void 0,this._plugins=new Ct,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=Object(n.L)((()=>this.update(\"resize\")),r.resizeDelay||0),Gt[i.id]=i,l&&c?(o.listen(i,\"complete\",Yt),o.listen(i,\"progress\",Xt),i._initialize(),i.attached&&i.update()):console.error(\"Failed to create chart: can't acquire context from the given item\")}get aspectRatio(){const{options:{aspectRatio:t,maintainAspectRatio:e},width:i,height:o,_aspectRatio:s}=this;return Object(n.Bb)(t)?e&&s?s:o?i/o:null:t}get data(){return this.config.data}set data(t){this.config.data=t}get options(){return this._options}set options(t){this.config.options=t}_initialize(){const t=this;return t.notifyPlugins(\"beforeInit\"),t.options.responsive?t.resize():Object(n.M)(t,t.options.devicePixelRatio),t.bindEvents(),t.notifyPlugins(\"afterInit\"),t}_initializePlatform(t,e){return e.platform?new e.platform:!Kt()||\"undefined\"!==typeof OffscreenCanvas&&t instanceof OffscreenCanvas?new it:new pt}clear(){return Object(n.T)(this.canvas,this.ctx),this}stop(){return o.stop(this),this}resize(t,e){o.running(this)?this._resizeBeforeDraw={width:t,height:e}:this._resize(t,e)}_resize(t,e){const i=this,o=i.options,s=i.canvas,a=o.maintainAspectRatio&&i.aspectRatio,r=i.platform.getMaximumSize(s,t,e,a),l=i.currentDevicePixelRatio,c=o.devicePixelRatio||i.platform.getDevicePixelRatio();i.width===r.width&&i.height===r.height&&l===c||(i.width=r.width,i.height=r.height,i._aspectRatio=i.aspectRatio,Object(n.M)(i,c,!0),i.notifyPlugins(\"resize\",{size:r}),Object(n.o)(o.onResize,[i,r],i),i.attached&&i._doResize()&&i.render())}ensureScalesHaveIDs(){const t=this.options.scales||{};Object(n.e)(t,((t,e)=>{t.id=e}))}buildOrUpdateScales(){const t=this,e=t.options,i=e.scales,o=t.scales,s=Object.keys(o).reduce(((t,e)=>(t[e]=!1,t)),{});let a=[];i&&(a=a.concat(Object.keys(i).map((t=>{const e=i[t],n=Et(t,e),o=\"r\"===n,s=\"x\"===n;return{options:e,dposition:o?\"chartArea\":s?\"bottom\":\"left\",dtype:o?\"radialLinear\":s?\"category\":\"linear\"}})))),Object(n.e)(a,(i=>{const a=i.options,r=a.id,l=Et(r,a),c=Object(n.Nb)(a.type,i.dtype);void 0!==a.position&&$t(a.position,l)===$t(i.dposition)||(a.position=i.dposition),s[r]=!0;let h=null;if(r in o&&o[r].type===c)h=o[r];else{h=new(Pt.getScale(c))({id:r,type:c,ctx:t.ctx,chart:t}),o[h.id]=h}h.init(a,e)})),Object(n.e)(s,((t,e)=>{t||delete o[e]})),Object(n.e)(o,(e=>{tt.configure(t,e,e.options),tt.addBox(t,e)}))}_updateMetasetIndex(t,e){const i=this._metasets,n=t.index;n!==e&&(i[n]=i[e],i[e]=t,t.index=e)}_updateMetasets(){const t=this,e=t._metasets,i=t.data.datasets.length,n=e.length;if(n>i){for(let e=i;e<n;++e)t._destroyDatasetMeta(e);e.splice(i,n-i)}t._sortedMetasets=e.slice(0).sort(Ut(\"order\",\"index\"))}_removeUnreferencedMetasets(){const t=this,{_metasets:e,data:{datasets:i}}=t;e.length>i.length&&delete t._stacks,e.forEach(((e,n)=>{0===i.filter((t=>t===e._dataset)).length&&t._destroyDatasetMeta(n)}))}buildOrUpdateControllers(){const t=this,e=[],i=t.data.datasets;let o,s;for(t._removeUnreferencedMetasets(),o=0,s=i.length;o<s;o++){const s=i[o];let a=t.getDatasetMeta(o);const r=s.type||t.config.type;if(a.type&&a.type!==r&&(t._destroyDatasetMeta(o),a=t.getDatasetMeta(o)),a.type=r,a.indexAxis=s.indexAxis||Tt(r,t.options),a.order=s.order||0,t._updateMetasetIndex(a,o),a.label=\"\"+s.label,a.visible=t.isDatasetVisible(o),a.controller)a.controller.updateIndex(o),a.controller.linkScales();else{const i=Pt.getController(r),{datasetElementType:s,dataElementType:l}=n.vb.datasets[r];Object.assign(i.prototype,{dataElementType:Pt.getElement(l),datasetElementType:s&&Pt.getElement(s)}),a.controller=new i(t,o),e.push(a.controller)}}return t._updateMetasets(),e}_resetElements(){const t=this;Object(n.e)(t.data.datasets,((e,i)=>{t.getDatasetMeta(i).controller.reset()}),t)}reset(){this._resetElements(),this.notifyPlugins(\"reset\")}update(t){const e=this,i=e.config;i.update(),e._options=i.createResolver(i.chartOptionScopes(),e.getContext()),Object(n.e)(e.scales,(t=>{tt.removeBox(e,t)}));const o=e._animationsDisabled=!e.options.animation;if(e.ensureScalesHaveIDs(),e.buildOrUpdateScales(),e._plugins.invalidate(),!1===e.notifyPlugins(\"beforeUpdate\",{mode:t,cancelable:!0}))return;const s=e.buildOrUpdateControllers();e.notifyPlugins(\"beforeElementsUpdate\");let a=0;for(let n=0,r=e.data.datasets.length;n<r;n++){const{controller:t}=e.getDatasetMeta(n),i=!o&&-1===s.indexOf(t);t.buildOrUpdateElements(i),a=Math.max(+t.getMaxOverflow(),a)}e._minPadding=a,e._updateLayout(a),o||Object(n.e)(s,(t=>{t.reset()})),e._updateDatasets(t),e.notifyPlugins(\"afterUpdate\",{mode:t}),e._layers.sort(Ut(\"z\",\"_idx\")),e._lastEvent&&e._eventHandler(e._lastEvent,!0),e.render()}_updateLayout(t){const e=this;if(!1===e.notifyPlugins(\"beforeLayout\",{cancelable:!0}))return;tt.update(e,e.width,e.height,t);const i=e.chartArea,o=i.width<=0||i.height<=0;e._layers=[],Object(n.e)(e.boxes,(t=>{o&&\"chartArea\"===t.position||(t.configure&&t.configure(),e._layers.push(...t._layers()))}),e),e._layers.forEach(((t,e)=>{t._idx=e})),e.notifyPlugins(\"afterLayout\")}_updateDatasets(t){const e=this,i=\"function\"===typeof t;if(!1!==e.notifyPlugins(\"beforeDatasetsUpdate\",{mode:t,cancelable:!0})){for(let n=0,o=e.data.datasets.length;n<o;++n)e._updateDataset(n,i?t({datasetIndex:n}):t);e.notifyPlugins(\"afterDatasetsUpdate\",{mode:t})}}_updateDataset(t,e){const i=this,n=i.getDatasetMeta(t),o={meta:n,index:t,mode:e,cancelable:!0};!1!==i.notifyPlugins(\"beforeDatasetUpdate\",o)&&(n.controller._update(e),o.cancelable=!1,i.notifyPlugins(\"afterDatasetUpdate\",o))}render(){const t=this;!1!==t.notifyPlugins(\"beforeRender\",{cancelable:!0})&&(o.has(t)?t.attached&&!o.running(t)&&o.start(t):(t.draw(),Yt({chart:t})))}draw(){const t=this;let e;if(t._resizeBeforeDraw){const{width:e,height:i}=t._resizeBeforeDraw;t._resize(e,i),t._resizeBeforeDraw=null}if(t.clear(),t.width<=0||t.height<=0)return;if(!1===t.notifyPlugins(\"beforeDraw\",{cancelable:!0}))return;const i=t._layers;for(e=0;e<i.length&&i[e].z<=0;++e)i[e].draw(t.chartArea);for(t._drawDatasets();e<i.length;++e)i[e].draw(t.chartArea);t.notifyPlugins(\"afterDraw\")}_getSortedDatasetMetas(t){const e=this._sortedMetasets,i=[];let n,o;for(n=0,o=e.length;n<o;++n){const o=e[n];t&&!o.visible||i.push(o)}return i}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){const t=this;if(!1===t.notifyPlugins(\"beforeDatasetsDraw\",{cancelable:!0}))return;const e=t.getSortedVisibleDatasetMetas();for(let i=e.length-1;i>=0;--i)t._drawDataset(e[i]);t.notifyPlugins(\"afterDatasetsDraw\")}_drawDataset(t){const e=this,i=e.ctx,o=t._clip,s=e.chartArea,a={meta:t,index:t.index,cancelable:!0};!1!==e.notifyPlugins(\"beforeDatasetDraw\",a)&&(Object(n.Cb)(i,{left:!1===o.left?0:s.left-o.left,right:!1===o.right?e.width:s.right+o.right,top:!1===o.top?0:s.top-o.top,bottom:!1===o.bottom?e.height:s.bottom+o.bottom}),t.controller.draw(),Object(n.Eb)(i),a.cancelable=!1,e.notifyPlugins(\"afterDatasetDraw\",a))}getElementsAtEventForMode(t,e,i,n){const o=H.modes[e];return\"function\"===typeof o?o(this,t,i,n):[]}getDatasetMeta(t){const e=this.data.datasets[t],i=this._metasets;let n=i.filter((t=>t&&t._dataset===e)).pop();return n||(n=i[t]={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:e&&e.order||0,index:t,_dataset:e,_parsed:[],_sorted:!1}),n}getContext(){return this.$context||(this.$context={chart:this,type:\"chart\"})}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(t){const e=this.data.datasets[t];if(!e)return!1;const i=this.getDatasetMeta(t);return\"boolean\"===typeof i.hidden?!i.hidden:!e.hidden}setDatasetVisibility(t,e){this.getDatasetMeta(t).hidden=!e}toggleDataVisibility(t){this._hiddenIndices[t]=!this._hiddenIndices[t]}getDataVisibility(t){return!this._hiddenIndices[t]}_updateDatasetVisibility(t,e){const i=this,n=e?\"show\":\"hide\",o=i.getDatasetMeta(t),s=o.controller._resolveAnimations(void 0,n);i.setDatasetVisibility(t,e),s.update(o,{visible:e}),i.update((e=>e.datasetIndex===t?n:void 0))}hide(t){this._updateDatasetVisibility(t,!1)}show(t){this._updateDatasetVisibility(t,!0)}_destroyDatasetMeta(t){const e=this,i=e._metasets&&e._metasets[t];i&&i.controller&&(i.controller._destroy(),delete e._metasets[t])}destroy(){const t=this,{canvas:e,ctx:i}=t;let s,a;for(t.stop(),o.remove(t),s=0,a=t.data.datasets.length;s<a;++s)t._destroyDatasetMeta(s);t.config.clearCache(),e&&(t.unbindEvents(),Object(n.T)(e,i),t.platform.releaseContext(i),t.canvas=null,t.ctx=null),t.notifyPlugins(\"destroy\"),delete Gt[t.id]}toBase64Image(...t){return this.canvas.toDataURL(...t)}bindEvents(){const t=this,e=t._listeners,i=t.platform,o=(n,o)=>{i.addEventListener(t,n,o),e[n]=o},s=(n,o)=>{e[n]&&(i.removeEventListener(t,n,o),delete e[n])};let a=function(e,i,n){e.offsetX=i,e.offsetY=n,t._eventHandler(e)};if(Object(n.e)(t.options.events,(t=>o(t,a))),t.options.responsive){let e;a=(e,i)=>{t.canvas&&t.resize(e,i)};const n=()=>{s(\"attach\",n),t.attached=!0,t.resize(),o(\"resize\",a),o(\"detach\",e)};e=()=>{t.attached=!1,s(\"resize\",a),o(\"attach\",n)},i.isAttached(t.canvas)?n():e()}else t.attached=!0}unbindEvents(){const t=this,e=t._listeners;e&&(delete t._listeners,Object(n.e)(e,((e,i)=>{t.platform.removeEventListener(t,i,e)})))}updateHoverStyle(t,e,i){const n=i?\"set\":\"remove\";let o,s,a,r;for(\"dataset\"===e&&(o=this.getDatasetMeta(t[0].datasetIndex),o.controller[\"_\"+n+\"DatasetHoverStyle\"]()),a=0,r=t.length;a<r;++a){s=t[a];const e=s&&this.getDatasetMeta(s.datasetIndex).controller;e&&e[n+\"HoverStyle\"](s.element,s.datasetIndex,s.index)}}getActiveElements(){return this._active||[]}setActiveElements(t){const e=this,i=e._active||[],o=t.map((({datasetIndex:t,index:i})=>{const n=e.getDatasetMeta(t);if(!n)throw new Error(\"No dataset found at index \"+t);return{datasetIndex:t,element:n.data[i],index:i}}));!Object(n.U)(o,i)&&(e._active=o,e._updateHoverStyles(o,i))}notifyPlugins(t,e,i){return this._plugins.notify(this,t,e,i)}_updateHoverStyles(t,e,i){const n=this,o=n.options.hover,s=(t,e)=>t.filter((t=>!e.some((e=>t.datasetIndex===e.datasetIndex&&t.index===e.index)))),a=s(e,t),r=i?t:s(t,e);a.length&&n.updateHoverStyle(a,o.mode,!1),r.length&&o.mode&&n.updateHoverStyle(r,o.mode,!0)}_eventHandler(t,e){const i=this,n={event:t,replay:e,cancelable:!0},o=e=>(e.options.events||this.options.events).includes(t.type);if(!1===i.notifyPlugins(\"beforeEvent\",n,o))return;const s=i._handleEvent(t,e);return n.cancelable=!1,i.notifyPlugins(\"afterEvent\",n,o),(s||n.changed)&&i.render(),i}_handleEvent(t,e){const i=this,{_active:o=[],options:s}=i,a=s.hover,r=e;let l=[],c=!1,h=null;return\"mouseout\"!==t.type&&(l=i.getElementsAtEventForMode(t,a.mode,a,r),h=\"click\"===t.type?i._lastEvent:t),i._lastEvent=null,Object(n.b)(t,i.chartArea,i._minPadding)&&(Object(n.o)(s.onHover,[t,l,i],i),\"mouseup\"!==t.type&&\"click\"!==t.type&&\"contextmenu\"!==t.type||Object(n.o)(s.onClick,[t,l,i],i)),c=!Object(n.U)(l,o),(c||e)&&(i._active=l,i._updateHoverStyles(l,o,e)),i._lastEvent=h,c}}const Zt=()=>Object(n.e)(Qt.instances,(t=>t._plugins.invalidate())),te=!0;function ee(t,e){const{startAngle:i,endAngle:o,pixelMargin:s,x:a,y:r,outerRadius:l,innerRadius:c}=e;let h=s/l;t.beginPath(),t.arc(a,r,l,i-h,o+h),c>s?(h=s/c,t.arc(a,r,c,o+h,i-h,!0)):t.arc(a,r,s,o+n.i,i-n.i),t.closePath(),t.clip()}function ie(t,e,i,o){const s=(a=t.options.borderRadius,Object(n.W)(a,[\"outerStart\",\"outerEnd\",\"innerStart\",\"innerEnd\"]));var a;const r=(i-e)/2,l=Math.min(r,o*e/2),c=t=>{const e=(i-Math.min(r,t))*o/2;return Object(n.Pb)(t,0,Math.min(r,e))};return{outerStart:c(s.outerStart),outerEnd:c(s.outerEnd),innerStart:Object(n.Pb)(s.innerStart,0,l),innerEnd:Object(n.Pb)(s.innerEnd,0,l)}}function ne(t,e,i,n){return{x:i+t*Math.cos(e),y:n+t*Math.sin(e)}}function oe(t,e){const{x:i,y:o,startAngle:s,endAngle:a,pixelMargin:r}=e,l=Math.max(e.outerRadius-r,0),c=e.innerRadius+r,{outerStart:h,outerEnd:d,innerStart:u,innerEnd:g}=ie(e,c,l,a-s),b=l-h,p=l-d,f=s+h/b,m=a-d/p,x=c+u,_=c+g,y=s+u/x,v=a-g/_;if(t.beginPath(),t.arc(i,o,l,f,m),d>0){const e=ne(p,m,i,o);t.arc(e.x,e.y,d,m,a+n.i)}const O=ne(_,a,i,o);if(t.lineTo(O.x,O.y),g>0){const e=ne(_,v,i,o);t.arc(e.x,e.y,g,a+n.i,v+Math.PI)}if(t.arc(i,o,c,a-g/c,s+u/c,!0),u>0){const e=ne(x,y,i,o);t.arc(e.x,e.y,u,y+Math.PI,s-n.i)}const j=ne(b,s,i,o);if(t.lineTo(j.x,j.y),h>0){const e=ne(b,f,i,o);t.arc(e.x,e.y,h,s-n.i,f)}t.closePath()}function se(t,e){const{options:i}=e,o=\"inner\"===i.borderAlign;i.borderWidth&&(o?(t.lineWidth=2*i.borderWidth,t.lineJoin=\"round\"):(t.lineWidth=i.borderWidth,t.lineJoin=\"bevel\"),e.fullCircles&&function(t,e,i){const{x:o,y:s,startAngle:a,endAngle:r,pixelMargin:l}=e,c=Math.max(e.outerRadius-l,0),h=e.innerRadius+l;let d;for(i&&(e.endAngle=e.startAngle+n.u,ee(t,e),e.endAngle=r,e.endAngle===e.startAngle&&(e.endAngle+=n.u,e.fullCircles--)),t.beginPath(),t.arc(o,s,h,a+n.u,a,!0),d=0;d<e.fullCircles;++d)t.stroke();for(t.beginPath(),t.arc(o,s,c,a,a+n.u),d=0;d<e.fullCircles;++d)t.stroke()}(t,e,o),o&&ee(t,e),oe(t,e),t.stroke())}Object.defineProperties(Qt,{defaults:{enumerable:te,value:n.vb},instances:{enumerable:te,value:Gt},overrides:{enumerable:te,value:n.A},registry:{enumerable:te,value:Pt},version:{enumerable:te,value:\"3.1.1\"},getChart:{enumerable:te,value:Jt},register:{enumerable:te,value:(...t)=>{Pt.add(...t),Zt()}},unregister:{enumerable:te,value:(...t)=>{Pt.remove(...t),Zt()}}});class ae extends ft{constructor(t){super(),this.options=void 0,this.circumference=void 0,this.startAngle=void 0,this.endAngle=void 0,this.innerRadius=void 0,this.outerRadius=void 0,this.pixelMargin=0,this.fullCircles=0,t&&Object.assign(this,t)}inRange(t,e,i){const o=this.getProps([\"x\",\"y\"],i),{angle:s,distance:a}=Object(n.V)(o,{x:t,y:e}),{startAngle:r,endAngle:l,innerRadius:c,outerRadius:h,circumference:d}=this.getProps([\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"circumference\"],i);return(d>=n.u||Object(n.Ib)(s,r,l))&&(a>=c&&a<=h)}getCenterPoint(t){const{x:e,y:i,startAngle:n,endAngle:o,innerRadius:s,outerRadius:a}=this.getProps([\"x\",\"y\",\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\"],t),r=(n+o)/2,l=(s+a)/2;return{x:e+Math.cos(r)*l,y:i+Math.sin(r)*l}}tooltipPosition(t){return this.getCenterPoint(t)}draw(t){const e=this,i=e.options,o=i.offset||0;if(e.pixelMargin=\"inner\"===i.borderAlign?.33:0,e.fullCircles=Math.floor(e.circumference/n.u),!(0===e.circumference||e.innerRadius<0||e.outerRadius<0)){if(t.save(),o&&e.circumference<n.u){const i=(e.startAngle+e.endAngle)/2;t.translate(Math.cos(i)*o,Math.sin(i)*o)}t.fillStyle=i.backgroundColor,t.strokeStyle=i.borderColor,function(t,e){if(e.fullCircles){e.endAngle=e.startAngle+n.u,oe(t,e);for(let i=0;i<e.fullCircles;++i)t.fill()}isNaN(e.circumference)||(e.endAngle=e.startAngle+e.circumference%n.u),oe(t,e),t.fill()}(t,e),se(t,e),t.restore()}}}function re(t,e,i=e){t.lineCap=Object(n.Nb)(i.borderCapStyle,e.borderCapStyle),t.setLineDash(Object(n.Nb)(i.borderDash,e.borderDash)),t.lineDashOffset=Object(n.Nb)(i.borderDashOffset,e.borderDashOffset),t.lineJoin=Object(n.Nb)(i.borderJoinStyle,e.borderJoinStyle),t.lineWidth=Object(n.Nb)(i.borderWidth,e.borderWidth),t.strokeStyle=Object(n.Nb)(i.borderColor,e.borderColor)}function le(t,e,i){t.lineTo(i.x,i.y)}function ce(t,e,i={}){const n=t.length,{start:o=0,end:s=n-1}=i,{start:a,end:r}=e,l=Math.max(o,a),c=Math.min(s,r),h=o<a&&s<a||o>r&&s>r;return{count:n,start:l,loop:e.loop,ilen:c<l&&!h?n+c-l:c-l}}function he(t,e,i,o){const{points:s,options:a}=e,{count:r,start:l,loop:c,ilen:h}=ce(s,i,o),d=function(t){return t.stepped?n.db:t.tension?n.eb:le}(a);let u,g,b,{move:p=!0,reverse:f}=o||{};for(u=0;u<=h;++u)g=s[(l+(f?h-u:u))%r],g.skip||(p?(t.moveTo(g.x,g.y),p=!1):d(t,b,g,f,a.stepped),b=g);return c&&(g=s[(l+(f?h:0))%r],d(t,b,g,f,a.stepped)),!!c}function de(t,e,i,n){const o=e.points,{count:s,start:a,ilen:r}=ce(o,i,n),{move:l=!0,reverse:c}=n||{};let h,d,u,g,b,p,f=0,m=0;const x=t=>(a+(c?r-t:t))%s,_=()=>{g!==b&&(t.lineTo(f,b),t.lineTo(f,g),t.lineTo(f,p))};for(l&&(d=o[x(0)],t.moveTo(d.x,d.y)),h=0;h<=r;++h){if(d=o[x(h)],d.skip)continue;const e=d.x,i=d.y,n=0|e;n===u?(i<g?g=i:i>b&&(b=i),f=(m*f+e)/++m):(_(),t.lineTo(e,i),u=n,m=0,g=b=i),p=i}_()}function ue(t){const e=t.options,i=e.borderDash&&e.borderDash.length;return!t._decimated&&!t._loop&&!e.tension&&!e.stepped&&!i?de:he}ae.id=\"arc\",ae.defaults={borderAlign:\"center\",borderColor:\"#fff\",borderRadius:0,borderWidth:2,offset:0,angle:void 0},ae.defaultRoutes={backgroundColor:\"backgroundColor\"};const ge=\"function\"===typeof Path2D;function be(t,e,i,n){ge&&1===e.segments.length?function(t,e,i,n){let o=e._path;o||(o=e._path=new Path2D,e.path(o,i,n)&&o.closePath()),re(t,e.options),t.stroke(o)}(t,e,i,n):function(t,e,i,n){const{segments:o,options:s}=e,a=ue(e);for(const r of o)re(t,s,r.style),t.beginPath(),a(t,e,r,{start:i,end:i+n-1})&&t.closePath(),t.stroke()}(t,e,i,n)}class pe extends ft{constructor(t){super(),this.animated=!0,this.options=void 0,this._loop=void 0,this._fullLoop=void 0,this._path=void 0,this._points=void 0,this._segments=void 0,this._decimated=!1,this._pointsUpdated=!1,t&&Object.assign(this,t)}updateControlPoints(t){const e=this,i=e.options;if(i.tension&&!i.stepped&&!e._pointsUpdated){const o=i.spanGaps?e._loop:e._fullLoop;Object(n.X)(e._points,i,t,o),e._pointsUpdated=!0}}set points(t){const e=this;e._points=t,delete e._segments,delete e._path,e._pointsUpdated=!1}get points(){return this._points}get segments(){return this._segments||(this._segments=Object(n.Y)(this,this.options.segment))}first(){const t=this.segments,e=this.points;return t.length&&e[t[0].start]}last(){const t=this.segments,e=this.points,i=t.length;return i&&e[t[i-1].end]}interpolate(t,e){const i=this,o=i.options,s=t[e],a=i.points,r=Object(n.Z)(i,{property:e,start:s,end:s});if(!r.length)return;const l=[],c=function(t){return t.stepped?n.ab:t.tension?n.bb:n.cb}(o);let h,d;for(h=0,d=r.length;h<d;++h){const{start:i,end:n}=r[h],d=a[i],u=a[n];if(d===u){l.push(d);continue}const g=c(d,u,Math.abs((s-d[e])/(u[e]-d[e])),o.stepped);g[e]=t[e],l.push(g)}return 1===l.length?l[0]:l}pathSegment(t,e,i){return ue(this)(t,this,e,i)}path(t,e,i){const n=this,o=n.segments,s=ue(n);let a=n._loop;e=e||0,i=i||n.points.length-e;for(const r of o)a&=s(t,n,r,{start:e,end:e+i-1});return!!a}draw(t,e,i,n){const o=this,s=o.options||{};(o.points||[]).length&&s.borderWidth&&(t.save(),be(t,o,i,n),t.restore(),o.animated&&(o._pointsUpdated=!1,o._path=void 0))}}function fe(t,e,i,n){const o=t.options,{[i]:s}=t.getProps([i],n);return Math.abs(e-s)<o.radius+o.hitRadius}pe.id=\"line\",pe.defaults={borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0,borderJoinStyle:\"miter\",borderWidth:3,capBezierPoints:!0,cubicInterpolationMode:\"default\",fill:!1,spanGaps:!1,stepped:!1,tension:0},pe.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"},pe.descriptors={_scriptable:!0,_indexable:t=>\"borderDash\"!==t&&\"fill\"!==t};class me extends ft{constructor(t){super(),this.options=void 0,this.parsed=void 0,this.skip=void 0,this.stop=void 0,t&&Object.assign(this,t)}inRange(t,e,i){const n=this.options,{x:o,y:s}=this.getProps([\"x\",\"y\"],i);return Math.pow(t-o,2)+Math.pow(e-s,2)<Math.pow(n.hitRadius+n.radius,2)}inXRange(t,e){return fe(this,t,\"x\",e)}inYRange(t,e){return fe(this,t,\"y\",e)}getCenterPoint(t){const{x:e,y:i}=this.getProps([\"x\",\"y\"],t);return{x:e,y:i}}size(t){let e=(t=t||this.options||{}).radius||0;e=Math.max(e,e&&t.hoverRadius||0);return 2*(e+(e&&t.borderWidth||0))}draw(t){const e=this,i=e.options;e.skip||i.radius<.1||(t.strokeStyle=i.borderColor,t.lineWidth=i.borderWidth,t.fillStyle=i.backgroundColor,Object(n.fb)(t,i,e.x,e.y))}getRange(){const t=this.options||{};return t.radius+t.hitRadius}}function xe(t,e){const{x:i,y:n,base:o,width:s,height:a}=t.getProps([\"x\",\"y\",\"base\",\"width\",\"height\"],e);let r,l,c,h,d;return t.horizontal?(d=a/2,r=Math.min(i,o),l=Math.max(i,o),c=n-d,h=n+d):(d=s/2,r=i-d,l=i+d,c=Math.min(n,o),h=Math.max(n,o)),{left:r,top:c,right:l,bottom:h}}function _e(t){let e=t.options.borderSkipped;const i={};return e?(e=t.horizontal?ye(e,\"left\",\"right\",t.base>t.x):ye(e,\"bottom\",\"top\",t.base<t.y),i[e]=!0,i):i}function ye(t,e,i,n){var o,s,a;return n?(a=i,t=ve(t=(o=t)===(s=e)?a:o===a?s:o,i,e)):t=ve(t,e,i),t}function ve(t,e,i){return\"start\"===t?e:\"end\"===t?i:t}function Oe(t,e,i,n){return t?0:Math.max(Math.min(e,n),i)}function je(t){const e=xe(t),i=e.right-e.left,o=e.bottom-e.top,s=function(t,e,i){const o=t.options.borderWidth,s=_e(t),a=Object(n.hb)(o);return{t:Oe(s.top,a.top,0,i),r:Oe(s.right,a.right,0,e),b:Oe(s.bottom,a.bottom,0,i),l:Oe(s.left,a.left,0,e)}}(t,i/2,o/2),a=function(t,e,i){const o=t.options.borderRadius,s=Object(n.ib)(o),a=Math.min(e,i),r=_e(t);return{topLeft:Oe(r.top||r.left,s.topLeft,0,a),topRight:Oe(r.top||r.right,s.topRight,0,a),bottomLeft:Oe(r.bottom||r.left,s.bottomLeft,0,a),bottomRight:Oe(r.bottom||r.right,s.bottomRight,0,a)}}(t,i/2,o/2);return{outer:{x:e.left,y:e.top,w:i,h:o,radius:a},inner:{x:e.left+s.l,y:e.top+s.t,w:i-s.l-s.r,h:o-s.t-s.b,radius:{topLeft:Math.max(0,a.topLeft-Math.max(s.t,s.l)),topRight:Math.max(0,a.topRight-Math.max(s.t,s.r)),bottomLeft:Math.max(0,a.bottomLeft-Math.max(s.b,s.l)),bottomRight:Math.max(0,a.bottomRight-Math.max(s.b,s.r))}}}}function Me(t,e,i,n){const o=null===e,s=null===i,a=t&&!(o&&s)&&xe(t,n);return a&&(o||e>=a.left&&e<=a.right)&&(s||i>=a.top&&i<=a.bottom)}function we(t,e){t.rect(e.x,e.y,e.w,e.h)}me.id=\"point\",me.defaults={borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:\"circle\",radius:3,rotation:0},me.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"};class ke extends ft{constructor(t){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,t&&Object.assign(this,t)}draw(t){const e=this.options,{inner:i,outer:o}=je(this),s=(a=o.radius).topLeft||a.topRight||a.bottomLeft||a.bottomRight?n.gb:we;var a;t.save(),o.w===i.w&&o.h===i.h||(t.beginPath(),s(t,o),t.clip(),s(t,i),t.fillStyle=e.borderColor,t.fill(\"evenodd\")),t.beginPath(),s(t,i),t.fillStyle=e.backgroundColor,t.fill(),t.restore()}inRange(t,e,i){return Me(this,t,e,i)}inXRange(t,e){return Me(this,t,null,e)}inYRange(t,e){return Me(this,null,t,e)}getCenterPoint(t){const{x:e,y:i,base:n,horizontal:o}=this.getProps([\"x\",\"y\",\"base\",\"horizontal\"],t);return{x:o?(e+n)/2:e,y:o?i:(i+n)/2}}getRange(t){return\"x\"===t?this.width/2:this.height/2}}ke.id=\"bar\",ke.defaults={borderSkipped:\"start\",borderWidth:0,borderRadius:0,pointStyle:void 0},ke.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"};var Se=Object.freeze({__proto__:null,ArcElement:ae,LineElement:pe,PointElement:me,BarElement:ke});function De(t){if(t._decimated){const e=t._data;delete t._decimated,delete t._data,Object.defineProperty(t,\"data\",{value:e})}}function Pe(t){t.data.datasets.forEach((t=>{De(t)}))}var Ce={id:\"decimation\",defaults:{algorithm:\"min-max\",enabled:!1},beforeElementsUpdate:(t,e,i)=>{if(!i.enabled)return void Pe(t);const o=t.width;t.data.datasets.forEach(((e,s)=>{const{_data:a,indexAxis:r}=e,l=t.getDatasetMeta(s),c=a||e.data;if(\"y\"===Object(n.C)([r,t.options.indexAxis]))return;if(\"line\"!==l.type)return;const h=t.scales[l.xAxisID];if(\"linear\"!==h.type&&\"time\"!==h.type)return;if(t.options.parsing)return;let d,{start:u,count:g}=function(t,e){const i=e.length;let o,s=0;const{iScale:a}=t,{min:r,max:l,minDefined:c,maxDefined:h}=a.getUserBounds();return c&&(s=Object(n.Pb)(Object(n.Qb)(e,a.axis,r).lo,0,i-1)),o=h?Object(n.Pb)(Object(n.Qb)(e,a.axis,l).hi+1,s,i)-s:i-s,{start:s,count:o}}(l,c);if(g<=4*o)De(e);else{switch(Object(n.Bb)(a)&&(e._data=c,delete e.data,Object.defineProperty(e,\"data\",{configurable:!0,enumerable:!0,get:function(){return this._decimated},set:function(t){this._data=t}})),i.algorithm){case\"lttb\":d=function(t,e,i,n,o){const s=o.samples||n;if(s>=i)return t.slice(e,e+i);const a=[],r=(i-2)/(s-2);let l=0;const c=e+i-1;let h,d,u,g,b,p=e;for(a[l++]=t[p],h=0;h<s-2;h++){let n,o=0,s=0;const c=Math.floor((h+1)*r)+1+e,f=Math.min(Math.floor((h+2)*r)+1,i)+e,m=f-c;for(n=c;n<f;n++)o+=t[n].x,s+=t[n].y;o/=m,s/=m;const x=Math.floor(h*r)+1+e,_=Math.floor((h+1)*r)+1+e,{x:y,y:v}=t[p];for(u=g=-1,n=x;n<_;n++)g=.5*Math.abs((y-o)*(t[n].y-v)-(y-t[n].x)*(s-v)),g>u&&(u=g,d=t[n],b=n);a[l++]=d,p=b}return a[l++]=t[c],a}(c,u,g,o,i);break;case\"min-max\":d=function(t,e,i,o){let s,a,r,l,c,h,d,u,g,b,p=0,f=0;const m=[],x=e+i-1,_=t[e].x,y=t[x].x-_;for(s=e;s<e+i;++s){a=t[s],r=(a.x-_)/y*o,l=a.y;const e=0|r;if(e===c)l<g?(g=l,h=s):l>b&&(b=l,d=s),p=(f*p+a.x)/++f;else{const i=s-1;if(!Object(n.Bb)(h)&&!Object(n.Bb)(d)){const e=Math.min(h,d),n=Math.max(h,d);e!==u&&e!==i&&m.push({...t[e],x:p}),n!==u&&n!==i&&m.push({...t[n],x:p})}s>0&&i!==u&&m.push(t[i]),m.push(a),c=e,f=0,g=b=l,h=d=u=s}}return m}(c,u,g,o);break;default:throw new Error(`Unsupported decimation algorithm '${i.algorithm}'`)}e._decimated=d}}))},destroy(t){Pe(t)}};function Ae(t,e,i){const o=function(t){const e=t.options,i=e.fill;let o=Object(n.Nb)(i&&i.target,i);return void 0===o&&(o=!!e.backgroundColor),!1!==o&&null!==o&&(!0===o?\"origin\":o)}(t);if(Object(n.Ab)(o))return!isNaN(o.value)&&o;let s=parseFloat(o);return Object(n.yb)(s)&&Math.floor(s)===s?(\"-\"!==o[0]&&\"+\"!==o[0]||(s=e+s),!(s===e||s<0||s>=i)&&s):[\"origin\",\"start\",\"end\",\"stack\"].indexOf(o)>=0&&o}class Le{constructor(t){this.x=t.x,this.y=t.y,this.radius=t.radius}pathSegment(t,e,i){const{x:o,y:s,radius:a}=this;return e=e||{start:0,end:n.u},t.arc(o,s,a,e.end,e.start,!0),!i.bounds}interpolate(t){const{x:e,y:i,radius:n}=this,o=t.angle;return{x:e+Math.cos(o)*n,y:i+Math.sin(o)*n,angle:o}}}function Te(t){return(t.scale||{}).getPointPositionForValue?function(t){const{scale:e,fill:i}=t,o=e.options,s=e.getLabels().length,a=[],r=o.reverse?e.max:e.min,l=o.reverse?e.min:e.max;let c,h,d;if(d=\"start\"===i?r:\"end\"===i?l:Object(n.Ab)(i)?i.value:e.getBaseValue(),o.grid.circular)return h=e.getPointPositionForValue(0,r),new Le({x:h.x,y:h.y,radius:e.getDistanceFromCenterForValue(d)});for(c=0;c<s;++c)a.push(e.getPointPositionForValue(c,d));return a}(t):function(t){const{scale:e={},fill:i}=t;let o,s=null;return\"start\"===i?s=e.bottom:\"end\"===i?s=e.top:Object(n.Ab)(i)?s=e.getPixelForValue(i.value):e.getBasePixel&&(s=e.getBasePixel()),Object(n.yb)(s)?(o=e.isHorizontal(),{x:o?s:null,y:o?null:s}):null}(t)}function Ee(t){const{chart:e,scale:i,index:n,line:o}=t,s=[],a=o.segments,r=o.points,l=function(t,e){const i=[],n=t.getSortedVisibleDatasetMetas();for(let o=0;o<n.length;o++){const t=n[o];if(t.index===e)break;ze(t)&&i.unshift(t.dataset)}return i}(e,n);l.push(Ie({x:null,y:i.bottom},o));for(let c=0;c<a.length;c++){const t=a[c];for(let e=t.start;e<=t.end;e++)Re(s,r[e],l)}return new pe({points:s,options:{}})}const ze=t=>\"line\"===t.type&&!t.hidden;function Re(t,e,i){const n=[];for(let o=0;o<i.length;o++){const s=i[o],{first:a,last:r,point:l}=Fe(s,e,\"x\");if(!(!l||a&&r))if(a)n.unshift(l);else if(t.push(l),!r)break}t.push(...n)}function Fe(t,e,i){const n=t.interpolate(e,i);if(!n)return{};const o=n[i],s=t.segments,a=t.points;let r=!1,l=!1;for(let c=0;c<s.length;c++){const t=s[c],e=a[t.start][i],n=a[t.end][i];if(o>=e&&o<=n){r=o===e,l=o===n;break}}return{first:r,last:l,point:n}}function Ie(t,e){let i=[],o=!1;return Object(n.tb)(t)?(o=!0,i=t):i=function(t,e){const{x:i=null,y:n=null}=t||{},o=e.points,s=[];return e.segments.forEach((t=>{const e=o[t.start],a=o[t.end];null!==n?(s.push({x:e.x,y:n}),s.push({x:a.x,y:n})):null!==i&&(s.push({x:i,y:e.y}),s.push({x:i,y:a.y}))})),s}(t,e),i.length?new pe({points:i,options:{tension:0},_loop:o,_fullLoop:o}):null}function Ve(t,e,i){let o=t[e].fill;const s=[e];let a;if(!i)return o;for(;!1!==o&&-1===s.indexOf(o);){if(!Object(n.yb)(o))return o;if(a=t[o],!a)return!1;if(a.visible)return o;s.push(o),o=a.fill}return!1}function Be(t,e,i){t.beginPath(),e.path(t),t.lineTo(e.last().x,i),t.lineTo(e.first().x,i),t.closePath(),t.clip()}function Ne(t,e,i,o){if(o)return;let s=e[t],a=i[t];return\"angle\"===t&&(s=Object(n.kb)(s),a=Object(n.kb)(a)),{property:t,start:s,end:a}}function We(t,e,i,n){return t&&e?n(t[i],e[i]):t?t[i]:e?e[i]:0}function He(t,e,i){const{top:n,bottom:o}=e.chart.chartArea,{property:s,start:a,end:r}=i||{};\"x\"===s&&(t.beginPath(),t.rect(a,n,r-a,o-n),t.clip())}function $e(t,e,i,n){const o=e.interpolate(i,n);o&&t.lineTo(o.x,o.y)}function Ue(t,e){const{line:i,target:o,property:s,color:a,scale:r}=e,l=function(t,e,i){const o=t.segments,s=t.points,a=e.points,r=[];for(const l of o){const t=Ne(i,s[l.start],s[l.end],l.loop);if(!e.segments){r.push({source:l,target:t,start:s[l.start],end:s[l.end]});continue}const o=Object(n.Z)(e,t);for(const e of o){const o=Ne(i,a[e.start],a[e.end],e.loop),c=Object(n.jb)(l,s,o);for(const n of c)r.push({source:n,target:e,start:{[i]:We(t,o,\"start\",Math.max)},end:{[i]:We(t,o,\"end\",Math.min)}})}}return r}(i,o,s);for(const{source:n,target:c,start:h,end:d}of l){const{style:{backgroundColor:e=a}={}}=n;t.save(),t.fillStyle=e,He(t,r,Ne(s,h,d)),t.beginPath();const l=!!i.pathSegment(t,n);l?t.closePath():$e(t,o,d,s);const u=!!o.pathSegment(t,c,{move:l,reverse:!0}),g=l&&u;g||$e(t,o,h,s),t.closePath(),t.fill(g?\"evenodd\":\"nonzero\"),t.restore()}}function Ye(t,e,i){const o=function(t){const{chart:e,fill:i,line:o}=t;if(Object(n.yb)(i))return function(t,e){const i=t.getDatasetMeta(e);return i&&t.isDatasetVisible(e)?i.dataset:null}(e,i);if(\"stack\"===i)return Ee(t);const s=Te(t);return s instanceof Le?s:Ie(s,o)}(e),{line:s,scale:a,axis:r}=e,l=s.options,c=l.fill,h=l.backgroundColor,{above:d=h,below:u=h}=c||{};o&&s.points.length&&(Object(n.Cb)(t,i),function(t,e){const{line:i,target:n,above:o,below:s,area:a,scale:r}=e,l=i._loop?\"angle\":e.axis;t.save(),\"x\"===l&&s!==o&&(Be(t,n,a.top),Ue(t,{line:i,target:n,color:o,scale:r,property:l}),t.restore(),t.save(),Be(t,n,a.bottom)),Ue(t,{line:i,target:n,color:s,scale:r,property:l}),t.restore()}(t,{line:s,target:o,above:d,below:u,area:i,scale:a,axis:r}),Object(n.Eb)(t))}var Xe={id:\"filler\",afterDatasetsUpdate(t,e,i){const n=(t.data.datasets||[]).length,o=[];let s,a,r,l;for(a=0;a<n;++a)s=t.getDatasetMeta(a),r=s.dataset,l=null,r&&r.options&&r instanceof pe&&(l={visible:t.isDatasetVisible(a),index:a,fill:Ae(r,a,n),chart:t,axis:s.controller.options.indexAxis,scale:s.vScale,line:r}),s.$filler=l,o.push(l);for(a=0;a<n;++a)l=o[a],l&&!1!==l.fill&&(l.fill=Ve(o,a,i.propagate))},beforeDatasetsDraw(t,e,i){const n=t.getSortedVisibleDatasetMetas(),o=t.chartArea;for(let s=n.length-1;s>=0;--s){const e=n[s].$filler;e&&(e.line.updateControlPoints(o),\"beforeDatasetsDraw\"===i.drawTime&&Ye(t.ctx,e,o))}},beforeDatasetDraw(t,e,i){const n=e.meta.$filler;n&&!1!==n.fill&&\"beforeDatasetDraw\"===i.drawTime&&Ye(t.ctx,n,t.chartArea)},defaults:{propagate:!0,drawTime:\"beforeDatasetDraw\"}};const Ke=(t,e)=>{let{boxHeight:i=e,boxWidth:n=e}=t;return t.usePointStyle&&(i=Math.min(i,e),n=Math.min(n,e)),{boxWidth:n,boxHeight:i,itemHeight:Math.max(e,i)}};class qe extends ft{constructor(t){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e,i){const n=this;n.maxWidth=t,n.maxHeight=e,n._margins=i,n.setDimensions(),n.buildLabels(),n.fit()}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height)}buildLabels(){const t=this,e=t.options.labels||{};let i=Object(n.o)(e.generateLabels,[t.chart],t)||[];e.filter&&(i=i.filter((i=>e.filter(i,t.chart.data)))),e.sort&&(i=i.sort(((i,n)=>e.sort(i,n,t.chart.data)))),t.options.reverse&&i.reverse(),t.legendItems=i}fit(){const t=this,{options:e,ctx:i}=t;if(!e.display)return void(t.width=t.height=0);const o=e.labels,s=Object(n.x)(o.font),a=s.size,r=t._computeTitleHeight(),{boxWidth:l,itemHeight:c}=Ke(o,a);let h,d;i.font=s.string,t.isHorizontal()?(h=t.maxWidth,d=t._fitRows(r,a,l,c)+10):(d=t.maxHeight,h=t._fitCols(r,a,l,c)+10),t.width=Math.min(h,e.maxWidth||t.maxWidth),t.height=Math.min(d,e.maxHeight||t.maxHeight)}_fitRows(t,e,i,n){const o=this,{ctx:s,maxWidth:a,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.lineWidths=[0],h=n+r;let d=t;s.textAlign=\"left\",s.textBaseline=\"middle\";let u=-1,g=-h;return o.legendItems.forEach(((t,o)=>{const b=i+e/2+s.measureText(t.text).width;(0===o||c[c.length-1]+b+2*r>a)&&(d+=h,c[c.length-(o>0?0:1)]=0,g+=h,u++),l[o]={left:0,top:g,row:u,width:b,height:n},c[c.length-1]+=b+r})),d}_fitCols(t,e,i,n){const o=this,{ctx:s,maxHeight:a,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.columnSizes=[],h=a-t;let d=r,u=0,g=0,b=0,p=0,f=0;return o.legendItems.forEach(((t,o)=>{const a=i+e/2+s.measureText(t.text).width;o>0&&g+e+2*r>h&&(d+=u+r,c.push({width:u,height:g}),b+=u+r,f++,p=0,u=g=0),u=Math.max(u,a),g+=e+r,l[o]={left:b,top:p,col:f,width:a,height:n},p+=n+r})),d+=u,c.push({width:u,height:g}),d}adjustHitBoxes(){const t=this;if(!t.options.display)return;const e=t._computeTitleHeight(),{legendHitBoxes:i,options:{align:o,labels:{padding:s}}}=t;if(this.isHorizontal()){let a=0,r=Object(n.z)(o,t.left+s,t.right-t.lineWidths[a]);for(const l of i)a!==l.row&&(a=l.row,r=Object(n.z)(o,t.left+s,t.right-t.lineWidths[a])),l.top+=t.top+e+s,l.left=r,r+=l.width+s}else{let a=0,r=Object(n.z)(o,t.top+e+s,t.bottom-t.columnSizes[a].height);for(const l of i)l.col!==a&&(a=l.col,r=Object(n.z)(o,t.top+e+s,t.bottom-t.columnSizes[a].height)),l.top=r,l.left+=t.left+s,r+=l.height+s}}isHorizontal(){return\"top\"===this.options.position||\"bottom\"===this.options.position}draw(){const t=this;if(t.options.display){const e=t.ctx;Object(n.Cb)(e,t),t._draw(),Object(n.Eb)(e)}}_draw(){const t=this,{options:e,columnSizes:i,lineWidths:o,ctx:s}=t,{align:a,labels:r}=e,l=n.vb.color,c=Object(n.lb)(e.rtl,t.left,t.width),h=Object(n.x)(r.font),{color:d,padding:u}=r,g=h.size,b=g/2;let p;t.drawTitle(),s.textAlign=c.textAlign(\"left\"),s.textBaseline=\"middle\",s.lineWidth=.5,s.font=h.string;const{boxWidth:f,boxHeight:m,itemHeight:x}=Ke(r,g),_=t.isHorizontal(),y=this._computeTitleHeight();p=_?{x:Object(n.z)(a,t.left+u,t.right-o[0]),y:t.top+u+y,line:0}:{x:t.left+u,y:Object(n.z)(a,t.top+y+u,t.bottom-i[0].height),line:0},Object(n.mb)(t.ctx,e.textDirection);const v=x+u;t.legendItems.forEach(((e,O)=>{s.strokeStyle=e.fontColor||d,s.fillStyle=e.fontColor||d;const j=s.measureText(e.text).width,M=c.textAlign(e.textAlign||(e.textAlign=r.textAlign)),w=f+g/2+j;let k=p.x,S=p.y;c.setWidth(t.width),_?O>0&&k+w+u>t.right&&(S=p.y+=v,p.line++,k=p.x=Object(n.z)(a,t.left+u,t.right-o[p.line])):O>0&&S+v>t.bottom&&(k=p.x=k+i[p.line].width+u,p.line++,S=p.y=Object(n.z)(a,t.top+y+u,t.bottom-i[p.line].height));!function(t,e,i){if(isNaN(f)||f<=0||isNaN(m)||m<0)return;s.save();const o=Object(n.Nb)(i.lineWidth,1);if(s.fillStyle=Object(n.Nb)(i.fillStyle,l),s.lineCap=Object(n.Nb)(i.lineCap,\"butt\"),s.lineDashOffset=Object(n.Nb)(i.lineDashOffset,0),s.lineJoin=Object(n.Nb)(i.lineJoin,\"miter\"),s.lineWidth=o,s.strokeStyle=Object(n.Nb)(i.strokeStyle,l),s.setLineDash(Object(n.Nb)(i.lineDash,[])),r.usePointStyle){const a={radius:f*Math.SQRT2/2,pointStyle:i.pointStyle,rotation:i.rotation,borderWidth:o},r=c.xPlus(t,f/2),l=e+b;Object(n.fb)(s,a,r,l)}else{const a=e+Math.max((g-m)/2,0),r=c.leftForLtr(t,f),l=Object(n.ib)(i.borderRadius);s.beginPath(),Object.values(l).some((t=>0!==t))?Object(n.gb)(s,{x:r,y:a,w:f,h:m,radius:l}):s.rect(r,a,f,m),s.fill(),0!==o&&s.stroke()}s.restore()}(c.x(k),S,e),k=Object(n.nb)(M,k+f+b,t.right),function(t,e,i){Object(n.w)(s,i.text,t,e+x/2,h,{strikethrough:i.hidden,textAlign:i.textAlign})}(c.x(k),S,e),_?p.x+=w+u:p.y+=v})),Object(n.ob)(t.ctx,e.textDirection)}drawTitle(){const t=this,e=t.options,i=e.title,o=Object(n.x)(i.font),s=Object(n.d)(i.padding);if(!i.display)return;const a=Object(n.lb)(e.rtl,t.left,t.width),r=t.ctx,l=i.position,c=o.size/2,h=s.top+c;let d,u=t.left,g=t.width;if(this.isHorizontal())g=Math.max(...t.lineWidths),d=t.top+h,u=Object(n.z)(e.align,u,t.right-g);else{const i=t.columnSizes.reduce(((t,e)=>Math.max(t,e.height)),0);d=h+Object(n.z)(e.align,t.top,t.bottom-i-e.labels.padding-t._computeTitleHeight())}const b=Object(n.z)(l,u,u+g);r.textAlign=a.textAlign(Object(n.y)(l)),r.textBaseline=\"middle\",r.strokeStyle=i.color,r.fillStyle=i.color,r.font=o.string,Object(n.w)(r,i.text,b,d,o)}_computeTitleHeight(){const t=this.options.title,e=Object(n.x)(t.font),i=Object(n.d)(t.padding);return t.display?e.lineHeight+i.height:0}_getLegendItemAt(t,e){const i=this;let n,o,s;if(t>=i.left&&t<=i.right&&e>=i.top&&e<=i.bottom)for(s=i.legendHitBoxes,n=0;n<s.length;++n)if(o=s[n],t>=o.left&&t<=o.left+o.width&&e>=o.top&&e<=o.top+o.height)return i.legendItems[n];return null}handleEvent(t){const e=this,i=e.options;if(!function(t,e){if(\"mousemove\"===t&&(e.onHover||e.onLeave))return!0;if(e.onClick&&(\"click\"===t||\"mouseup\"===t))return!0;return!1}(t.type,i))return;const o=e._getLegendItemAt(t.x,t.y);if(\"mousemove\"===t.type){const r=e._hoveredItem,l=(a=o,null!==(s=r)&&null!==a&&s.datasetIndex===a.datasetIndex&&s.index===a.index);r&&!l&&Object(n.o)(i.onLeave,[t,r,e],e),e._hoveredItem=o,o&&!l&&Object(n.o)(i.onHover,[t,o,e],e)}else o&&Object(n.o)(i.onClick,[t,o,e],e);var s,a}}var Ge={id:\"legend\",_element:qe,start(t,e,i){const n=t.legend=new qe({ctx:t.ctx,options:i,chart:t});tt.configure(t,n,i),tt.addBox(t,n)},stop(t){tt.removeBox(t,t.legend),delete t.legend},beforeUpdate(t,e,i){const n=t.legend;tt.configure(t,n,i),n.options=i},afterUpdate(t){const e=t.legend;e.buildLabels(),e.adjustHitBoxes()},afterEvent(t,e){e.replay||t.legend.handleEvent(e.event)},defaults:{display:!0,position:\"top\",align:\"center\",fullSize:!0,reverse:!1,weight:1e3,onClick(t,e,i){const n=e.datasetIndex,o=i.chart;o.isDatasetVisible(n)?(o.hide(n),e.hidden=!0):(o.show(n),e.hidden=!1)},onHover:null,onLeave:null,labels:{color:t=>t.chart.options.color,boxWidth:40,padding:10,generateLabels(t){const e=t.data.datasets,{labels:{usePointStyle:i,pointStyle:o,textAlign:s,color:a}}=t.legend.options;return t._getSortedDatasetMetas().map((t=>{const r=t.controller.getStyle(i?0:void 0),l=Object(n.d)(r.borderWidth);return{text:e[t.index].label,fillStyle:r.backgroundColor,fontColor:a,hidden:!t.visible,lineCap:r.borderCapStyle,lineDash:r.borderDash,lineDashOffset:r.borderDashOffset,lineJoin:r.borderJoinStyle,lineWidth:(l.width+l.height)/4,strokeStyle:r.borderColor,pointStyle:o||r.pointStyle,rotation:r.rotation,textAlign:s||r.textAlign,borderRadius:0,datasetIndex:t.index}}),this)}},title:{color:t=>t.chart.options.color,display:!1,position:\"center\",text:\"\"}},descriptors:{_scriptable:t=>!t.startsWith(\"on\"),labels:{_scriptable:t=>![\"generateLabels\",\"filter\",\"sort\"].includes(t)}}};class Je extends ft{constructor(t){super(),this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e){const i=this,o=i.options;if(i.left=0,i.top=0,!o.display)return void(i.width=i.height=i.right=i.bottom=0);i.width=i.right=t,i.height=i.bottom=e;const s=Object(n.tb)(o.text)?o.text.length:1;i._padding=Object(n.d)(o.padding);const a=s*Object(n.x)(o.font).lineHeight+i._padding.height;i.isHorizontal()?i.height=a:i.width=a}isHorizontal(){const t=this.options.position;return\"top\"===t||\"bottom\"===t}_drawArgs(t){const{top:e,left:i,bottom:o,right:s,options:a}=this,r=a.align;let l,c,h,d=0;return this.isHorizontal()?(c=Object(n.z)(r,i,s),h=e+t,l=s-i):(\"left\"===a.position?(c=i+t,h=Object(n.z)(r,o,e),d=-.5*n.q):(c=s-t,h=Object(n.z)(r,e,o),d=.5*n.q),l=o-e),{titleX:c,titleY:h,maxWidth:l,rotation:d}}draw(){const t=this,e=t.ctx,i=t.options;if(!i.display)return;const o=Object(n.x)(i.font),s=o.lineHeight/2+t._padding.top,{titleX:a,titleY:r,maxWidth:l,rotation:c}=t._drawArgs(s);Object(n.w)(e,i.text,0,0,o,{color:i.color,maxWidth:l,rotation:c,textAlign:Object(n.y)(i.align),textBaseline:\"middle\",translation:[a,r]})}}var Qe={id:\"title\",_element:Je,start(t,e,i){!function(t,e){const i=new Je({ctx:t.ctx,options:e,chart:t});tt.configure(t,i,e),tt.addBox(t,i),t.titleBlock=i}(t,i)},stop(t){const e=t.titleBlock;tt.removeBox(t,e),delete t.titleBlock},beforeUpdate(t,e,i){const n=t.titleBlock;tt.configure(t,n,i),n.options=i},defaults:{align:\"center\",display:!1,font:{weight:\"bold\"},fullSize:!0,padding:10,position:\"top\",text:\"\",weight:2e3},defaultRoutes:{color:\"color\"},descriptors:{_scriptable:!0,_indexable:!1}};const Ze={average(t){if(!t.length)return!1;let e,i,n=0,o=0,s=0;for(e=0,i=t.length;e<i;++e){const i=t[e].element;if(i&&i.hasValue()){const t=i.tooltipPosition();n+=t.x,o+=t.y,++s}}return{x:n/s,y:o/s}},nearest(t,e){if(!t.length)return!1;let i,o,s,a=e.x,r=e.y,l=Number.POSITIVE_INFINITY;for(i=0,o=t.length;i<o;++i){const o=t[i].element;if(o&&o.hasValue()){const t=o.getCenterPoint(),i=Object(n.qb)(e,t);i<l&&(l=i,s=o)}}if(s){const t=s.tooltipPosition();a=t.x,r=t.y}return{x:a,y:r}}};function ti(t,e){return e&&(Object(n.tb)(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function ei(t){return(\"string\"===typeof t||t instanceof String)&&t.indexOf(\"\\n\")>-1?t.split(\"\\n\"):t}function ii(t,e){const{element:i,datasetIndex:n,index:o}=e,s=t.getDatasetMeta(n).controller,{label:a,value:r}=s.getLabelAndValue(o);return{chart:t,label:a,parsed:s.getParsed(o),raw:t.data.datasets[n].data[o],formattedValue:r,dataset:s.getDataset(),dataIndex:o,datasetIndex:n,element:i}}function ni(t,e){const i=t._chart.ctx,{body:o,footer:s,title:a}=t,{boxWidth:r,boxHeight:l}=e,c=Object(n.x)(e.bodyFont),h=Object(n.x)(e.titleFont),d=Object(n.x)(e.footerFont),u=a.length,g=s.length,b=o.length,p=Object(n.d)(e.padding);let f=p.height,m=0,x=o.reduce(((t,e)=>t+e.before.length+e.lines.length+e.after.length),0);if(x+=t.beforeBody.length+t.afterBody.length,u&&(f+=u*h.lineHeight+(u-1)*e.titleSpacing+e.titleMarginBottom),x){f+=b*(e.displayColors?Math.max(l,c.lineHeight):c.lineHeight)+(x-b)*c.lineHeight+(x-1)*e.bodySpacing}g&&(f+=e.footerMarginTop+g*d.lineHeight+(g-1)*e.footerSpacing);let _=0;const y=function(t){m=Math.max(m,i.measureText(t).width+_)};return i.save(),i.font=h.string,Object(n.e)(t.title,y),i.font=c.string,Object(n.e)(t.beforeBody.concat(t.afterBody),y),_=e.displayColors?r+2:0,Object(n.e)(o,(t=>{Object(n.e)(t.before,y),Object(n.e)(t.lines,y),Object(n.e)(t.after,y)})),_=0,i.font=d.string,Object(n.e)(t.footer,y),i.restore(),m+=p.width,{width:m,height:f}}function oi(t,e,i,n){const{x:o,width:s}=i,{width:a,chartArea:{left:r,right:l}}=t;let c=\"center\";return\"center\"===n?c=o<=(r+l)/2?\"left\":\"right\":o<=s/2?c=\"left\":o>=a-s/2&&(c=\"right\"),function(t,e,i,n){const{x:o,width:s}=n,a=i.caretSize+i.caretPadding;return\"left\"===t&&o+s+a>e.width||\"right\"===t&&o-s-a<0||void 0}(c,t,e,i)&&(c=\"center\"),c}function si(t,e,i){const n=e.yAlign||function(t,e){const{y:i,height:n}=e;return i<n/2?\"top\":i>t.height-n/2?\"bottom\":\"center\"}(t,i);return{xAlign:e.xAlign||oi(t,e,i,n),yAlign:n}}function ai(t,e,i,o){const{caretSize:s,caretPadding:a,cornerRadius:r}=t,{xAlign:l,yAlign:c}=i,h=s+a,d=r+a;let u=function(t,e){let{x:i,width:n}=t;return\"right\"===e?i-=n:\"center\"===e&&(i-=n/2),i}(e,l);const g=function(t,e,i){let{y:n,height:o}=t;return\"top\"===e?n+=i:n-=\"bottom\"===e?o+i:o/2,n}(e,c,h);return\"center\"===c?\"left\"===l?u+=h:\"right\"===l&&(u-=h):\"left\"===l?u-=d:\"right\"===l&&(u+=d),{x:Object(n.Pb)(u,0,o.width-e.width),y:Object(n.Pb)(g,0,o.height-e.height)}}function ri(t,e,i){const o=Object(n.d)(i.padding);return\"center\"===e?t.x+t.width/2:\"right\"===e?t.x+t.width-o.right:t.x+o.left}function li(t){return ti([],ei(t))}function ci(t,e){const i=e&&e.dataset&&e.dataset.tooltip&&e.dataset.tooltip.callbacks;return i?t.override(i):t}class hi extends ft{constructor(t){super(),this.opacity=0,this._active=[],this._chart=t._chart,this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.options=t.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(t){this.options=t,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const t=this,e=t._cachedAnimations;if(e)return e;const i=t._chart,n=t.options.setContext(t.getContext()),o=n.enabled&&i.options.animation&&n.animations,s=new c(t._chart,o);return o._cacheable&&(t._cachedAnimations=Object.freeze(s)),s}getContext(){const t=this;return t.$context||(t.$context=(e=t._chart.getContext(),i=t,n=t._tooltipItems,Object.assign(Object.create(e),{tooltip:i,tooltipItems:n,type:\"tooltip\"})));var e,i,n}getTitle(t,e){const i=this,{callbacks:n}=e,o=n.beforeTitle.apply(i,[t]),s=n.title.apply(i,[t]),a=n.afterTitle.apply(i,[t]);let r=[];return r=ti(r,ei(o)),r=ti(r,ei(s)),r=ti(r,ei(a)),r}getBeforeBody(t,e){return li(e.callbacks.beforeBody.apply(this,[t]))}getBody(t,e){const i=this,{callbacks:o}=e,s=[];return Object(n.e)(t,(t=>{const e={before:[],lines:[],after:[]},n=ci(o,t);ti(e.before,ei(n.beforeLabel.call(i,t))),ti(e.lines,n.label.call(i,t)),ti(e.after,ei(n.afterLabel.call(i,t))),s.push(e)})),s}getAfterBody(t,e){return li(e.callbacks.afterBody.apply(this,[t]))}getFooter(t,e){const i=this,{callbacks:n}=e,o=n.beforeFooter.apply(i,[t]),s=n.footer.apply(i,[t]),a=n.afterFooter.apply(i,[t]);let r=[];return r=ti(r,ei(o)),r=ti(r,ei(s)),r=ti(r,ei(a)),r}_createItems(t){const e=this,i=e._active,o=e._chart.data,s=[],a=[],r=[];let l,c,h=[];for(l=0,c=i.length;l<c;++l)h.push(ii(e._chart,i[l]));return t.filter&&(h=h.filter(((e,i,n)=>t.filter(e,i,n,o)))),t.itemSort&&(h=h.sort(((e,i)=>t.itemSort(e,i,o)))),Object(n.e)(h,(i=>{const n=ci(t.callbacks,i);s.push(n.labelColor.call(e,i)),a.push(n.labelPointStyle.call(e,i)),r.push(n.labelTextColor.call(e,i))})),e.labelColors=s,e.labelPointStyles=a,e.labelTextColors=r,e.dataPoints=h,h}update(t,e){const i=this,n=i.options.setContext(i.getContext()),o=i._active;let s,a=[];if(o.length){const t=Ze[n.position].call(i,o,i._eventPosition);a=i._createItems(n),i.title=i.getTitle(a,n),i.beforeBody=i.getBeforeBody(a,n),i.body=i.getBody(a,n),i.afterBody=i.getAfterBody(a,n),i.footer=i.getFooter(a,n);const e=i._size=ni(i,n),r=Object.assign({},t,e),l=si(i._chart,n,r),c=ai(n,r,l,i._chart);i.xAlign=l.xAlign,i.yAlign=l.yAlign,s={opacity:1,x:c.x,y:c.y,width:e.width,height:e.height,caretX:t.x,caretY:t.y}}else 0!==i.opacity&&(s={opacity:0});i._tooltipItems=a,i.$context=void 0,s&&i._resolveAnimations().update(i,s),t&&n.external&&n.external.call(i,{chart:i._chart,tooltip:i,replay:e})}drawCaret(t,e,i,n){const o=this.getCaretPosition(t,i,n);e.lineTo(o.x1,o.y1),e.lineTo(o.x2,o.y2),e.lineTo(o.x3,o.y3)}getCaretPosition(t,e,i){const{xAlign:n,yAlign:o}=this,{cornerRadius:s,caretSize:a}=i,{x:r,y:l}=t,{width:c,height:h}=e;let d,u,g,b,p,f;return\"center\"===o?(p=l+h/2,\"left\"===n?(d=r,u=d-a,b=p+a,f=p-a):(d=r+c,u=d+a,b=p-a,f=p+a),g=d):(u=\"left\"===n?r+s+a:\"right\"===n?r+c-s-a:this.caretX,\"top\"===o?(b=l,p=b-a,d=u-a,g=u+a):(b=l+h,p=b+a,d=u+a,g=u-a),f=b),{x1:d,x2:u,x3:g,y1:b,y2:p,y3:f}}drawTitle(t,e,i){const o=this,s=o.title,a=s.length;let r,l,c;if(a){const h=Object(n.lb)(i.rtl,o.x,o.width);for(t.x=ri(o,i.titleAlign,i),e.textAlign=h.textAlign(i.titleAlign),e.textBaseline=\"middle\",r=Object(n.x)(i.titleFont),l=i.titleSpacing,e.fillStyle=i.titleColor,e.font=r.string,c=0;c<a;++c)e.fillText(s[c],h.x(t.x),t.y+r.lineHeight/2),t.y+=r.lineHeight+l,c+1===a&&(t.y+=i.titleMarginBottom-l)}}_drawColorBox(t,e,i,o,s){const a=this,r=a.labelColors[i],l=a.labelPointStyles[i],{boxHeight:c,boxWidth:h}=s,d=Object(n.x)(s.bodyFont),u=ri(a,\"left\",s),g=o.x(u),b=c<d.lineHeight?(d.lineHeight-c)/2:0,p=e.y+b;if(s.usePointStyle){const e={radius:Math.min(h,c)/2,pointStyle:l.pointStyle,rotation:l.rotation,borderWidth:1},i=o.leftForLtr(g,h)+h/2,a=p+c/2;t.strokeStyle=s.multiKeyBackground,t.fillStyle=s.multiKeyBackground,Object(n.fb)(t,e,i,a),t.strokeStyle=r.borderColor,t.fillStyle=r.backgroundColor,Object(n.fb)(t,e,i,a)}else{t.lineWidth=r.borderWidth||1,t.strokeStyle=r.borderColor,t.setLineDash(r.borderDash||[]),t.lineDashOffset=r.borderDashOffset||0;const e=o.leftForLtr(g,h),i=o.leftForLtr(o.xPlus(g,1),h-2),a=Object(n.ib)(r.borderRadius);Object.values(a).some((t=>0!==t))?(t.beginPath(),t.fillStyle=s.multiKeyBackground,Object(n.gb)(t,{x:e,y:p,w:h,h:c,radius:a}),t.fill(),t.stroke(),t.fillStyle=r.backgroundColor,t.beginPath(),Object(n.gb)(t,{x:i,y:p+1,w:h-2,h:c-2,radius:a}),t.fill()):(t.fillStyle=s.multiKeyBackground,t.fillRect(e,p,h,c),t.strokeRect(e,p,h,c),t.fillStyle=r.backgroundColor,t.fillRect(i,p+1,h-2,c-2))}t.fillStyle=a.labelTextColors[i]}drawBody(t,e,i){const o=this,{body:s}=o,{bodySpacing:a,bodyAlign:r,displayColors:l,boxHeight:c,boxWidth:h}=i,d=Object(n.x)(i.bodyFont);let u=d.lineHeight,g=0;const b=Object(n.lb)(i.rtl,o.x,o.width),p=function(i){e.fillText(i,b.x(t.x+g),t.y+u/2),t.y+=u+a},f=b.textAlign(r);let m,x,_,y,v,O,j;for(e.textAlign=r,e.textBaseline=\"middle\",e.font=d.string,t.x=ri(o,f,i),e.fillStyle=i.bodyColor,Object(n.e)(o.beforeBody,p),g=l&&\"right\"!==f?\"center\"===r?h/2+1:h+2:0,y=0,O=s.length;y<O;++y){for(m=s[y],x=o.labelTextColors[y],e.fillStyle=x,Object(n.e)(m.before,p),_=m.lines,l&&_.length&&(o._drawColorBox(e,t,y,b,i),u=Math.max(d.lineHeight,c)),v=0,j=_.length;v<j;++v)p(_[v]),u=d.lineHeight;Object(n.e)(m.after,p)}g=0,u=d.lineHeight,Object(n.e)(o.afterBody,p),t.y-=a}drawFooter(t,e,i){const o=this,s=o.footer,a=s.length;let r,l;if(a){const c=Object(n.lb)(i.rtl,o.x,o.width);for(t.x=ri(o,i.footerAlign,i),t.y+=i.footerMarginTop,e.textAlign=c.textAlign(i.footerAlign),e.textBaseline=\"middle\",r=Object(n.x)(i.footerFont),e.fillStyle=i.footerColor,e.font=r.string,l=0;l<a;++l)e.fillText(s[l],c.x(t.x),t.y+r.lineHeight/2),t.y+=r.lineHeight+i.footerSpacing}}drawBackground(t,e,i,n){const{xAlign:o,yAlign:s}=this,{x:a,y:r}=t,{width:l,height:c}=i,h=n.cornerRadius;e.fillStyle=n.backgroundColor,e.strokeStyle=n.borderColor,e.lineWidth=n.borderWidth,e.beginPath(),e.moveTo(a+h,r),\"top\"===s&&this.drawCaret(t,e,i,n),e.lineTo(a+l-h,r),e.quadraticCurveTo(a+l,r,a+l,r+h),\"center\"===s&&\"right\"===o&&this.drawCaret(t,e,i,n),e.lineTo(a+l,r+c-h),e.quadraticCurveTo(a+l,r+c,a+l-h,r+c),\"bottom\"===s&&this.drawCaret(t,e,i,n),e.lineTo(a+h,r+c),e.quadraticCurveTo(a,r+c,a,r+c-h),\"center\"===s&&\"left\"===o&&this.drawCaret(t,e,i,n),e.lineTo(a,r+h),e.quadraticCurveTo(a,r,a+h,r),e.closePath(),e.fill(),n.borderWidth>0&&e.stroke()}_updateAnimationTarget(t){const e=this,i=e._chart,n=e.$animations,o=n&&n.x,s=n&&n.y;if(o||s){const n=Ze[t.position].call(e,e._active,e._eventPosition);if(!n)return;const a=e._size=ni(e,t),r=Object.assign({},n,e._size),l=si(i,t,r),c=ai(t,r,l,i);o._to===c.x&&s._to===c.y||(e.xAlign=l.xAlign,e.yAlign=l.yAlign,e.width=a.width,e.height=a.height,e.caretX=n.x,e.caretY=n.y,e._resolveAnimations().update(e,c))}}draw(t){const e=this,i=e.options.setContext(e.getContext());let o=e.opacity;if(!o)return;e._updateAnimationTarget(i);const s={width:e.width,height:e.height},a={x:e.x,y:e.y};o=Math.abs(o)<.001?0:o;const r=Object(n.d)(i.padding),l=e.title.length||e.beforeBody.length||e.body.length||e.afterBody.length||e.footer.length;i.enabled&&l&&(t.save(),t.globalAlpha=o,e.drawBackground(a,t,s,i),Object(n.mb)(t,i.textDirection),a.y+=r.top,e.drawTitle(a,t,i),e.drawBody(a,t,i),e.drawFooter(a,t,i),Object(n.ob)(t,i.textDirection),t.restore())}getActiveElements(){return this._active||[]}setActiveElements(t,e){const i=this,o=i._active,s=t.map((({datasetIndex:t,index:e})=>{const n=i._chart.getDatasetMeta(t);if(!n)throw new Error(\"Cannot find a dataset at index \"+t);return{datasetIndex:t,element:n.data[e],index:e}})),a=!Object(n.U)(o,s),r=i._positionChanged(s,e);(a||r)&&(i._active=s,i._eventPosition=e,i.update(!0))}handleEvent(t,e){const i=this,o=i.options,s=i._active||[];let a=!1,r=[];\"mouseout\"!==t.type&&(r=i._chart.getElementsAtEventForMode(t,o.mode,o,e),o.reverse&&r.reverse());const l=i._positionChanged(r,t);return a=e||!Object(n.U)(r,s)||l,a&&(i._active=r,(o.enabled||o.external)&&(i._eventPosition={x:t.x,y:t.y},i.update(!0,e))),a}_positionChanged(t,e){const{caretX:i,caretY:n,options:o}=this,s=Ze[o.position].call(this,t,e);return!1!==s&&(i!==s.x||n!==s.y)}}hi.positioners=Ze;var di={id:\"tooltip\",_element:hi,positioners:Ze,afterInit(t,e,i){i&&(t.tooltip=new hi({_chart:t,options:i}))},beforeUpdate(t,e,i){t.tooltip&&t.tooltip.initialize(i)},reset(t,e,i){t.tooltip&&t.tooltip.initialize(i)},afterDraw(t){const e=t.tooltip,i={tooltip:e};!1!==t.notifyPlugins(\"beforeTooltipDraw\",i)&&(e&&e.draw(t.ctx),t.notifyPlugins(\"afterTooltipDraw\",i))},afterEvent(t,e){if(t.tooltip){const i=e.replay;t.tooltip.handleEvent(e.event,i)&&(e.changed=!0)}},defaults:{enabled:!0,external:null,position:\"average\",backgroundColor:\"rgba(0,0,0,0.8)\",titleColor:\"#fff\",titleFont:{weight:\"bold\"},titleSpacing:2,titleMarginBottom:6,titleAlign:\"left\",bodyColor:\"#fff\",bodySpacing:2,bodyFont:{},bodyAlign:\"left\",footerColor:\"#fff\",footerSpacing:2,footerMarginTop:6,footerFont:{weight:\"bold\"},footerAlign:\"left\",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(t,e)=>e.bodyFont.size,boxWidth:(t,e)=>e.bodyFont.size,multiKeyBackground:\"#fff\",displayColors:!0,borderColor:\"rgba(0,0,0,0)\",borderWidth:0,animation:{duration:400,easing:\"easeOutQuart\"},animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"width\",\"height\",\"caretX\",\"caretY\"]},opacity:{easing:\"linear\",duration:200}},callbacks:{beforeTitle:n.pb,title(t){if(t.length>0){const e=t[0],i=e.chart.data.labels,n=i?i.length:0;if(this&&this.options&&\"dataset\"===this.options.mode)return e.dataset.label||\"\";if(e.label)return e.label;if(n>0&&e.dataIndex<n)return i[e.dataIndex]}return\"\"},afterTitle:n.pb,beforeBody:n.pb,beforeLabel:n.pb,label(t){if(this&&this.options&&\"dataset\"===this.options.mode)return t.label+\": \"+t.formattedValue||t.formattedValue;let e=t.dataset.label||\"\";e&&(e+=\": \");const i=t.formattedValue;return Object(n.Bb)(i)||(e+=i),e},labelColor(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{borderColor:e.borderColor,backgroundColor:e.backgroundColor,borderWidth:e.borderWidth,borderDash:e.borderDash,borderDashOffset:e.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{pointStyle:e.pointStyle,rotation:e.rotation}},afterLabel:n.pb,afterBody:n.pb,beforeFooter:n.pb,footer:n.pb,afterFooter:n.pb}},defaultRoutes:{bodyFont:\"font\",footerFont:\"font\",titleFont:\"font\"},descriptors:{_scriptable:t=>\"filter\"!==t&&\"itemSort\"!==t&&\"external\"!==t,_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:\"animation\"}},additionalOptionScopes:[\"interaction\"]},ui=Object.freeze({__proto__:null,Decimation:Ce,Filler:Xe,Legend:Ge,Title:Qe,Tooltip:di});function gi(t,e,i){const n=t.indexOf(e);if(-1===n)return((t,e,i)=>\"string\"===typeof e?t.push(e)-1:isNaN(e)?null:i)(t,e,i);return n!==t.lastIndexOf(e)?i:n}class bi extends St{constructor(t){super(t),this._startValue=void 0,this._valueRange=0}parse(t,e){if(Object(n.Bb)(t))return null;const i=this.getLabels();return((t,e)=>null===t?null:Object(n.Pb)(Math.round(t),0,e))(e=isFinite(e)&&i[e]===t?e:gi(i,t,Object(n.Nb)(e,t)),i.length-1)}determineDataLimits(){const t=this,{minDefined:e,maxDefined:i}=t.getUserBounds();let{min:n,max:o}=t.getMinMax(!0);\"ticks\"===t.options.bounds&&(e||(n=0),i||(o=t.getLabels().length-1)),t.min=n,t.max=o}buildTicks(){const t=this,e=t.min,i=t.max,n=t.options.offset,o=[];let s=t.getLabels();s=0===e&&i===s.length-1?s:s.slice(e,i+1),t._valueRange=Math.max(s.length-(n?0:1),1),t._startValue=t.min-(n?.5:0);for(let a=e;a<=i;a++)o.push({value:a});return o}getLabelForValue(t){const e=this.getLabels();return t>=0&&t<e.length?e[t]:t}configure(){const t=this;super.configure(),t.isHorizontal()||(t._reversePixels=!t._reversePixels)}getPixelForValue(t){const e=this;return\"number\"!==typeof t&&(t=e.parse(t)),null===t?NaN:e.getPixelForDecimal((t-e._startValue)/e._valueRange)}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getValueForPixel(t){const e=this;return Math.round(e._startValue+e.getDecimalForPixel(t)*e._valueRange)}getBasePixel(){return this.bottom}}bi.id=\"category\",bi.defaults={ticks:{callback:bi.prototype.getLabelForValue}};class pi extends St{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(t,e){return Object(n.Bb)(t)||(\"number\"===typeof t||t instanceof Number)&&!isFinite(+t)?null:+t}handleTickRangeOptions(){const t=this,{beginAtZero:e,stacked:i}=t.options,{minDefined:o,maxDefined:s}=t.getUserBounds();let{min:a,max:r}=t;const l=t=>a=o?a:t,c=t=>r=s?r:t;if(e||i){const t=Object(n.Kb)(a),e=Object(n.Kb)(r);t<0&&e<0?c(0):t>0&&e>0&&l(0)}a===r&&(c(r+1),e||l(a-1)),t.min=a,t.max=r}getTickLimit(){const t=this,e=t.options.ticks;let i,{maxTicksLimit:n,stepSize:o}=e;return o?i=Math.ceil(t.max/o)-Math.floor(t.min/o)+1:(i=t.computeTickLimit(),n=n||11),n&&(i=Math.min(n,i)),i}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const t=this,e=t.options,i=e.ticks;let o=t.getTickLimit();o=Math.max(2,o);const s=function(t,e){const i=[],{step:o,min:s,max:a,precision:r,count:l,maxTicks:c}=t,h=o||1,d=c-1,{min:u,max:g}=e,b=!Object(n.Bb)(s),p=!Object(n.Bb)(a),f=!Object(n.Bb)(l);let m,x,_,y,v=Object(n.sb)((g-u)/d/h)*h;if(v<1e-14&&!b&&!p)return[{value:u},{value:g}];y=Math.ceil(g/v)-Math.floor(u/v),y>d&&(v=Object(n.sb)(y*v/d/h)*h),Object(n.Bb)(r)||(m=Math.pow(10,r),v=Math.ceil(v*m)/m),x=Math.floor(u/v)*v,_=Math.ceil(g/v)*v,b&&p&&o&&Object(n.N)((a-s)/o,v/1e3)?(y=Math.min((a-s)/v,c),v=(a-s)/y,x=s,_=a):f?(x=b?s:x,_=p?a:_,y=l-1,v=(_-x)/y):(y=(_-x)/v,y=Object(n.O)(y,Math.round(y),v/1e3)?Math.round(y):Math.ceil(y)),m=Math.pow(10,Object(n.Bb)(r)?Object(n.P)(v):r),x=Math.round(x*m)/m,_=Math.round(_*m)/m;let O=0;for(b&&(i.push({value:s}),x<=s&&O++,Object(n.O)(Math.round((x+O*v)*m)/m,s,v/10)&&O++);O<y;++O)i.push({value:Math.round((x+O*v)*m)/m});return p?Object(n.O)(i[i.length-1].value,a,v/10)?i[i.length-1].value=a:i.push({value:a}):i.push({value:_}),i}({maxTicks:o,min:e.min,max:e.max,precision:i.precision,step:i.stepSize,count:i.count},t._range||t);return\"ticks\"===e.bounds&&Object(n.rb)(s,t,\"value\"),e.reverse?(s.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),s}configure(){const t=this,e=t.ticks;let i=t.min,n=t.max;if(super.configure(),t.options.offset&&e.length){const t=(n-i)/Math.max(e.length-1,1)/2;i-=t,n+=t}t._startValue=i,t._endValue=n,t._valueRange=n-i}getLabelForValue(t){return Object(n.Hb)(t,this.chart.options.locale)}}class fi extends pi{determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!0);t.min=Object(n.yb)(e)?e:0,t.max=Object(n.yb)(i)?i:1,t.handleTickRangeOptions()}computeTickLimit(){const t=this;if(t.isHorizontal())return Math.ceil(t.width/40);const e=t._resolveTickFontOptions(0);return Math.ceil(t.height/e.lineHeight)}getPixelForValue(t){return null===t?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getValueForPixel(t){return this._startValue+this.getDecimalForPixel(t)*this._valueRange}}function mi(t){return 1===t/Math.pow(10,Math.floor(Object(n.l)(t)))}fi.id=\"linear\",fi.defaults={ticks:{callback:xt.formatters.numeric}};class xi extends St{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._valueRange=0}parse(t,e){const i=pi.prototype.parse.apply(this,[t,e]);if(0!==i)return Object(n.yb)(i)&&i>0?i:null;this._zero=!0}determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!0);t.min=Object(n.yb)(e)?Math.max(0,e):null,t.max=Object(n.yb)(i)?Math.max(0,i):null,t.options.beginAtZero&&(t._zero=!0),t.handleTickRangeOptions()}handleTickRangeOptions(){const t=this,{minDefined:e,maxDefined:i}=t.getUserBounds();let o=t.min,s=t.max;const a=t=>o=e?o:t,r=t=>s=i?s:t,l=(t,e)=>Math.pow(10,Math.floor(Object(n.l)(t))+e);o===s&&(o<=0?(a(1),r(10)):(a(l(o,-1)),r(l(s,1)))),o<=0&&a(l(s,-1)),s<=0&&r(l(o,1)),t._zero&&t.min!==t._suggestedMin&&o===l(t.min,0)&&a(l(o,-1)),t.min=o,t.max=s}buildTicks(){const t=this,e=t.options,i=function(t,e){const i=Math.floor(Object(n.l)(e.max)),o=Math.ceil(e.max/Math.pow(10,i)),s=[];let a=Object(n.n)(t.min,Math.pow(10,Math.floor(Object(n.l)(e.min)))),r=Math.floor(Object(n.l)(a)),l=Math.floor(a/Math.pow(10,r)),c=r<0?Math.pow(10,Math.abs(r)):1;do{s.push({value:a,major:mi(a)}),++l,10===l&&(l=1,++r,c=r>=0?1:c),a=Math.round(l*Math.pow(10,r)*c)/c}while(r<i||r===i&&l<o);const h=Object(n.n)(t.max,a);return s.push({value:h,major:mi(a)}),s}({min:t._userMin,max:t._userMax},t);return\"ticks\"===e.bounds&&Object(n.rb)(i,t,\"value\"),e.reverse?(i.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),i}getLabelForValue(t){return void 0===t?\"0\":Object(n.Hb)(t,this.chart.options.locale)}configure(){const t=this,e=t.min;super.configure(),t._startValue=Object(n.l)(e),t._valueRange=Object(n.l)(t.max)-Object(n.l)(e)}getPixelForValue(t){const e=this;return void 0!==t&&0!==t||(t=e.min),null===t||isNaN(t)?NaN:e.getPixelForDecimal(t===e.min?0:(Object(n.l)(t)-e._startValue)/e._valueRange)}getValueForPixel(t){const e=this,i=e.getDecimalForPixel(t);return Math.pow(10,e._startValue+i*e._valueRange)}}function _i(t){const e=t.ticks;if(e.display&&t.display){const t=Object(n.d)(e.backdropPadding);return Object(n.Nb)(e.font&&e.font.size,n.vb.font.size)+t.height}return 0}function yi(t,e,i,n,o){return t===n||t===o?{start:e-i/2,end:e+i/2}:t<n||t>o?{start:e-i,end:e}:{start:e,end:e+i}}function vi(t){return 0===t||180===t?\"center\":t<180?\"left\":\"right\"}function Oi(t,e,i){90===t||270===t?i.y-=e.h/2:(t>270||t<90)&&(i.y-=e.h)}function ji(t,e,i,o){const{ctx:s}=t;if(i)s.arc(t.xCenter,t.yCenter,e,0,n.u);else{let i=t.getPointPosition(0,e);s.moveTo(i.x,i.y);for(let n=1;n<o;n++)i=t.getPointPosition(n,e),s.lineTo(i.x,i.y)}}function Mi(t){return Object(n.Ob)(t)?t:0}xi.id=\"logarithmic\",xi.defaults={ticks:{callback:xt.formatters.logarithmic,major:{enabled:!0}}};class wi extends pi{constructor(t){super(t),this.xCenter=void 0,this.yCenter=void 0,this.drawingArea=void 0,this._pointLabels=[],this._pointLabelItems=[]}setDimensions(){const t=this;t.width=t.maxWidth,t.height=t.maxHeight,t.paddingTop=_i(t.options)/2,t.xCenter=Math.floor(t.width/2),t.yCenter=Math.floor((t.height-t.paddingTop)/2),t.drawingArea=Math.min(t.height-t.paddingTop,t.width)/2}determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!1);t.min=Object(n.yb)(e)&&!isNaN(e)?e:0,t.max=Object(n.yb)(i)&&!isNaN(i)?i:0,t.handleTickRangeOptions()}computeTickLimit(){return Math.ceil(this.drawingArea/_i(this.options))}generateTickLabels(t){const e=this;pi.prototype.generateTickLabels.call(e,t),e._pointLabels=e.getLabels().map(((t,i)=>{const o=Object(n.o)(e.options.pointLabels.callback,[t,i],e);return o||0===o?o:\"\"}))}fit(){const t=this,e=t.options;e.display&&e.pointLabels.display?function(t){const e={l:0,r:t.width,t:0,b:t.height-t.paddingTop},i={};let o,s,a;const r=[],l=[],c=t.getLabels().length;for(o=0;o<c;o++){const c=t.options.pointLabels.setContext(t.getContext(o));l[o]=c.padding,a=t.getPointPosition(o,t.drawingArea+l[o]);const g=Object(n.x)(c.font);t.ctx.font=g.string,h=t.ctx,d=g.lineHeight,u=t._pointLabels[o],s=Object(n.tb)(u)?{w:Object(n.Q)(h,h.font,u),h:u.length*d}:{w:h.measureText(u).width,h:d},r[o]=s;const b=t.getIndexAngle(o),p=Object(n.r)(b),f=yi(p,a.x,s.w,0,180),m=yi(p,a.y,s.h,90,270);f.start<e.l&&(e.l=f.start,i.l=b),f.end>e.r&&(e.r=f.end,i.r=b),m.start<e.t&&(e.t=m.start,i.t=b),m.end>e.b&&(e.b=m.end,i.b=b)}var h,d,u;t._setReductions(t.drawingArea,e,i),t._pointLabelItems=[];const g=t.options,b=_i(g),p=t.getDistanceFromCenterForValue(g.ticks.reverse?t.min:t.max);for(o=0;o<c;o++){const e=0===o?b/2:0,i=t.getPointPosition(o,p+e+l[o]),s=Object(n.r)(t.getIndexAngle(o)),a=r[o];Oi(s,a,i);const c=vi(s);let h;h=\"left\"===c?i.x:\"center\"===c?i.x-a.w/2:i.x-a.w;const d=h+a.w;t._pointLabelItems[o]={x:i.x,y:i.y,textAlign:c,left:h,top:i.y,right:d,bottom:i.y+a.h}}}(t):t.setCenterPoint(0,0,0,0)}_setReductions(t,e,i){const n=this;let o=e.l/Math.sin(i.l),s=Math.max(e.r-n.width,0)/Math.sin(i.r),a=-e.t/Math.cos(i.t),r=-Math.max(e.b-(n.height-n.paddingTop),0)/Math.cos(i.b);o=Mi(o),s=Mi(s),a=Mi(a),r=Mi(r),n.drawingArea=Math.max(t/2,Math.min(Math.floor(t-(o+s)/2),Math.floor(t-(a+r)/2))),n.setCenterPoint(o,s,a,r)}setCenterPoint(t,e,i,n){const o=this,s=o.width-e-o.drawingArea,a=t+o.drawingArea,r=i+o.drawingArea,l=o.height-o.paddingTop-n-o.drawingArea;o.xCenter=Math.floor((a+s)/2+o.left),o.yCenter=Math.floor((r+l)/2+o.top+o.paddingTop)}getIndexAngle(t){const e=n.u/this.getLabels().length,i=this.options.startAngle||0;return Object(n.kb)(t*e+Object(n.Lb)(i))}getDistanceFromCenterForValue(t){const e=this;if(Object(n.Bb)(t))return NaN;const i=e.drawingArea/(e.max-e.min);return e.options.reverse?(e.max-t)*i:(t-e.min)*i}getValueForDistanceFromCenter(t){if(Object(n.Bb)(t))return NaN;const e=this,i=t/(e.drawingArea/(e.max-e.min));return e.options.reverse?e.max-i:e.min+i}getPointPosition(t,e){const i=this,o=i.getIndexAngle(t)-n.i;return{x:Math.cos(o)*e+i.xCenter,y:Math.sin(o)*e+i.yCenter,angle:o}}getPointPositionForValue(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))}getBasePosition(t){return this.getPointPositionForValue(t||0,this.getBaseValue())}getPointLabelPosition(t){const{left:e,top:i,right:n,bottom:o}=this._pointLabelItems[t];return{left:e,top:i,right:n,bottom:o}}drawBackground(){const t=this,{backgroundColor:e,grid:{circular:i}}=t.options;if(e){const n=t.ctx;n.save(),n.beginPath(),ji(t,t.getDistanceFromCenterForValue(t._endValue),i,t.getLabels().length),n.closePath(),n.fillStyle=e,n.fill(),n.restore()}}drawGrid(){const t=this,e=t.ctx,i=t.options,{angleLines:o,grid:s}=i,a=t.getLabels().length;let r,l,c;if(i.pointLabels.display&&function(t,e){const{ctx:i,options:{pointLabels:o}}=t;for(let s=e-1;s>=0;s--){const e=o.setContext(t.getContext(s)),a=Object(n.x)(e.font),{x:r,y:l,textAlign:c,left:h,top:d,right:u,bottom:g}=t._pointLabelItems[s],{backdropColor:b}=e;if(!Object(n.Bb)(b)){const t=Object(n.d)(e.backdropPadding);i.fillStyle=b,i.fillRect(h-t.left,d-t.top,u-h+t.width,g-d+t.height)}Object(n.w)(i,t._pointLabels[s],r,l+a.lineHeight/2,a,{color:e.color,textAlign:c,textBaseline:\"middle\"})}}(t,a),s.display&&t.ticks.forEach(((e,i)=>{if(0!==i){l=t.getDistanceFromCenterForValue(e.value);const n=s.setContext(t.getContext(i-1));!function(t,e,i,n){const o=t.ctx,s=e.circular,{color:a,lineWidth:r}=e;!s&&!n||!a||!r||i<0||(o.save(),o.strokeStyle=a,o.lineWidth=r,o.setLineDash(e.borderDash),o.lineDashOffset=e.borderDashOffset,o.beginPath(),ji(t,i,s,n),o.closePath(),o.stroke(),o.restore())}(t,n,l,a)}})),o.display){for(e.save(),r=t.getLabels().length-1;r>=0;r--){const n=o.setContext(t.getContext(r)),{color:s,lineWidth:a}=n;a&&s&&(e.lineWidth=a,e.strokeStyle=s,e.setLineDash(n.borderDash),e.lineDashOffset=n.borderDashOffset,l=t.getDistanceFromCenterForValue(i.ticks.reverse?t.min:t.max),c=t.getPointPosition(r,l),e.beginPath(),e.moveTo(t.xCenter,t.yCenter),e.lineTo(c.x,c.y),e.stroke())}e.restore()}}drawLabels(){const t=this,e=t.ctx,i=t.options,o=i.ticks;if(!o.display)return;const s=t.getIndexAngle(0);let a,r;e.save(),e.translate(t.xCenter,t.yCenter),e.rotate(s),e.textAlign=\"center\",e.textBaseline=\"middle\",t.ticks.forEach(((s,l)=>{if(0===l&&!i.reverse)return;const c=o.setContext(t.getContext(l)),h=Object(n.x)(c.font);if(a=t.getDistanceFromCenterForValue(t.ticks[l].value),c.showLabelBackdrop){r=e.measureText(s.label).width,e.fillStyle=c.backdropColor;const t=Object(n.d)(c.backdropPadding);e.fillRect(-r/2-t.left,-a-h.size/2-t.top,r+t.width,h.size+t.height)}Object(n.w)(e,s.label,0,-a,h,{color:c.color})})),e.restore()}drawTitle(){}}wi.id=\"radialLinear\",wi.defaults={display:!0,animate:!0,position:\"chartArea\",angleLines:{display:!0,lineWidth:1,borderDash:[],borderDashOffset:0},grid:{circular:!1},startAngle:0,ticks:{showLabelBackdrop:!0,backdropColor:\"rgba(255,255,255,0.75)\",backdropPadding:2,callback:xt.formatters.numeric},pointLabels:{backdropColor:void 0,backdropPadding:2,display:!0,font:{size:10},callback:t=>t,padding:5}},wi.defaultRoutes={\"angleLines.color\":\"borderColor\",\"pointLabels.color\":\"color\",\"ticks.color\":\"color\"},wi.descriptors={angleLines:{_fallback:\"grid\"}};const ki={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},Si=Object.keys(ki);function Di(t,e){return t-e}function Pi(t,e){if(Object(n.Bb)(e))return null;const i=t._adapter,o=t.options.time,{parser:s,round:a,isoWeekday:r}=o;let l=e;return\"function\"===typeof s&&(l=s(l)),Object(n.yb)(l)||(l=\"string\"===typeof s?i.parse(l,s):i.parse(l)),null===l?null:(a&&(l=\"week\"!==a||!Object(n.Ob)(r)&&!0!==r?i.startOf(l,a):i.startOf(l,\"isoWeek\",r)),+l)}function Ci(t,e,i,n){const o=Si.length;for(let s=Si.indexOf(t);s<o-1;++s){const t=ki[Si[s]],o=t.steps?t.steps:Number.MAX_SAFE_INTEGER;if(t.common&&Math.ceil((i-e)/(o*t.size))<=n)return Si[s]}return Si[o-1]}function Ai(t,e,i){if(i){if(i.length){const{lo:o,hi:s}=Object(n.S)(i,e);t[i[o]>=e?i[o]:i[s]]=!0}}else t[e]=!0}function Li(t,e,i){const n=[],o={},s=e.length;let a,r;for(a=0;a<s;++a)r=e[a],o[r]=a,n.push({value:r,major:!1});return 0!==s&&i?function(t,e,i,n){const o=t._adapter,s=+o.startOf(e[0].value,n),a=e[e.length-1].value;let r,l;for(r=s;r<=a;r=+o.add(r,1,n))l=i[r],l>=0&&(e[l].major=!0);return e}(t,n,o,i):n}class Ti extends St{constructor(t){super(t),this._cache={data:[],labels:[],all:[]},this._unit=\"day\",this._majorUnit=void 0,this._offsets={},this._normalized=!1}init(t,e){const i=t.time||(t.time={}),o=this._adapter=new R._date(t.adapters.date);Object(n.J)(i.displayFormats,o.formats()),super.init(t),this._normalized=e.normalized}parse(t,e){return void 0===t?null:Pi(this,t)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const t=this,e=t.options,i=t._adapter,o=e.time.unit||\"day\";let{min:s,max:a,minDefined:r,maxDefined:l}=t.getUserBounds();function c(t){r||isNaN(t.min)||(s=Math.min(s,t.min)),l||isNaN(t.max)||(a=Math.max(a,t.max))}r&&l||(c(t._getLabelBounds()),\"ticks\"===e.bounds&&\"labels\"===e.ticks.source||c(t.getMinMax(!1))),s=Object(n.yb)(s)&&!isNaN(s)?s:+i.startOf(Date.now(),o),a=Object(n.yb)(a)&&!isNaN(a)?a:+i.endOf(Date.now(),o)+1,t.min=Math.min(s,a-1),t.max=Math.max(s+1,a)}_getLabelBounds(){const t=this.getLabelTimestamps();let e=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;return t.length&&(e=t[0],i=t[t.length-1]),{min:e,max:i}}buildTicks(){const t=this,e=t.options,i=e.time,o=e.ticks,s=\"labels\"===o.source?t.getLabelTimestamps():t._generate();\"ticks\"===e.bounds&&s.length&&(t.min=t._userMin||s[0],t.max=t._userMax||s[s.length-1]);const a=t.min,r=t.max,l=Object(n.R)(s,a,r);return t._unit=i.unit||(o.autoSkip?Ci(i.minUnit,t.min,t.max,t._getLabelCapacity(a)):function(t,e,i,n,o){for(let s=Si.length-1;s>=Si.indexOf(i);s--){const i=Si[s];if(ki[i].common&&t._adapter.diff(o,n,i)>=e-1)return i}return Si[i?Si.indexOf(i):0]}(t,l.length,i.minUnit,t.min,t.max)),t._majorUnit=o.major.enabled&&\"year\"!==t._unit?function(t){for(let e=Si.indexOf(t)+1,i=Si.length;e<i;++e)if(ki[Si[e]].common)return Si[e]}(t._unit):void 0,t.initOffsets(s),e.reverse&&l.reverse(),Li(t,l,t._majorUnit)}initOffsets(t){const e=this;let i,o,s=0,a=0;e.options.offset&&t.length&&(i=e.getDecimalForValue(t[0]),s=1===t.length?1-i:(e.getDecimalForValue(t[1])-i)/2,o=e.getDecimalForValue(t[t.length-1]),a=1===t.length?o:(o-e.getDecimalForValue(t[t.length-2]))/2);const r=t.length<3?.5:.25;s=Object(n.Pb)(s,0,r),a=Object(n.Pb)(a,0,r),e._offsets={start:s,end:a,factor:1/(s+1+a)}}_generate(){const t=this,e=t._adapter,i=t.min,o=t.max,s=t.options,a=s.time,r=a.unit||Ci(a.minUnit,i,o,t._getLabelCapacity(i)),l=Object(n.Nb)(a.stepSize,1),c=\"week\"===r&&a.isoWeekday,h=Object(n.Ob)(c)||!0===c,d={};let u,g,b=i;if(h&&(b=+e.startOf(b,\"isoWeek\",c)),b=+e.startOf(b,h?\"day\":r),e.diff(o,i,r)>1e5*l)throw new Error(i+\" and \"+o+\" are too far apart with stepSize of \"+l+\" \"+r);const p=\"data\"===s.ticks.source&&t.getDataTimestamps();for(u=b,g=0;u<o;u=+e.add(u,l,r),g++)Ai(d,u,p);return u!==o&&\"ticks\"!==s.bounds&&1!==g||Ai(d,u,p),Object.keys(d).sort(((t,e)=>t-e)).map((t=>+t))}getLabelForValue(t){const e=this._adapter,i=this.options.time;return i.tooltipFormat?e.format(t,i.tooltipFormat):e.format(t,i.displayFormats.datetime)}_tickFormatFunction(t,e,i,o){const s=this,a=s.options,r=a.time.displayFormats,l=s._unit,c=s._majorUnit,h=l&&r[l],d=c&&r[c],u=i[e],g=c&&d&&u&&u.major,b=s._adapter.format(t,o||(g?d:h)),p=a.ticks.callback;return p?Object(n.o)(p,[b,e,i],s):b}generateTickLabels(t){let e,i,n;for(e=0,i=t.length;e<i;++e)n=t[e],n.label=this._tickFormatFunction(n.value,e,t)}getDecimalForValue(t){const e=this;return null===t?NaN:(t-e.min)/(e.max-e.min)}getPixelForValue(t){const e=this,i=e._offsets,n=e.getDecimalForValue(t);return e.getPixelForDecimal((i.start+n)*i.factor)}getValueForPixel(t){const e=this,i=e._offsets,n=e.getDecimalForPixel(t)/i.factor-i.end;return e.min+n*(e.max-e.min)}_getLabelSize(t){const e=this,i=e.options.ticks,o=e.ctx.measureText(t).width,s=Object(n.Lb)(e.isHorizontal()?i.maxRotation:i.minRotation),a=Math.cos(s),r=Math.sin(s),l=e._resolveTickFontOptions(0).size;return{w:o*a+l*r,h:o*r+l*a}}_getLabelCapacity(t){const e=this,i=e.options.time,n=i.displayFormats,o=n[i.unit]||n.millisecond,s=e._tickFormatFunction(t,0,Li(e,[t],e._majorUnit),o),a=e._getLabelSize(s),r=Math.floor(e.isHorizontal()?e.width/a.w:e.height/a.h)-1;return r>0?r:1}getDataTimestamps(){const t=this;let e,i,n=t._cache.data||[];if(n.length)return n;const o=t.getMatchingVisibleMetas();if(t._normalized&&o.length)return t._cache.data=o[0].controller.getAllParsedValues(t);for(e=0,i=o.length;e<i;++e)n=n.concat(o[e].controller.getAllParsedValues(t));return t._cache.data=t.normalize(n)}getLabelTimestamps(){const t=this,e=t._cache.labels||[];let i,n;if(e.length)return e;const o=t.getLabels();for(i=0,n=o.length;i<n;++i)e.push(Pi(t,o[i]));return t._cache.labels=t._normalized?e:t.normalize(e)}normalize(t){return Object(n.B)(t.sort(Di))}}function Ei(t,e,i){let o,s,a,r;if(i)o=Math.floor(e),s=Math.ceil(e),a=t[o],r=t[s];else{const i=Object(n.S)(t,e);a=i.lo,r=i.hi,o=t[a],s=t[r]}const l=s-o;return l?a+(r-a)*(e-o)/l:a}Ti.id=\"time\",Ti.defaults={bounds:\"data\",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:\"millisecond\",displayFormats:{}},ticks:{source:\"auto\",major:{enabled:!1}}};class zi extends Ti{constructor(t){super(t),this._table=[],this._maxIndex=void 0}initOffsets(){const t=this,e=t._getTimestampsForTable();t._table=t.buildLookupTable(e),t._maxIndex=t._table.length-1,super.initOffsets(e)}buildLookupTable(t){const{min:e,max:i}=this;if(!t.length)return[{time:e,pos:0},{time:i,pos:1}];const n=[e];let o,s,a;for(o=0,s=t.length;o<s;++o)a=t[o],a>e&&a<i&&n.push(a);return n.push(i),n}_getTimestampsForTable(){const t=this;let e=t._cache.all||[];if(e.length)return e;const i=t.getDataTimestamps(),n=t.getLabelTimestamps();return e=i.length&&n.length?t.normalize(i.concat(n)):i.length?i:n,e=t._cache.all=e,e}getPixelForValue(t,e){const i=this,o=i._offsets,s=i._normalized&&i._maxIndex>0&&!Object(n.Bb)(e)?e/i._maxIndex:i.getDecimalForValue(t);return i.getPixelForDecimal((o.start+s)*o.factor)}getDecimalForValue(t){return Ei(this._table,t)/this._maxIndex}getValueForPixel(t){const e=this,i=e._offsets,n=e.getDecimalForPixel(t)/i.factor-i.end;return Ei(e._table,n*this._maxIndex,!0)}}zi.id=\"timeseries\",zi.defaults=Ti.defaults;const Ri=[T,Se,ui,Object.freeze({__proto__:null,CategoryScale:bi,LinearScale:fi,LogarithmicScale:xi,RadialLinearScale:wi,TimeScale:Ti,TimeSeriesScale:zi})]}}]);","map":{"version":3,"sources":["static/chunks/36bcf0ca.aa95b0703f7b49884183.js"],"names":["window","push","m0r1","module","__webpack_exports__","__webpack_require__","d","Chart","registerables","_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__","animator","[object Object]","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","currentStep","Math","min","start","me","call","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","reduce","acc","cur","max","_duration","cancel","delete","transparent","interpolators","boolean","from","to","factor","c0","Object","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","active","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","props","charAt","_animateOptions","value","update","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","vScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","adata","Array","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","toClip","clip","defaultClip","getMaxOverflow","elements","area","chartArea","element","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","create","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","arguments","computeMinSampleSize","_cache","$bar","metas","getMatchingVisibleMetas","concat","getAllParsedValues","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","reset","base","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","val","isNaN","indexOf","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","grouped","ratio","categoryPercentage","barPercentage","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","skipNull","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","overrides","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","getPixelForDecimal","skip","radius","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","rotation","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","fullSize","placeBoxes","userPadding","padding","layouts","_layers","z","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","canvas","listener","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","removeEventListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","container","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","args","node","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","initial","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","Element","getProps","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","route","startsWith","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","descriptors","registerDefaults","registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","needContext","subResolver","descriptorDefaults","resolverCache","p","includes","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","c","initialCanvas","existingChart","chartOptionScopes","platform","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","console","error","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","getMaximumSize","oldRatio","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","oldIndex","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","_updateMetasetIndex","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","unbindEvents","releaseContext","toDataURL","_add","_remove","events","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","onClick","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","version","unregister","ArcElement","chartX","chartY","halfAngle","halfRadius","translate","drawArc","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","segments","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","cubicInterpolationMode","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","orig","v2","startEnd","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","pointStyle","BarElement","addRectPath","cleanDecimatedDataset","defineProperty","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","configurable","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","parseFloat","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","buildStackLine","sourcePoints","linesBelow","below","isLineAndNotInHideAnimation","unshift","getLinesBelow","createBoundaryLine","addPointsBelow","sourcePoint","postponed","findPoint","interpolate","pointValue","linePoints","firstValue","lastValue","boundary","pointsFromSegments","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","lineLoop","targetLoop","drawfill","getLineByIndex","getTarget","lineOpts","above","doFill","plugin_filler","_args","$filler","drawTime","getBoxSize","labelOpts","fontSize","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","labelCount","Decimation","Filler","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","step","precision","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","generateTicks$1","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","backdropPadding","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","pathRadiusLine","getPointPosition","numberOrZero","param","logarithmic","RadialLinearScale","drawingArea","_pointLabels","_pointLabelItems","furthestLimits","furthestAngles","valueCount","plFont","hLimits","vLimits","_setReductions","tickBackdropHeight","outerDistance","extra","pointLabelPosition","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","distanceFromCenter","backdropColor","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","showLabelBackdrop","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","time","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable"],"mappings":"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"},"name":"static/chunks/36bcf0ca.aa95b0703f7b49884183.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[3],{\n\n/***/ \"m0r1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Animation */\n/* unused harmony export Animations */\n/* unused harmony export ArcElement */\n/* unused harmony export BarController */\n/* unused harmony export BarElement */\n/* unused harmony export BasePlatform */\n/* unused harmony export BasicPlatform */\n/* unused harmony export BubbleController */\n/* unused harmony export CategoryScale */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Chart; });\n/* unused harmony export DatasetController */\n/* unused harmony export Decimation */\n/* unused harmony export DomPlatform */\n/* unused harmony export DoughnutController */\n/* unused harmony export Element */\n/* unused harmony export Filler */\n/* unused harmony export Interaction */\n/* unused harmony export Legend */\n/* unused harmony export LineController */\n/* unused harmony export LineElement */\n/* unused harmony export LinearScale */\n/* unused harmony export LogarithmicScale */\n/* unused harmony export PieController */\n/* unused harmony export PointElement */\n/* unused harmony export PolarAreaController */\n/* unused harmony export RadarController */\n/* unused harmony export RadialLinearScale */\n/* unused harmony export Scale */\n/* unused harmony export ScatterController */\n/* unused harmony export Ticks */\n/* unused harmony export TimeScale */\n/* unused harmony export TimeSeriesScale */\n/* unused harmony export Title */\n/* unused harmony export Tooltip */\n/* unused harmony export _adapters */\n/* unused harmony export animator */\n/* unused harmony export controllers */\n/* unused harmony export elements */\n/* unused harmony export layouts */\n/* unused harmony export plugins */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return registerables; });\n/* unused harmony export registry */\n/* unused harmony export scales */\n/* harmony import */ var _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"3T2N\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[\"vb\"]; });\n\n/*!\n * Chart.js v3.1.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\n\n\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* r */ \"Jb\"].call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"ub\"])(from || transparent);\n    const c1 = c0.valid && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"ub\"])(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.to, to, currentValue, cfg.from]);\n    const from = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* e */ \"wb\"][cfg.easing] || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* e */ \"wb\"].linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.to, to, currentValue, cfg.from]);\n      me._from = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].animation);\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].describe('animations', {\n  _fallback: 'animation',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(otherValue) && (singleMode || (value === 0 || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Kb\"])(value) === Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Kb\"])(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* u */ \"Mb\"])(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* u */ \"Mb\"])(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* l */ \"Db\"])(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"xb\"])(item, xAxisKey), index),\n        y: yScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"xb\"])(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"zb\"])(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ \"B\"])(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"xb\"])(obj, iAxisKey), i);\n      parsed.push(parseValue(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"xb\"])(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Kb\"])(value) !== Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Kb\"])(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Cb\"])(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Eb\"])(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"xb\"])(item, xAxisKey), i),\n        y: yScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"xb\"])(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Ib\"])(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Ib\"])(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startY, endY);\n    const minX = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"], startX, endX);\n    const minY = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Lb\"])(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Lb\"])(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    let max = -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* n */ \"Fb\"])(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* o */ \"Gb\"])(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Hb\"])(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Ob\"])(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(Math.min(\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Qb\"])(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Qb\"])(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(Math.max(\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Qb\"])(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Qb\"])(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"];\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Lb\"])(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* z */ \"Rb\"])(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"] : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Qb\"];\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* G */ \"h\"])(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* G */ \"h\"])(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"] ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* z */ \"Rb\"])(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* I */ \"j\"])((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* I */ \"j\"])((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* E */ \"f\"])(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n    return !!(container && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Ob\"])(this.x) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Ob\"])(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Hb\"])(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n  }\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].route('scale.ticks', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].route('scale.grid', 'color', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].route('scale.grid', 'borderColor', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].route('scale.title', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(majorStart, 0);\n  const end = Math.min(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.font, fallback);\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  const lines = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, bottom, top);\n    rotation = position === 'left' ? -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"] : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"];\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMin, _suggestedMin),\n      max: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMax, _suggestedMax),\n      minDefined: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(_userMin),\n      maxDefined: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(min, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(max, min)),\n      max: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(max, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* O */ \"p\"])(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Lb\"])(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(label) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(label)) {\n        width = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* R */ \"s\"])(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(nestedLabel) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(nestedLabel)) {\n            width = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* R */ \"s\"])(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* S */ \"t\"])(me._alignToPixels ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Lb\"])(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Lb\"])(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Lb\"])(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n    if (axisWidth) {\n      const lastLineWidth = borderOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine(\n        {x: x1, y: y1},\n        {x: x2, y: y2},\n        {width: axisWidth, color: borderOpts.borderColor});\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Cb\"])(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Eb\"])(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(title.font);\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"][scope]) {\n      delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"][scope][id];\n      if (this.override) {\n        delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* $ */ \"a\"])(Object.create(null), [\n    parentScope ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].get(parentScope) : {},\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].get(scope),\n    item.defaults\n  ]);\n  _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a0 */ \"D\"])(method);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(component['before' + camelMethod], [], component);\n    registry[method](component);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(scale, [_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].scales[scale.type], _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"xb\"])(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"], key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a1 */ \"E\"], key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].datasets[type] || {},\n      {type},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"],\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a1 */ \"E\"]\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a2 */ \"F\"])(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a3 */ \"G\"])(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(context)\n      ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a3 */ \"G\"])(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a4 */ \"H\"])(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a5 */ \"I\"])(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a2 */ \"F\"])(proxy[prop]))\n      || (isIndexable(prop) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.1.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a7 */ \"K\"])();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a8 */ \"L\"])(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a9 */ \"M\"])(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aa */ \"T\"])(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a9 */ \"M\"])(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Cb\"])(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Eb\"])(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aa */ \"T\"])(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"U\"])(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(e, me.chartArea, me._minPadding)) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"U\"])(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"]\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"]\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ad */ \"W\"])(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(o.innerStart, 0, innerLimit),\n    innerEnd: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"], startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ac */ \"V\"])(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Ib\"])(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ak */ \"db\"];\n  }\n  if (options.tension) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* al */ \"eb\"];\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ah */ \"ab\"];\n  }\n  if (options.tension) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ai */ \"bb\"];\n  }\n  return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aj */ \"cb\"];\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ae */ \"X\"])(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* af */ \"Y\"])(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ag */ \"Z\"])(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* am */ \"fb\"])(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"hb\"])(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"ib\"])(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"gb\"] : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(minIndex) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Qb\"])(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Qb\"])(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Ab\"])(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ar */ \"kb\"])(start);\n    end = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ar */ \"kb\"])(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ag */ \"Z\"])(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aq */ \"jb\"])(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Cb\"])(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Eb\"])(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        source.line.updateControlPoints(area);\n        if (options.drawTime === 'beforeDatasetsDraw') {\n          drawfill(chart.ctx, source, area);\n        }\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Cb\"])(ctx, me);\n      me._draw();\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Eb\"])(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].color;\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"lb\"])(opts.rtl, me.left, me.width);\n    const labelFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(legendItem.lineWidth, 1);\n      ctx.fillStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* am */ \"fb\"])(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"ib\"])(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"gb\"])(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"mb\"])(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"nb\"])(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* av */ \"ob\"])(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(titleOpts.font);\n    const titlePadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"lb\"])(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(titleOpts.font);\n    const titlePadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(opts.text) ? opts.text.length : 1;\n    me._padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(opts.padding);\n    const textSize = lineCount * Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, bottom, top);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, top, bottom);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"qb\"])(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n  const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.titleFont);\n  const footerFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(body, (bodyItem) => {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.before, maxLineWidth);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.lines, maxLineWidth);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(x, 0, chart.width - size.width),\n    y: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"lb\"])(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* am */ \"fb\"])(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* am */ \"fb\"])(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"ib\"])(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"gb\"])(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"gb\"])(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"lb\"])(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"lb\"])(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"mb\"])(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* av */ \"ob\"])(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"U\"])(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"U\"])(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"pb\"],\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"pb\"],\n      beforeBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"pb\"],\n      beforeLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"pb\"],\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"pb\"],\n      afterBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"pb\"],\n      beforeFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"pb\"],\n      footer: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"pb\"],\n      afterFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"pb\"]\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(min);\n  const maxDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(max);\n  const countDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(count);\n  let spacing = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* az */ \"sb\"])((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* az */ \"sb\"])(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aA */ \"N\"])((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aB */ \"O\"])(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(precision) ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aC */ \"P\"])(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aB */ \"O\"])(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aB */ \"O\"])(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Kb\"])(min);\n      const maxSign = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Kb\"])(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"rb\"])(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Hb\"])(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(min) ? min : 0;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(generationOptions.min, Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(dataRange.min))));\n  let exp = Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(min) ? Math.max(0, min) : null;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"rb\"])(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Hb\"])(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(start);\n    me._valueRange = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(me.max) - Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(tickOpts.backdropPadding);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(tickOpts.font && tickOpts.font.size, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"vb\"].font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"tb\"])(label)) {\n    return {\n      w: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aD */ \"Q\"])(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(backdropColor)) {\n      const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Ob\"])(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(min) && !isNaN(min) ? min : 0;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ar */ \"kb\"])(index * angleMultiplier + Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Lb\"])(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"];\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {parser, round, isoWeekday} = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Ob\"])(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aF */ \"S\"])(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"yb\"])(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aE */ \"R\"])(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(start, 0, limit);\n    end = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Pb\"])(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Nb\"])(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Ob\"])(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Lb\"])(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ \"B\"])(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aF */ \"S\"])(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Bb\"])(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/user/Documents/yashpro/git/crypto/node_modules/chart.js/dist/chart.esm.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACq2D;AACzyD;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qEAAgB;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe,6EAAK;AACpB,2BAA2B,6EAAK;AAChC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4EAAO;AAChB,iBAAiB,4EAAO;AACxB;AACA;AACA,mBAAmB,qEAAO,gBAAgB,qEAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAO;AACtB,iBAAiB,4EAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qCAAqC,qEAAQ;AAC7C,qEAAQ;AACR;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,qEAAQ;AACR;AACA,CAAC;AACD,qEAAQ;AACR;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAQ;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6EAAO;AACd;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY,gCAAgC;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAc,+CAA+C,6EAAI,YAAY,6EAAI;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc,GAAG,cAAc,GAAG,wBAAwB;AACtE;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,2DAA2D;AAC3D;AACA;AACA,SAAS,yBAAyB;AAClC,qDAAqD;AACrD,SAAS,oCAAoC;AAC7C;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA,WAAW,+BAA+B;AAC1C,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6EAAc;AAC7C,+BAA+B,6EAAc;AAC7C,+BAA+B,6EAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAQ;AAChB;AACA,KAAK;AACL;AACA,QAAQ,6EAAmB;AAC3B;AACA;AACA;AACA,QAAQ,6EAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,UAAU,6EAAO;AACjB;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA,OAAO;AACP;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,wBAAwB,6EAAgB;AACxC,wBAAwB,6EAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,UAAU;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,mBAAmB;AACnB,WAAW,6BAA6B;AACxC;AACA;AACA;AACA;AACA;AACA,cAAc,6EAAc;AAC5B;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA,UAAU,6EAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,6EAAO;AACrD;AACA;AACA;AACA;AACA;AACA,kCAAkC,YAAY;AAC9C;AACA,8BAA8B,qEAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA,wBAAwB,4EAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAa;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA,uCAAuC,6EAAgB;AACvD,6BAA6B,6EAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA,+BAA+B,6EAAa,yBAAyB,iBAAiB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,6EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAI,YAAY,6EAAI;AAC7C;AACA;AACA;AACA;AACA,wBAAwB,6EAAa;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAQ;AACZ,UAAU,UAAU;AACpB;AACA;AACA;AACA;AACA,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA,wBAAwB,6EAAgB;AACxC,wBAAwB,6EAAgB;AACxC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oEAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6EAAa;AAClD,qCAAqC,6EAAa;AAClD;AACA,yBAAyB,oEAAO;AAChC,yBAAyB,oEAAE;AAC3B,yBAAyB,oEAAE,GAAG,oEAAO;AACrC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA,WAAW,6EAAS;AACpB;AACA;AACA,WAAW,6EAAS;AACpB;AACA;AACA,cAAc,oEAAG;AACjB,eAAe,oEAAG;AAClB;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA,4BAA4B,6EAAY;AACxC;AACA,WAAW,wBAAwB;AACnC,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA,wBAAwB,6EAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,oEAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oEAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc,6EAAO;AACrB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA,yBAAyB,6EAAQ;AACjC;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,uBAAuB,6EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,iCAAiC;AAC5C;AACA,cAAc,6EAAW;AACzB,QAAQ,6EAAY;AACpB,0CAA0C,6EAAY;AACtD;AACA;AACA;AACA,cAAc,6EAAW;AACzB,QAAQ,6EAAY;AACpB,iCAAiC,6EAAY;AAC7C;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,6BAA6B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,oEAAE;AAC/D;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,6EAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmqB;AAC9B;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,MAAM,YAAY;AAClB,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,iDAAiD,oEAAa,GAAG,qEAAY;AAC7E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4EAAc;AACrB;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4EAAc;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA,KAAK;AACL,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yCAAyC;AAClE;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,sBAAsB,yCAAyC;AAC/D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6EAAQ;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC;AACvC,iCAAiC,4EAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,4BAA4B,4EAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oEAA4B,IAAI,cAAc;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,GAAG,6EAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA,mBAAmB,4EAAc;AACjC;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA;AACA,iBAAiB,4EAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4EAAS;AACzB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAa;AACvB;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA,sBAAsB,4EAAc;AACpC,2BAA2B,4EAAc;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA,WAAW,6EAAQ,YAAY,6EAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,6EAAO;AAClB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAK;AAC1B;AACA,qBAAqB;AACrB;AACA,WAAW,6EAAY;AACvB,GAAG;AACH;AACA;AACA;AACA;AACA,wDAAwD,4EAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6EAAa;AAChD,2CAA2C,UAAU;AACrD;AACA;AACA,yCAAyC,6EAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAU;AAC5B,4CAA4C,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAc;AAC9B,uBAAuB,6EAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAI;AACN;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAM;AACrB,kBAAkB,4EAAS;AAC3B,gBAAgB,6EAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,4EAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;AACA,aAAa,4EAAc;AAC3B;AACA;AACA,GAAG;AACH;AACA,aAAa,4EAAc;AAC3B,sCAAsC,oEAAO,GAAG,oEAAO;AACvD;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAiD;AAC1D,eAAe,4EAAe;AAC9B,eAAe,4EAAe;AAC9B,oBAAoB,4EAAe;AACnC,oBAAoB,4EAAe;AACnC;AACA,WAAW,4EAAe;AAC1B,WAAW,4EAAe;AAC1B,kBAAkB,6EAAc;AAChC,kBAAkB,6EAAc;AAChC;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA,cAAc;AACd;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAe,MAAM,4EAAe;AAC/C,WAAW,4EAAe,MAAM,4EAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA,mBAAmB,4EAAQ;AAC3B;AACA,eAAe,UAAU;AACzB,UAAU,6EAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB,mDAAmD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA,6BAA6B,6EAAS;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ,eAAe,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,WAAW,6EAAa,YAAY,6EAAO;AAC3C,gBAAgB,4EAAY;AAC5B;AACA,OAAO,UAAU,6EAAO;AACxB,wCAAwC,UAAU;AAClD;AACA,eAAe,6EAAa,kBAAkB,6EAAO;AACrD,oBAAoB,4EAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mDAAmD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAW,qBAAqB,4EAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAW;AACpC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA,sBAAsB,6EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,sBAAsB,6EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;AACA;AACA,WAAW,eAAe,gBAAgB,2BAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAW;AACxB,aAAa,4EAAW;AACxB;AACA,OAAO;AACP,aAAa,4EAAW;AACxB,aAAa,4EAAW;AACxB;AACA;AACA;AACA,SAAS,aAAa;AACtB,SAAS,aAAa;AACtB,SAAS,gDAAgD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA,MAAM,6EAAU;AAChB;AACA;AACA;AACA,WAAW,eAAe,0BAA0B;AACpD;AACA;AACA;AACA,iBAAiB,4EAAM;AACvB,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA,UAAU,6EAAO;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,mCAAmC;AAC9C,IAAI,4EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAM;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qEAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qEAAQ;AAC/B,aAAa,qEAAQ;AACrB;AACA,eAAe,oEAAS;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAK;AAC5B,kBAAkB,qEAAQ,sBAAsB;AAChD,IAAI,qEAAQ;AACZ;AACA;AACA,EAAE,qEAAQ;AACV;AACA;AACA;AACA;AACA,IAAI,qEAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qEAAQ;AACZ,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,QAAQ,4EAAI;AACZ;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,wBAAwB,6EAAW;AACnC,IAAI,4EAAQ;AACZ;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4EAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAc,6CAA6C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mDAAmD;AAC1G;;AAEA;AACA,0BAA0B,qEAAQ;AAClC,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oEAAS,kBAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6EAAO,wBAAwB,KAAK;AACrD,GAAG;AACH;AACA;AACA;AACA,4BAA4B,oEAAS;AACrC;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO,eAAe,KAAK;AACjC,KAAK;AACL,GAAG;AACH;AACA;AACA,IAAI,6EAAO,SAAS,qEAAQ,qBAAqB,qEAAQ;AACzD,GAAG;AACH;AACA;AACA;AACA,wDAAwD;AACxD,oBAAoB,6EAAc,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6EAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA,yBAAyB,YAAY,cAAc,WAAW;AAC9D;AACA;AACA,sBAAsB,YAAY,eAAe,WAAW;AAC5D,yBAAyB,WAAW;AACpC;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY,GAAG,YAAY;AACpD;AACA,oBAAoB,YAAY,YAAY,YAAY;AACxD,oBAAoB,YAAY;AAChC,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAK,UAAU,GAAG;AAC3C;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oEAAS,YAAY;AAClE,6CAA6C,qEAAQ;AACrD,6CAA6C,qEAAW;AACxD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,MAAM,oEAAS,YAAY;AAC3B,MAAM,qEAAQ,qBAAqB;AACnC,OAAO,KAAK;AACZ,MAAM,qEAAQ;AACd,MAAM,qEAAW;AACjB;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,sBAAsB;AACjC;AACA;AACA;AACA,gBAAgB,6EAAU;AAC1B;AACA,gBAAgB,6EAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,6EAAQ;AACnB,QAAQ,6EAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B,GAAG,6EAAY;AAClD;AACA,+BAA+B,6EAAU;AACzC,+BAA+B,6EAAO;AACtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAQ;AACV;AACA;AACA;AACA;AACA,EAAE,4EAAQ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU,iCAAiC,8BAA8B;AACpF,SAAS,6EAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,6EAAW;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAW;AACf,gCAAgC,cAAc;AAC9C,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL,IAAI,4EAAI;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,eAAe,oCAAoC,GAAG,qEAAQ;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA,OAAO;AACP;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA,mDAAmD,UAAU;AAC7D,8CAA8C,gBAAgB;AAC9D;AACA,6CAA6C,KAAK;AAClD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAQ;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAW;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,6EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAc;AACtB,MAAM,4EAAQ;AACd;AACA,QAAQ,4EAAQ;AAChB;AACA;AACA,eAAe,6EAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4EAAI;AACpC;AACA;AACA;AACA;AACA,WAAW,qEAAQ;AACnB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,oEAAS;AACpB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,SAAS,kEAAkE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,0CAA0C,oEAAO,eAAe,oEAAO;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAW;AACtB;AACA;AACA;AACA;AACA,gBAAgB,6EAAW;AAC3B,cAAc,6EAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA,SAAS,2CAA2C;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,oEAAO;AACrF;AACA;AACA;AACA;AACA;AACA,uDAAuD,oEAAO;AAC9D;AACA;AACA;AACA;AACA,8FAA8F,oEAAO;AACrG;AACA;AACA;AACA;AACA;AACA,2DAA2D,oEAAO;AAClE;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAG;AAC/C;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA,oEAAoE,oEAAG;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA;AACA;AACA,4CAA4C,oEAAG;AAC/C;AACA;AACA;AACA,0BAA0B,oEAAG;AAC7B;AACA;AACA;AACA;AACA,0CAA0C,oEAAG;AAC7C,aAAa,yBAAyB;AACtC;AACA;AACA;AACA,sDAAsD,oEAAG;AACzD,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB,GAAG,6EAAiB,SAAS,qBAAqB;AAC7E,WAAW,8DAA8D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oEAAG,IAAI,6EAAa;AAC/D;AACA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oEAAG;AACtD;AACA;AACA;AACA;AACA,qCAAqC,oEAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,6EAAc;AAC9B,kBAAkB,6EAAc;AAChC,uBAAuB,6EAAc;AACrC,iBAAiB,6EAAc;AAC/B,kBAAkB,6EAAc;AAChC,oBAAoB,6EAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAc;AACzB;AACA;AACA,WAAW,sEAAc;AACzB;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,SAAS,mDAAmD;AAC5D,SAAS,qCAAqC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC;AACA,OAAO,qBAAqB;AAC5B;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAqB;AAChC;AACA;AACA,WAAW,sEAAoB;AAC/B;AACA,SAAS,sEAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA,2CAA2C,8BAA8B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAA0B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6EAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAc,MAAM,mCAAmC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8BAA8B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,cAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8EAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,kDAAkD,sEAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,6EAAa,eAAe,6EAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB,SAAS,iCAAiC;AAC1C;AACA,YAAY,6EAAW,CAAC,6EAAY;AACpC;AACA;AACA,YAAY,6EAAW,CAAC,6EAAY;AACpC,GAAG;AACH;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA,UAAU,4EAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,UAAU,6EAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kBAAkB;AAC/E;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,OAAO;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,UAAU,6EAAQ;AACrB;AACA,GAAG;AACH;AACA;AACA,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,wBAAwB,eAAe,oEAAG;AAC1C;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,UAAU,6EAAQ;AACrB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,mBAAmB,aAAa;AAChC,KAAK;AACL,mBAAmB,cAAc;AACjC,mBAAmB,aAAa;AAChC;AACA,GAAG;AACH;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,iBAAiB,qBAAqB;AACtC;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,kBAAkB;AAC3B,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAe;AAC3B,UAAU,8EAAe;AACzB;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,2BAA2B,6EAAc;AACzC;AACA;AACA,0BAA0B,8EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qCAAqC;AAC9C;AACA,cAAc,qCAAqC;AACnD,WAAW,QAAQ,wBAAwB,MAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uDAAuD,8BAA8B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA;AACA;AACA,gBAAgB,4CAA4C;AAC5D;AACA;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA,IAAI,6EAAQ;AACZ,iBAAiB,8CAA8C;AAC/D,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,0CAA0C;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB,SAAS,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,0BAA0B,SAAS,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAiD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,KAAK;AACL;AACA,sBAAsB,iDAAiD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC,gBAAgB,UAAU;AACzE;AACA;AACA,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,4EAAc;AAC9B;AACA;AACA;AACA,gBAAgB,4EAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA,MAAM,6EAAU;AAChB;AACA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,yBAAyB;AACpC,yBAAyB,qEAAQ;AACjC,sBAAsB,8EAAa;AACnC,sBAAsB,4EAAM;AAC5B,WAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC,sBAAsB,6EAAc;AACpC,oBAAoB,6EAAc;AAClC,2BAA2B,6EAAc;AACzC,qBAAqB,6EAAc;AACnC;AACA,wBAAwB,6EAAc;AACtC,sBAAsB,6EAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8EAAS;AACjB,OAAO;AACP;AACA;AACA,6BAA6B,8EAAa;AAC1C;AACA;AACA,UAAU,8EAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA;AACA,IAAI,8EAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAc;AACvC;AACA,OAAO;AACP;AACA;AACA,uBAAuB,4EAAc;AACrC;AACA;AACA;AACA,UAAU,8EAAM;AAChB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,IAAI,8EAAoB;AACxB;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B,yBAAyB,4EAAS;AAClC;AACA;AACA;AACA,sBAAsB,8EAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAc;AAC3B,KAAK;AACL;AACA,uCAAuC,4EAAc;AACrD;AACA,cAAc,4EAAc;AAC5B,wCAAwC,4EAAkB;AAC1D;AACA;AACA;AACA;AACA,IAAI,4EAAU;AACd;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B,yBAAyB,4EAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAQ;AAChB;AACA;AACA;AACA,QAAQ,4EAAQ;AAChB;AACA,KAAK;AACL,MAAM,4EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS,6CAA6C;AACrE;AACA;AACA,8BAA8B,4EAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6EAAO;AAC7B,kBAAkB,4EAAS;AAC3B,iCAAiC,4EAAM;AACvC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA,eAAe,4EAAc;AAC7B;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,4EAAc;AAC/B,mBAAmB,oEAAE;AACrB,OAAO;AACP;AACA,iBAAiB,4EAAc;AAC/B,mBAAmB,oEAAE;AACrB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAM;AAC3B;AACA;AACA,WAAW,mCAAmC;AAC9C,IAAI,4EAAU;AACd;AACA;AACA;AACA,iBAAiB,4EAAkB;AACnC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,kBAAkB,8EAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAO;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB;AAC7B,mBAAmB,4EAAM;AACzB,oBAAoB,4EAAM;AAC1B,qBAAqB,4EAAM;AAC3B;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAI;AACN;AACA,EAAE,4EAAI;AACN;AACA,EAAE,4EAAI;AACN,IAAI,4EAAI;AACR,IAAI,4EAAI;AACR,IAAI,4EAAI;AACR,GAAG;AACH;AACA;AACA,EAAE,4EAAI;AACN;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,UAAU;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB,SAAS,+BAA+B,aAAa;AACrD;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO,UAAU;AACjB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,sCAAsC;AAC/C,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO,6EAAW;AAClB,OAAO,6EAAW;AAClB;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sCAAsC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,wBAAwB;AACnC,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAa;AACrC;AACA;AACA;AACA,kBAAkB,4EAAM;AACxB;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,qBAAqB,4EAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAS;AACf;AACA;AACA,MAAM,8EAAS;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8EAAa;AACxC;AACA;AACA;AACA,QAAQ,8EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,8EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,2DAA2D;AACtE,qBAAqB,4EAAM;AAC3B;AACA;AACA,sBAAsB,8EAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAa;AACrC;AACA;AACA;AACA;AACA,mBAAmB,4EAAM;AACzB;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,KAAK;AAChB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAqB;AAC3B;AACA;AACA;AACA;AACA,MAAM,8EAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,6EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,sEAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,sEAAI;AACtB,kBAAkB,sEAAI;AACtB,mBAAmB,sEAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6EAAa;AAC1B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,sEAAI;AACtB,iBAAiB,sEAAI;AACrB,oBAAoB,sEAAI;AACxB,cAAc,sEAAI;AAClB,mBAAmB,sEAAI;AACvB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,6EAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA,oCAAoC,6EAAc;AAClD;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,2CAA2C;AACpD;AACA;AACA,SAAS,qBAAqB;AAC9B,sBAAsB,6EAAa;AACnC,sBAAsB,6EAAa;AACnC,wBAAwB,6EAAa;AACrC,gBAAgB,8EAAO;AACvB;AACA;AACA,aAAa,YAAY,GAAG,YAAY;AACxC;AACA;AACA;AACA,cAAc,8EAAO;AACrB;AACA,OAAO,6EAAa;AACpB;AACA;AACA;AACA;AACA;AACA,0CAA0C,6EAAW;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,QAAQ,6EAAY;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,6EAAa,cAAc,6EAAc;AACjE;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA,QAAQ,6EAAY;AACpB;AACA;AACA;AACA,QAAQ,eAAe;AACvB,gBAAgB,6DAA6D;AAC7E;AACA;AACA,QAAQ,6EAAY;AACpB;AACA,KAAK;AACL,kBAAkB,WAAW;AAC7B;AACA,GAAG;AACH,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,uBAAuB;AAClC,SAAS,SAAS;AAClB;AACA;AACA;AACA,sBAAsB,6EAAI;AAC1B,sBAAsB,6EAAI;AAC1B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAkB;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAY;AACvB;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,4EAAK;AACzD;AACA;AACA;AACA,4BAA4B,4EAAK;AACjC;AACA;AACA,gBAAgB,4EAAe,gDAAgD,4EAAK;AACpF,uBAAuB,4EAAK;AAC5B;AACA;AACA;AACA,gBAAgB,wCAAwC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,4EAAe;AAClC,cAAc,yCAAyC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA,kDAAkD,4EAAK;AACvD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAkB;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6EAAY;AACnD;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAK;AAC1B,qBAAqB,4EAAK,WAAW,4EAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4EAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B,WAAW,6EAAc,sCAAsC,qEAAQ;AACvE;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA,SAAS,6EAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA,mBAAmB,4EAAM;AACzB;AACA;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,SAAS,eAAe,aAAa;AACrC,8BAA8B,QAAQ;AACtC;AACA,mBAAmB,4EAAM;AACzB,WAAW,0CAA0C;AACrD,WAAW,cAAc;AACzB,SAAS,6EAAa;AACtB,sBAAsB,4EAAS;AAC/B;AACA;AACA;AACA,IAAI,4EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA,qDAAqD,oEAAG;AACxD,GAAG;AACH;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4EAAQ;AAC5B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oEAAG;AAC/B;AACA,WAAW,8EAAe,2BAA2B,6EAAS;AAC9D;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAM;AAC7B;AACA;AACA;AACA;AACA,wBAAwB,4EAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mCAAmC;AACnD,WAAW,oCAAoC;AAC/C,WAAW,qCAAqC;AAChD,SAAS,uCAAuC;AAChD,QAAQ,wCAAwC;AAChD,SAAS,yCAAyC;AAClD,UAAU,uCAAuC;AACjD,YAAY,uCAAuC;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAa;AACnB;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA,OAAO,6EAAc;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6EAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,WAAW,OAAO,GAAG,6EAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,IAAI,6EAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAc;AACxB,UAAU,6EAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,YAAY,6EAAW;AACvB,UAAU,6EAAW;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAc;AACnC;AACA,uBAAuB,6EAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAQ;AAC/B;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAY;AACvB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,6EAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,SAAS,kBAAkB;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6EAAa;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEspB","file":"x","sourcesContent":["/*!\n * Chart.js v3.1.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as _elementsEqual, ac as getAngleFromPoint, ad as _readValueToProps, ae as _updateBezierControlPoints, af as _computeSegments, ag as _boundSegments, ah as _steppedInterpolation, ai as _bezierInterpolation, aj as _pointInLine, ak as _steppedLineTo, al as _bezierCurveTo, am as drawPoint, an as addRoundedRectPath, ao as toTRBL, ap as toTRBLCorners, aq as _boundSegment, ar as _normalizeAngle, as as getRtlAdapter, at as overrideTextDirection, au as _textX, av as restoreTextDirection, aw as noop, ax as distanceBetweenPoints, ay as _setMinAndMaxByKey, az as niceNum, aA as almostWhole, aB as almostEquals, aC as _decimalPlaces, aD as _longestText, aE as _filterBetween, aF as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n    if (axisWidth) {\n      const lastLineWidth = borderOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine(\n        {x: x1, y: y1},\n        {x: x2, y: y2},\n        {width: axisWidth, color: borderOpts.borderColor});\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.1.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        source.line.updateControlPoints(area);\n        if (options.drawTime === 'beforeDatasetsDraw') {\n          drawfill(chart.ctx, source, area);\n        }\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {parser, round, isoWeekday} = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]}}